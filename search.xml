<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL自学习笔记</title>
      <link href="/2022/04/24/MySQL/"/>
      <url>/2022/04/24/MySQL/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p><strong>该文章为本人学习MySQL的学习笔记，还有许多不足之处，仅供参考，接下来会陆续更新。</strong></p><h2 id="一、DML"><a href="#一、DML" class="headerlink" title="一、DML"></a>一、DML</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 对数据库的常用操作</span></span><br><span class="line"><span class="keyword">show</span> databases; <span class="comment">-- 查看所有数据库</span></span><br><span class="line"><span class="keyword">create</span> database if <span class="keyword">not</span> <span class="keyword">exists</span> mybd1; <span class="comment">-- 创建数据库</span></span><br><span class="line">use mydb1; <span class="comment">-- 切换（选择要操作的）数据库</span></span><br><span class="line"><span class="keyword">drop</span> database if <span class="keyword">exists</span> mydb1; <span class="comment">-- 删除数据库</span></span><br><span class="line"><span class="keyword">alter</span> database mydb1 <span class="type">character</span> <span class="keyword">set</span> utf8; <span class="comment">-- 修改数据库编码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> student(</span><br><span class="line">sid <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    gender <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    age <span class="type">int</span>,</span><br><span class="line">    birth <span class="type">date</span>,</span><br><span class="line">    address <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 对表结构的常用操作</span></span><br><span class="line"><span class="keyword">show</span> tables; <span class="comment">-- 查看当前数据库的所有表名称</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> student; <span class="comment">-- 查看指定某个表的创建语句</span></span><br><span class="line"><span class="keyword">desc</span> student; <span class="comment">-- 查看表结构</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> student; <span class="comment">-- 删除表</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改表添加列</span></span><br><span class="line">#格式：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 列名 类型（长度）[约束];</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">add</span> <span class="string">&#x27;dept&#x27;</span> <span class="type">varchar</span>(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改列名和类型</span></span><br><span class="line">#格式：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 change 旧列名 新列名 类型（长度） [约束];</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student change <span class="string">&#x27;dept&#x27;</span> department <span class="type">varchar</span>(<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改表删除列</span></span><br><span class="line">#格式：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> 列名;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">drop</span> department;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改表名</span></span><br><span class="line">#格式：rename <span class="keyword">table</span> 表名 <span class="keyword">to</span> 新表名</span><br><span class="line">rename <span class="keyword">table</span> <span class="string">&#x27;student&#x27;</span> <span class="keyword">to</span> stu;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据插入</span></span><br><span class="line">#格式<span class="number">1</span>：<span class="keyword">insert</span> <span class="keyword">into</span> 表(列名<span class="number">1</span>,列名<span class="number">2</span>,...) <span class="keyword">values</span>(值<span class="number">1</span>,值<span class="number">2</span>,...); <span class="comment">-- 向表中指定列插入数据</span></span><br><span class="line">#格式<span class="number">2</span>：<span class="keyword">insert</span> <span class="keyword">into</span> 表 <span class="keyword">values</span>(值<span class="number">1</span>,值<span class="number">2</span>,值<span class="number">3</span>,...); <span class="comment">-- 向表中所有列插入数据(插入一行数据)</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(sid,name,gender,age,birth,address,score) <span class="keyword">values</span>(<span class="number">1001</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;1996-12-23&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,<span class="number">83.5</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">1001</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;1996-12-23&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,<span class="number">83.5</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据修改</span></span><br><span class="line">#格式<span class="number">1</span>：<span class="keyword">update</span> 表名 <span class="keyword">set</span> 字段名<span class="operator">=</span>值,字段名<span class="operator">=</span>值...;</span><br><span class="line">#格式<span class="number">2</span>：<span class="keyword">update</span> 表名 <span class="keyword">set</span> 字段名<span class="operator">=</span>值,字段名<span class="operator">=</span>值... <span class="keyword">where</span> 条件;</span><br><span class="line"><span class="comment">-- 将所有学生的地址修改为重庆</span></span><br><span class="line"><span class="keyword">update</span> student <span class="keyword">set</span> address <span class="operator">=</span> <span class="string">&#x27;重庆&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将id为1004的学生的地址修改为北京</span></span><br><span class="line"><span class="keyword">update</span> student <span class="keyword">set</span> address <span class="operator">=</span><span class="string">&#x27;北京&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1004</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将id为1005的学生的地址修改为北京，成绩修改为100</span></span><br><span class="line"><span class="keyword">update</span> student <span class="keyword">set</span> address <span class="operator">=</span> <span class="string">&#x27;广州&#x27;</span>,score<span class="operator">=</span><span class="number">100</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1005</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据删除</span></span><br><span class="line">#格式<span class="number">1</span>：<span class="keyword">delete</span> <span class="keyword">from</span> 表名 [<span class="keyword">where</span> 条件];</span><br><span class="line">#格式<span class="number">2</span>：<span class="keyword">truncate</span> <span class="keyword">table</span> 表名 (或者<span class="keyword">truncate</span> 表名);</span><br><span class="line"><span class="comment">-- 注意：delete和truncate原理不同，delete只是删除内容，而truncate类似于drop table，可以理解为是将整个表删除然后再创建该表;</span></span><br><span class="line"><span class="comment">-- 删除sid为1004的学生数据</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student <span class="keyword">where</span> sid <span class="operator">=</span> <span class="number">1004</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除表所有数据</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清空表数据</span></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> student;</span><br><span class="line"><span class="keyword">truncate</span> student;</span><br></pre></td></tr></table></figure><h2 id="二、约束"><a href="#二、约束" class="headerlink" title="二、约束"></a>二、约束</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 主键约束 (关键字：primary key)</span></span><br><span class="line"><span class="comment">-- 主键约束是一列或者多列的组合，其值能唯一地标识表中地每一行，方便再RDBMS中尽快的找到某一行。</span></span><br><span class="line"><span class="comment">-- 主键约束相当于唯一约束 + 非空约束的组合，主键约束列不允许重复，也不允许出现空值</span></span><br><span class="line"><span class="comment">-- 每个表中最多只允许有一个主键约束</span></span><br><span class="line">#格式<span class="number">1</span>：</span><br><span class="line"><span class="comment">/*create table 表名(</span></span><br><span class="line"><span class="comment">&lt;字段名&gt;&lt;数据类型&gt; primary key</span></span><br><span class="line"><span class="comment">);*/</span></span><br><span class="line"></span><br><span class="line">#格式<span class="number">2</span>：</span><br><span class="line"><span class="comment">/*create table 表名(</span></span><br><span class="line"><span class="comment">...</span></span><br><span class="line"><span class="comment">[constraint&lt;约束名&gt;] primary key[字段名,...]</span></span><br><span class="line"><span class="comment">);*/</span></span><br><span class="line"></span><br><span class="line">#格式<span class="number">3</span>：</span><br><span class="line"><span class="comment">/*create table 表名(</span></span><br><span class="line"><span class="comment">...</span></span><br><span class="line"><span class="comment">);</span></span><br><span class="line"><span class="comment">alter table &lt;表名&gt; add primary key(字段列表);*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp1(</span><br><span class="line">eid <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    deptId <span class="type">int</span>,</span><br><span class="line">    salary <span class="keyword">double</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp1(</span><br><span class="line">eid <span class="type">int</span> <span class="keyword">primary</span> key,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    deptId <span class="type">int</span>,</span><br><span class="line">    salary <span class="keyword">double</span>,</span><br><span class="line">    <span class="keyword">constraint</span> pk1 <span class="keyword">primary</span> key(id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp1(</span><br><span class="line">eid <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    deptId <span class="type">int</span>,</span><br><span class="line">    salary <span class="keyword">double</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp1 <span class="keyword">add</span> <span class="keyword">primary</span> key(eid);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除主键约束</span></span><br><span class="line">#格式：<span class="keyword">alter</span> <span class="keyword">table</span> <span class="operator">&lt;</span>数据表名<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">primary</span> key;</span><br><span class="line"><span class="comment">-- 删除单列主键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp1 <span class="keyword">drop</span> <span class="keyword">primary</span> key;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除联合主键约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp1 <span class="keyword">drop</span> <span class="keyword">primary</span> key;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 自增长约束 (关键字：auto_increment)</span></span><br><span class="line"><span class="comment">-- 这个主键的值就不需要用户输入数据了，而由数据库系统根据定义自动赋值。每增加一条记录，主键会自动以相同的步长进行增长</span></span><br><span class="line"><span class="comment">-- 通过添加auto_increment属性来实现主键自增长，所有auto_increment是和主键约束(primary key)一起使用的</span></span><br><span class="line"><span class="comment">-- 默认情况下，auto_increment的初始值是1，每新增一条记录，字段值自动加1</span></span><br><span class="line"><span class="comment">-- 一个表中只能有一个字段使用auto_increment约束，且该字段必须有唯一索引，以避免序号重复（即为主键约束或主键的一部分）</span></span><br><span class="line"><span class="comment">-- auto_increment约束的字段必须具备NOT NULL属性，字段只能是整数类型（TINYINT、SMALLINT、INT、BIGINT）等，字段的最大值受该字段的数据类型约束，如果达到上限，auto_increment就会失效。</span></span><br><span class="line"><span class="comment">-- 注意：delete数据之后自增长从断点开始，truncate数据之后自动增长从默认起始值开始</span></span><br><span class="line">#格式<span class="number">1</span>：</span><br><span class="line"><span class="comment">/*create table 表名(</span></span><br><span class="line"><span class="comment">&lt;字段名&gt;&lt;数据类型&gt; auto_increment</span></span><br><span class="line"><span class="comment">)auto_increment=自增长初始值;*/</span></span><br><span class="line"></span><br><span class="line">#格式<span class="number">2</span>：</span><br><span class="line"><span class="comment">/*create table 表名(</span></span><br><span class="line"><span class="comment">&lt;字段名&gt;&lt;数据类型&gt; auto_increment</span></span><br><span class="line"><span class="comment">);</span></span><br><span class="line"><span class="comment">alter table 表名 auto_increment = 1;*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">)auto_increment<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_user auto_increment <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 非空约束 (关键字：NOT NULL)</span></span><br><span class="line"><span class="comment">-- 格式1：</span></span><br><span class="line"><span class="comment">/*create table 表名(</span></span><br><span class="line"><span class="comment">&lt;字段名&gt;&lt;数据类型&gt; not null</span></span><br><span class="line"><span class="comment">);*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 格式2：</span></span><br><span class="line"><span class="comment">/*create table 表名(</span></span><br><span class="line"><span class="comment">&lt;字段名&gt;&lt;数据类型&gt; </span></span><br><span class="line"><span class="comment">);</span></span><br><span class="line"><span class="comment">alter table 表名 modify 字段 类型 not null;*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    address <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    address <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_user modify name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除非空约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_user modify name <span class="type">varchar</span>(<span class="number">20</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 唯一约束 (关键字：unique)</span></span><br><span class="line"><span class="comment">-- 唯一约束是指所有记录中字段的值不能重复出现</span></span><br><span class="line">#格式<span class="number">1</span>：</span><br><span class="line"><span class="comment">/*create table 表名(</span></span><br><span class="line"><span class="comment">&lt;字段名&gt;&lt;数据类型&gt; unique</span></span><br><span class="line"><span class="comment">);*/</span></span><br><span class="line"></span><br><span class="line">#格式<span class="number">2</span>：</span><br><span class="line"><span class="comment">/*alter table 表名 add constraint 约束名 unique(列);*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    phone_number <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">unique</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    phone_number <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_user <span class="keyword">add</span> <span class="keyword">constraint</span> unique_pn <span class="keyword">unique</span>(phone_number);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除唯一约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_user <span class="keyword">drop</span> index unique_pn;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 默认约束 (关键字：default)</span></span><br><span class="line"><span class="comment">-- 格式1：</span></span><br><span class="line"><span class="comment">/*create table 表名(</span></span><br><span class="line"><span class="comment">&lt;字段名&gt;&lt;数据类型&gt; default &lt;默认值&gt;</span></span><br><span class="line"><span class="comment">);*/</span></span><br><span class="line"></span><br><span class="line">#格式<span class="number">2</span>：</span><br><span class="line"><span class="comment">/*alter table 表名 modify 列名 类型 default 默认值;*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    address <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">default</span> <span class="string">&#x27;北京&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    address <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_user modify address <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">default</span> <span class="string">&#x27;北京&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除默认约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_user modify address <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">default</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 零填充约束 (关键字：zerofill)</span></span><br><span class="line"><span class="comment">-- 插入数据时，当该字段的值的长度小于定义长度时，会再该值的前面补上相应的0</span></span><br><span class="line">#格式：</span><br><span class="line"><span class="comment">/*create table 表名(</span></span><br><span class="line"><span class="comment">&lt;字段名&gt;&lt;数据类型&gt; zerofill</span></span><br><span class="line"><span class="comment">);*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line">id <span class="type">int</span> zerofill,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除零填充约束</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_user modify id <span class="type">int</span>;</span><br></pre></td></tr></table></figure><h2 id="三、DQL"><a href="#三、DQL" class="headerlink" title="三、DQL"></a>三、DQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 简单查询</span></span><br><span class="line"><span class="comment">-- 查询所有商品</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询商品名和商品价格</span></span><br><span class="line"><span class="keyword">select</span> pname,price <span class="keyword">from</span> product;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 别名查询,使用的关键字是as(as可以省略)</span></span><br><span class="line"><span class="comment">-- 1.表别名</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">as</span> p;</span><br><span class="line"><span class="comment">-- 2.列别名</span></span><br><span class="line"><span class="keyword">select</span> pname <span class="keyword">as</span> pn <span class="keyword">from</span> product;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 去重复值</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> price <span class="keyword">from</span> product;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询结果是表达式(运算查询)：将所有商品的价格+10元进行显示</span></span><br><span class="line"><span class="keyword">select</span> pname,price<span class="operator">+</span><span class="number">10</span> <span class="keyword">new</span> price <span class="keyword">from</span> product;</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/DQL-1.png" alt="DQL-1"></p><p><img src="/img/MySQL/DQL-2.png" alt="DQL-2"></p><p><img src="/img/MySQL/DQL-3.png" alt="DQL-3"></p><p><img src="/img/MySQL/DQL-4.png" alt="DQL-4"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询商品名称为“海尔洗衣机”的商品所以信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> pname <span class="operator">=</span> <span class="string">&#x27;海尔洗衣机&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询价格800商品</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> price <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询价格不是800的所有商品</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> price <span class="operator">!=</span> <span class="number">800</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> price <span class="operator">&lt;&gt;</span> <span class="number">800</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> <span class="keyword">not</span>(price <span class="operator">=</span> <span class="number">800</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询商品价格大于60元的所有商品信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> price <span class="operator">&gt;=</span> <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询商品价格在200到1000之间所有商品</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> price <span class="keyword">between</span> <span class="number">200</span> <span class="keyword">and</span> <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> price <span class="operator">&gt;=</span> <span class="number">200</span> <span class="keyword">and</span> price <span class="operator">&lt;=</span><span class="number">1000</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> price <span class="operator">&gt;=</span> <span class="number">200</span> <span class="operator">&amp;&amp;</span> price <span class="operator">&lt;=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询商品价格是200或800的所有商品</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> price <span class="keyword">in</span>(<span class="number">200</span>,<span class="number">800</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> price <span class="operator">=</span> <span class="number">200</span> <span class="keyword">or</span> price <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> price <span class="operator">=</span> <span class="number">200</span> <span class="operator">||</span> price <span class="operator">=</span> <span class="number">800</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询含&#x27;鞋&#x27;字的所有商品</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> producr <span class="keyword">where</span> pname <span class="keyword">like</span> <span class="string">&#x27;%鞋%&#x27;</span>; <span class="comment">-- %是用来匹配任意字符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询以&#x27;海&#x27;开头的所有商品</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> pname <span class="keyword">like</span> <span class="string">&#x27;海%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询第二个字为&#x27;蔻&#x27;的所有商品</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> pname <span class="keyword">like</span> <span class="string">&#x27;_蔻&#x27;</span>; <span class="comment">-- _是用来匹配一个字符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询category_id为NULL的商品</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> category_id <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询category_id不为NULL分类的商品</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">where</span> category_id <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用least求最小值</span></span><br><span class="line"><span class="keyword">select</span> least(<span class="number">10</span>,<span class="number">5</span>,<span class="number">20</span>) <span class="keyword">as</span> min_number;  <span class="comment">-- 如果求最小值时，有个值为NULL，则不会进行比较，结果直接为NULL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用greates求最大值</span></span><br><span class="line"><span class="keyword">select</span> greatest(<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>) <span class="keyword">as</span> max_number; <span class="comment">-- 如果求最大值时，有个值为NULL，则不会进行比较，结果直接为NULL</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 排序查询</span></span><br><span class="line"><span class="comment">-- order by 子句来设定你想按哪个字段那种方式来进行排序，再放回搜索结果</span></span><br><span class="line"><span class="comment">-- 1.asc代表升序，desc代表降序，如果不写默认升序</span></span><br><span class="line"><span class="comment">-- 2.order by用于子句中可以支持单个字段，多个字段，表达式，函数，别名</span></span><br><span class="line"><span class="comment">-- 3.order by子句，放在查询语句最后面。LIMIT子句除外</span></span><br><span class="line">#格式：</span><br><span class="line"><span class="comment">/*select 字段名1,字段名2,... from 表名 order by 字段名1 [asc|desc], 字段名2[asc|desc]...*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1.使用价格排序（降序）</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">order</span> <span class="keyword">by</span> price <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.在价格排序(降序)的基础上，以分类排序(降序)</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">desc</span>,category_id <span class="keyword">asc</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3.显示商品价格(去重复),并排序(降序)</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> price <span class="keyword">from</span> product <span class="keyword">order</span> <span class="keyword">by</span> price <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 聚合排序</span></span><br><span class="line"><span class="comment">-- 聚合函数查询是纵向查询。它是对一列的值进行计算，然后放回一个单一的值；另外聚合函数会忽略空值</span></span><br><span class="line"><span class="comment">-- 1.count函数对null值的处理</span></span><br><span class="line"><span class="comment">-- 如果count函数的参数为星号(*)，则统计所有记录的个数。而如果参数为某字段，不统计含null值的记录个数。</span></span><br><span class="line"><span class="comment">-- 2.sum和avg函数对null值的处理</span></span><br><span class="line"><span class="comment">-- 这两个函数忽略null值的存在，就好像该记录不存在一样。</span></span><br><span class="line"><span class="comment">-- 3.max和min函数对null值的处理</span></span><br><span class="line"><span class="comment">-- max和min两个函数同样忽略null值的存在。</span></span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/DQL-5.png" alt="DQL-5"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.查询商品的总条数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(pid) <span class="keyword">from</span> product;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> product;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.查询价格大于200商品的总条数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(pid) <span class="keyword">from</span> product <span class="keyword">where</span> price <span class="operator">&gt;</span> <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3.查询分类为&#x27;c001&#x27;的所有商品的总和</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(price) <span class="keyword">from</span> product <span class="keyword">where</span> category_id <span class="operator">=</span> <span class="string">&#x27;c001&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.查询商品的最大价格</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(price) <span class="keyword">from</span> product;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5.查询商品的最小价格</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(price) <span class="keyword">from</span> product;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6.查询分类为&#x27;c002&#x27;所有商品的平均价格</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(price) <span class="keyword">from</span> product <span class="keyword">where</span> category_id <span class="operator">=</span> <span class="string">&#x27;c002&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 分组查询</span></span><br><span class="line"><span class="comment">-- 分组查询是指使用group by字句对查询信息进行分组。</span></span><br><span class="line"><span class="comment">-- 如果要进行分组的话，则select子句之后，只能出现分组的字段和统计函数，其他的字段不能出现;</span></span><br><span class="line"><span class="comment">-- 格式：</span></span><br><span class="line"><span class="comment">/*select 字段1,字段2... from 表名 group by 分组字段 having 分组交换;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 统计各个分类商品的个数</span></span><br><span class="line"><span class="keyword">select</span> category_id,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> product <span class="keyword">group</span> <span class="keyword">by</span> category_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 统计各分类商品的个数，且只显示个数大于4的信息</span></span><br><span class="line"><span class="keyword">select</span> category_id,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> product gorup <span class="keyword">by</span> category_id <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">4</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 分页查询</span></span><br><span class="line"><span class="comment">-- 分页查询在项目开发中常见，由于数据量很大，显示屏长度有限，因此对数据需要采取分页显示方式，例如数据共有30条，每页显示5条，第一页显示1-5条，第二页显示6-10条。</span></span><br><span class="line">#格式：</span><br><span class="line">#方式<span class="number">1</span>：显示前n条</span><br><span class="line"><span class="comment">/*select 字段1,字段2... from 表名 limit n;*/</span></span><br><span class="line"></span><br><span class="line">#方式<span class="number">2</span>：分页显示</span><br><span class="line"><span class="comment">/*select 字段1,字段2... from 表名 limit m,n;*/</span></span><br><span class="line"><span class="comment">-- m：整数，表示从第几条索引开始，计算方式(当前页-1)*每页显示条数</span></span><br><span class="line"><span class="comment">-- n：整数，表示查询多少条数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询product表的前5条记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product limit <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 从第4条开始显示，显示5条</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product limit <span class="number">3</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- insert into select 语句</span></span><br><span class="line"><span class="comment">-- 将一张表的数据导入到另一张表中，可以使用insert into select语句</span></span><br><span class="line">#格式：</span><br><span class="line">#方式<span class="number">1</span>：<span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span>(field1,field2,...) <span class="keyword">select</span> <span class="keyword">values</span>,<span class="keyword">values</span>,... <span class="keyword">from</span> table1</span><br><span class="line"></span><br><span class="line">#方式<span class="number">2</span>：<span class="keyword">insert</span> <span class="keyword">into</span> table2 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注意：要求目标表Table2必须存在</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> product2(pname,price) <span class="keyword">select</span> pname,price <span class="keyword">from</span> product;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product2;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 正则表达式</span></span><br><span class="line"><span class="comment">-- 正则表达式(regular expression)描述了一种字符串匹配的规则，正则表达式本身就是一个字符串，使用这个字符串来描述，用来定义匹配规则，匹配一系列符合某个句法规则的字符串。正则表达式通常被用来检索、替换那些符合某个规则的文本。</span></span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/DQL-6.png" alt="DQL-6"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 正则表达式</span></span><br><span class="line"><span class="comment">-- ^在字符串开始处进行匹配</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;abc&#x27;</span> regexp <span class="string">&#x27;^a&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- $在字符串末尾开始匹配</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;abc&#x27;</span> regexp <span class="string">&#x27;a$&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;abc&#x27;</span> regexp <span class="string">&#x27;c$&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- . 匹配任意字符,可以匹配除了换行符之外的任意字符</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;abc&#x27;</span> regexp <span class="string">&#x27;.b&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;abc&#x27;</span> regexp <span class="string">&#x27;.c&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;abc&#x27;</span> regexp <span class="string">&#x27;a.&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- [...] 匹配括号内的任意单个字符</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;abc&#x27;</span> regexp <span class="string">&#x27;[xyz]&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;abc&#x27;</span> regexp <span class="string">&#x27;[xaz]&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- [^...]注意^符号只有在[]内才是取反的意思，在别的地方都是表示开始处匹配</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;a&#x27;</span> regexp <span class="string">&#x27;[^abc]&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;x&#x27;</span> regexp <span class="string">&#x27;[^abc]&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;abc&#x27;</span> regexp <span class="string">&#x27;[^a]&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- a*匹配0个或多个a，包括空字符串。可以作为占位符使用，有没有指定字符都可以匹配到数据 </span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;a&#x27;</span> regexp <span class="string">&#x27;[^abc]&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;x&#x27;</span> regexp <span class="string">&#x27;[^abc]&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;abc&#x27;</span> regexp <span class="string">&#x27;[^a]&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- a+匹配1个或者多个a，但是不包括空字符</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;stab&#x27;</span> regexp <span class="string">&#x27;.ta+b&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;stb&#x27;</span> regexp <span class="string">&#x27;.ta+b&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- a?匹配0个或1个a</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;stb&#x27;</span> regexp <span class="string">&#x27;.ta?b&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;stab&#x27;</span> regexp <span class="string">&#x27;.ta?b&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;staab&#x27;</span> regexp <span class="string">&#x27;.ta?b&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- a1|a2匹配a1或者a2</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;a&#x27;</span> regexp <span class="string">&#x27;a|b&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;b&#x27;</span> regexp <span class="string">&#x27;a|b&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;b&#x27;</span> regexp <span class="string">&#x27;^(a|b)&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;a&#x27;</span> regexp <span class="string">&#x27;^(a|b)&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- a&#123;m&#125;匹配m个a</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;auuuuc&#x27;</span> regexp <span class="string">&#x27;au&#123;4&#125;c&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;auuuuc&#x27;</span> regexp <span class="string">&#x27;au&#123;3&#125;c&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- a&#123;m,&#125;匹配m个或者更多个a</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;auuuuc&#x27;</span> regexp <span class="string">&#x27;au&#123;3,&#125;c&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;auuuuc&#x27;</span> regexp <span class="string">&#x27;au&#123;4,&#125;c&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;auuuuc&#x27;</span> regexp <span class="string">&#x27;au&#123;5,&#125;c&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- a&#123;m,n&#125;匹配m到n个a，包含m和n</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;auuuuc&#x27;</span> regexp <span class="string">&#x27;au&#123;3,5&#125;c&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;auuuuc&#x27;</span> regexp <span class="string">&#x27;au&#123;4,5&#125;c&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;auuuuc&#x27;</span> regexp <span class="string">&#x27;au&#123;5,10&#125;c&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- (abc) abc作为一个序列匹配，不用括号括起来都是用单个字符去匹配，如果要把多个字符作为一个整体去匹配就需要用到括号，所以括号适合上面的所有情况。</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;xababy&#x27;</span> regexp <span class="string">&#x27;x(abab)y&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;xababy&#x27;</span> regexp <span class="string">&#x27;x(ab)*y&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;xababy&#x27;</span> regexp <span class="string">&#x27;x(ab)&#123;1,2&#125;y&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="四、多表操作"><a href="#四、多表操作" class="headerlink" title="四、多表操作"></a>四、多表操作</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 多表之间的关系可以概括为：一对一、一对多/多对一、多对多</span></span><br><span class="line"><span class="comment">-- 外键约束(foreign key)是表的一个特殊字段，经常与主键约束一起使用。对于两个具有关联关系的表而言，相关联字段中主键所在的表就是主表（父表），外键所在的表就是从表（子表）。</span></span><br><span class="line"><span class="comment">-- 定义一个主键时，需要遵守下列规则：</span></span><br><span class="line"><span class="comment">-- 主表必须已经存在于数据库中，或者是当前正在创建的表</span></span><br><span class="line"><span class="comment">-- 必须为主表定义主键</span></span><br><span class="line"><span class="comment">-- 主键不能包含空值，但允许在外键中出现空值。也就是说，只要外键的每个非空值出现在指定的主键中，这个外键的内容就是正确的。</span></span><br><span class="line"><span class="comment">-- 在主表的表名后面指定列名或列名组合。这个列或列的组合必须是主表的主键或候选键。</span></span><br><span class="line"><span class="comment">-- 外键中列的数目必须和主表的主键中列的数目相同。</span></span><br><span class="line"><span class="comment">-- 外键中列的数据类型必须和主表主键中对应列的数据类型相同。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建外键约束</span></span><br><span class="line">#格式<span class="number">1</span>：</span><br><span class="line"><span class="comment">/*[constraint &lt;外键名&gt;] foreign key 字段名 [,字段名2,...] references &lt;主键名&gt; 主键列1 [,主键列2,...];*/</span></span><br><span class="line"></span><br><span class="line">#格式<span class="number">2</span>：</span><br><span class="line"><span class="comment">/*alter table &lt;数据表名&gt; add constraint &lt;外键名&gt; foreign key(&lt;列名&gt;) references &lt;主键名&gt;(&lt;列名&gt;);*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 格式1：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> dept(</span><br><span class="line">detpno <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">primary</span> key,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> emp(</span><br><span class="line">eid <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">primary</span> key,</span><br><span class="line">    ename <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    age <span class="type">int</span>,</span><br><span class="line">    dept_id <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="keyword">constraint</span> emp_fk <span class="keyword">foreign</span> key (dept_id) <span class="keyword">references</span> dept (detpno)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 格式2：</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> dept(</span><br><span class="line">detpno <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">primary</span> key,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> emp(</span><br><span class="line">eid <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">primary</span> key,</span><br><span class="line">    ename <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">    age <span class="type">int</span>,</span><br><span class="line">    dept_id <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">constraint</span> emp_fk <span class="keyword">foreign</span> key(dept_id) <span class="keyword">references</span> dept(detpno);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除数据</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">注意：</span></span><br><span class="line"><span class="comment">1：主表的数据被从表依赖，不能删除，否则可以删除</span></span><br><span class="line"><span class="comment">2：从表的数据可以随便删除</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 外键约束限制的是对表的增、删、改</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> dept <span class="keyword">where</span> detpno <span class="operator">=</span> <span class="string">&#x27;1001&#x27;</span>; <span class="comment">-- 不可以删除</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> dept <span class="keyword">where</span> detpno <span class="operator">=</span> <span class="string">&#x27;1004&#x27;</span>; <span class="comment">-- 可以删除</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> emp <span class="keyword">where</span> eid <span class="operator">=</span> <span class="string">&#x27;7&#x27;</span>; <span class="comment">-- 可以删除</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除外键约束</span></span><br><span class="line"><span class="comment">-- 当一个表中不需要外键约束时，就需要从表中将其删除。外键约束一旦删除，就会解除主表和从表间的关联关系</span></span><br><span class="line">#格式：</span><br><span class="line"><span class="comment">/*alter table &lt;表名&gt; drop foreign key &lt;外键约束&gt;;*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">drop</span> <span class="keyword">foreign</span> key dept_id fk;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 外键约束-多对多关系</span></span><br><span class="line"><span class="comment">-- 在多对多关系中，A表的一行对应B的多行，B表的一行对应A表的多行，我们要新增加一个中间表，来建立多对多关系。</span></span><br><span class="line"><span class="comment">-- 学生表和课程表（多对多）</span></span><br><span class="line"><span class="comment">-- 1.创建学生表student（左侧主表）</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> student(</span><br><span class="line">sid <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>),</span><br><span class="line">age <span class="type">int</span>,</span><br><span class="line">gender <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.创建课程表course（右侧主表）</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> course(</span><br><span class="line">cid <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">cidname <span class="type">varchar</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3.创建中间表student_course/score（从表）</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> score(</span><br><span class="line">sid <span class="type">int</span>,</span><br><span class="line">cid <span class="type">int</span>,</span><br><span class="line">score <span class="keyword">double</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.建立外键约束(2次)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> score <span class="keyword">add</span> <span class="keyword">foreign</span> key(sid) <span class="keyword">references</span> student(sid);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> score <span class="keyword">add</span> <span class="keyword">foreign</span> key(cid) <span class="keyword">references</span> course(cid);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5.给学生表添加数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;小龙女&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;女&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;阿紫&#x27;</span>,<span class="number">19</span>,<span class="string">&#x27;女&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;周芷若&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6.给课程表添加数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> course <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;语文&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;数学&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;英语&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 7.给中间表添加数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> score <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">78</span>),(<span class="number">1</span>,<span class="number">2</span>,<span class="number">75</span>),(<span class="number">2</span>,<span class="number">1</span>,<span class="number">88</span>),(<span class="number">2</span>,<span class="number">3</span>,<span class="number">90</span>),(<span class="number">3</span>,<span class="number">2</span>,<span class="number">80</span>),(<span class="number">3</span>,<span class="number">3</span>,<span class="number">65</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 多表联合查询</span></span><br><span class="line"><span class="comment">-- 多表查询就是同时查询两个或两个以上的表，因为有的时候用户在查看数据的时候，需要显示的数据来自多张表。</span></span><br><span class="line"><span class="comment">-- 多表查询有以下分类</span></span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2-1.png" alt="多表查询-1"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 交叉连接查询</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">交叉连接查询返回被连接的两人表所有数据行的笛卡尔积</span></span><br><span class="line"><span class="comment">笛卡尔积可以理解为一张表的每一行去和另外一张表的任意一行进行匹配</span></span><br><span class="line"><span class="comment">假如A表有m行数据，B表有n行数据，则返回m*n行数据</span></span><br><span class="line"><span class="comment">笛卡尔积会产生很多冗余的数据，后期的其他查询可以在该集合的基础上进行条件筛选</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">#格式：</span><br><span class="line"><span class="comment">/*select * from 表1,表2,表3;*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept3,emp3;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 内连接查询</span></span><br><span class="line"><span class="comment">-- 内连接查询求多张表的交集</span></span><br><span class="line">#格式：</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">隐式内连接(SQL92标准)：select * from A,B where 条件;</span></span><br><span class="line"><span class="comment">显式内连接(SQL99标准)：select * from A inner join B on 条件;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询每个部门的是所属员工</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept3,emp3 <span class="keyword">where</span> dept3.deptno <span class="operator">=</span> emp3.dept_id;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept3 <span class="keyword">inner</span> <span class="keyword">join</span> emp3 <span class="keyword">on</span> dept3.deptno <span class="operator">=</span> emp3.dept_id; <span class="comment">-- inner可以省略</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询研发部和销售部的所属员工</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept3,emp3 <span class="keyword">where</span> dept3.deptno <span class="operator">=</span> emp3.dept_id <span class="keyword">and</span> name <span class="keyword">in</span>(<span class="string">&#x27;研发部&#x27;</span>,<span class="string">&#x27;销售部&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept3 <span class="keyword">join</span> emp3 <span class="keyword">on</span> dept3.deptno <span class="operator">=</span> emp3.dept_id <span class="keyword">and</span> name <span class="keyword">in</span>(<span class="string">&#x27;研发部&#x27;</span>,<span class="string">&#x27;销售部&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询每个部门的员工数，并升序排序</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">as</span> total_cnt <span class="keyword">from</span> dept3,emp3 <span class="keyword">where</span> dept3.deptno <span class="operator">=</span> emp3.dept_id <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> total_cnt;</span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">as</span> total_cnt <span class="keyword">from</span> dept3 <span class="keyword">join</span> emp3 <span class="keyword">on</span> dept3.deptno <span class="operator">=</span> emp3.dept_id <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> total_cnt;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询人数大于等于3的部门，并按照人数降序排序</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">as</span> total_cnt <span class="keyword">from</span> dept3,emp3 <span class="keyword">where</span> dept3.deptno <span class="operator">=</span> emp3.dept_id <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> total_cnt <span class="operator">&gt;=</span> <span class="number">3</span> <span class="keyword">order</span> <span class="keyword">by</span> total_cnt <span class="keyword">desc</span>;</span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">as</span> total_cnt <span class="keyword">from</span> dept3 <span class="keyword">join</span> emp3 <span class="keyword">on</span> dept3.deptno <span class="operator">=</span> emp3.dept_id <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> total_cnt <span class="operator">&gt;=</span> <span class="number">3</span> <span class="keyword">order</span> <span class="keyword">by</span> total_cnt <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2-2.png" alt="多表查询-2"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 左外连接：left outer join</span></span><br><span class="line"><span class="comment">/*select * from A left outer join B on 条件;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 右外连接：right outer join</span></span><br><span class="line"><span class="comment">/*select * from A right outer join B on 条件;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 满外连接：full outer join</span></span><br><span class="line"><span class="comment">/*select * from A full outer join B on 条件;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询哪些部门有员工，哪些部门没有员工</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept3 <span class="keyword">as</span> a <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> emp3 <span class="keyword">as</span> b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.dept_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询哪些员工有对应的部门，哪些没有</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept3 a <span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> emp3 b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.dept_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用union关键字实现左外连接和右外连接的并集</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept3 a <span class="keyword">left</span> <span class="keyword">join</span> emp3 b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.dept_id</span><br><span class="line"><span class="keyword">union</span> <span class="comment">-- union是将两个查询结果上下拼接，并去重</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept3 a <span class="keyword">right</span> <span class="keyword">join</span> emp3 b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.dept_id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept3 a <span class="keyword">left</span> <span class="keyword">join</span> emp3 b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.dept_id</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> <span class="comment">-- union all是将两个查询结果上下拼接，不去重</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept3 a <span class="keyword">right</span> <span class="keyword">join</span> emp3 b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.dept_id</span><br></pre></td></tr></table></figure><p><img src="/img/MySQL/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2-3.png" alt="多表查询-3"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 子查询</span></span><br><span class="line"><span class="comment">-- 查询年龄最大的员工信息，显示信息包含员工号、员工名字、员工年龄</span></span><br><span class="line"><span class="keyword">select</span> eid,ename,age <span class="keyword">from</span> emp3 <span class="keyword">where</span> age <span class="operator">=</span> (<span class="keyword">select</span> <span class="built_in">max</span>(age) <span class="keyword">from</span> emp3); <span class="comment">-- 单行单列</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询年研发部和销售部的员工信息，包含员工号、员工姓名</span></span><br><span class="line"><span class="keyword">select</span> eid,ename <span class="keyword">from</span> dept3 a <span class="keyword">join</span> emp3 b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.dept_id <span class="keyword">and</span> (name <span class="operator">=</span> <span class="string">&#x27;研发部&#x27;</span> <span class="keyword">or</span> name <span class="operator">=</span> <span class="string">&#x27;销售部&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> eid,ename <span class="keyword">from</span> emp3 <span class="keyword">where</span> dept_id <span class="keyword">in</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> dept3 <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;研发部&#x27;</span> <span class="keyword">or</span> name <span class="operator">=</span> <span class="string">&#x27;销售部&#x27;</span>); <span class="comment">-- 多行单列</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询研发部20岁以下的员工信息，包括员工号、员工名字、部门名字</span></span><br><span class="line"><span class="keyword">select</span> eid,ename,name <span class="keyword">from</span> dept3 a <span class="keyword">join</span> emp3 b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.dept_id <span class="keyword">and</span> (name <span class="operator">=</span> <span class="string">&#x27;研发部&#x27;</span> <span class="keyword">and</span> b.age <span class="operator">&lt;</span> <span class="number">20</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept3 <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;研发部&#x27;</span>) t1 <span class="keyword">join</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp3 <span class="keyword">where</span> age <span class="operator">&lt;</span> <span class="number">30</span>) t2 <span class="keyword">on</span> t1.deptno <span class="operator">=</span> t2.dept_id; <span class="comment">-- 多行多列</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACBS</title>
      <link href="/2022/04/21/ACBS/"/>
      <url>/2022/04/21/ACBS/</url>
      
        <content type="html"><![CDATA[<h1 id="ACBS"><a href="#ACBS" class="headerlink" title="ACBS"></a>ACBS</h1><hr><h3 id="注意：该软件在vivo手机上可能存在BUG，无法打开’知到’软件，且部分功能失效。"><a href="#注意：该软件在vivo手机上可能存在BUG，无法打开’知到’软件，且部分功能失效。" class="headerlink" title="注意：该软件在vivo手机上可能存在BUG，无法打开’知到’软件，且部分功能失效。"></a>注意：该软件在vivo手机上可能存在BUG，无法打开’知到’软件，且部分功能失效。</h3><hr><h2 id="基本信息："><a href="#基本信息：" class="headerlink" title="基本信息："></a>基本信息：</h2><p><strong>作者：Small-J ；</strong></p><p><strong>开发语言：JavaScript ；</strong></p><p><strong>开发软件：VsCode、Auto.js ；</strong></p><p><strong>测试机型：HUAWEI p30 （分辨率：(1080，2340)）；</strong></p><p><strong>软件基本信息：</strong></p><p>​<strong>1、该软件为’知到‘（智慧树）刷课软件；</strong></p><p>​<strong>2、该软件具有自动回答弹窗问题功能和计时功能，无需手动回答，指定时间，时间到自动退出软件；</strong></p><p>​<strong>3、刷课时，请勿在手机上打开其他软件界面，请保持在程序自动打开的界面，以免出错（可选择在睡觉、吃饭、上课等时段进行刷课，或可选择备用机进行刷课）；</strong></p><p>​<strong>4、其它具体信息，请前往软件中查看，请仔细阅读 ‘注意事项’；</strong></p><hr><h2 id="软件下载："><a href="#软件下载：" class="headerlink" title="软件下载："></a>软件下载：</h2><p><strong>百度网盘下载链接：<a href="https://pan.baidu.com/s/18Rn2NQFlir2t3xG69-DkGg">https://pan.baidu.com/s/18Rn2NQFlir2t3xG69-DkGg</a></strong></p><p><strong>提取码：CXYJ</strong></p><hr><h2 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h2><p><strong>安装教程：安装时，可能需要用户输入密码，比如华为用户在安装时，需要关闭手机的纯净模式。</strong></p><p><strong>使用教程：在运行软件前，请先将软件(ACBS)的悬浮窗权限打开，接着运行软件。然后点击开始运行，会进入无障碍设置界面，打开软件的无障碍模式（注意：有时候要设置两次无障碍模式），回到手机桌面，设置完后就能正常运行。</strong></p><hr><h2 id="软件源码："><a href="#软件源码：" class="headerlink" title="软件源码："></a>软件源码：</h2><p><strong>（仅供参考）</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    ACBS.js</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="variable language_">window</span> = floaty.<span class="title function_">window</span>(</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">frame</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;action&quot;</span> <span class="attr">text</span>=<span class="string">&quot;开始运行&quot;</span> <span class="attr">w</span>=<span class="string">&quot;90&quot;</span> <span class="attr">h</span>=<span class="string">&quot;40&quot;</span> <span class="attr">bg</span>=<span class="string">&quot;#77ffffff&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">frame</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> cmd_x=<span class="title function_">point_x</span>(<span class="number">50</span>);</span><br><span class="line"><span class="keyword">var</span> cmd_y=<span class="title function_">point_y</span>(<span class="number">300</span>);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">point_x</span>(<span class="params">x</span>)&#123;</span><br><span class="line">    x1=device.<span class="property">width</span>/<span class="number">1080</span></span><br><span class="line">    <span class="keyword">return</span> x*x1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">point_y</span>(<span class="params">y</span>)&#123;</span><br><span class="line">    y1=device.<span class="property">height</span>/<span class="number">2340</span></span><br><span class="line">    <span class="keyword">return</span> y*y1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//终端输出</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">setPosition</span>(cmd_x, cmd_y);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">show</span>();</span><br><span class="line"><span class="title function_">sleep</span>(<span class="number">500</span>);</span><br><span class="line"><span class="keyword">var</span> cmd_x=<span class="title function_">point_x</span>(<span class="number">1000</span>);</span><br><span class="line"><span class="keyword">var</span> cmd_y=<span class="title function_">point_y</span>(<span class="number">1700</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">setSize</span>(cmd_x, cmd_y);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;欢迎使用ACBS！&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;悬浮窗可拖动，长按1.5秒即可退出程序！(建议不要拖动，当前位置为最佳位置)&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;作者：JL&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;版本：5.5.2&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;注意事项：&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;    1.该软件在vivo手机上可能存在BUG，无法打开&#x27;知到&#x27;软件，且部分功能失效。&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;    2.该软件为智慧树（知到）自动刷课软件。&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;    3.使用该软件前，确保在&#x27;知到&#x27;内已登入自己的账号。&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;    4.使用软件时确保网络流畅，若网络出现卡顿，或脚本出现错误，请重新启动脚本。&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;    5.刷课程时，请将手机竖屏，该软件仅支持竖屏刷课。（比较菜，哈哈哈^v^）&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;    6.该软件每次只能刷一门课程，若要刷其它课程，请重新启动脚本，输入要挂的课程名。&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;    7.该软件有自动回答弹窗题目功能，但答案不一定正确。&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;    8.该软件有指定刷课时长功能，可指定刷课的时长，达到指定时长就会自动退出脚本。&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;    9.智慧树有平时习惯的要求是每天至少看半个小时左右就有习惯分，持续两周基本可以拿满。如果几天内将视频刷完，那习惯分就很低或者没有。视频刷完了，习惯分就不变了。如果还剩有课程，那么按照每天25分钟观看课程，还是可以提高学习习惯分的。另外还要注意，到底有没有习惯分，有时候习惯分为0，这需要注意。&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;    10.获得智慧树网课的学习习惯分，每门课程需要达到一定的学习频次，每次需满足合理学习时长25分钟及以上，才能获得学习习惯分，也就是说已规律学习的天数越多，学习习惯分越高。具体每门课所需的学习频次可以在【成绩分析】模块中的“学习习惯”中进行查看。&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;好了，现在有了ACBS，请好好利用节约出来的时间^~^。&quot;</span>);</span><br><span class="line"><span class="built_in">setInterval</span>(<span class="function">()=&gt;</span>&#123;&#125;, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> execution = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//记录按键被按下时的触摸坐标</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//记录按键被按下时的悬浮窗位置</span></span><br><span class="line"><span class="keyword">var</span> windowX, windowY;</span><br><span class="line"><span class="comment">//记录按键被按下的时间以便判断长按等动作</span></span><br><span class="line"><span class="keyword">var</span> downTime;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">action</span>.<span class="title function_">setOnTouchListener</span>(<span class="keyword">function</span>(<span class="params">view, event</span>)&#123;</span><br><span class="line">    <span class="keyword">switch</span>(event.<span class="title function_">getAction</span>())&#123;</span><br><span class="line">        <span class="keyword">case</span> event.<span class="property">ACTION_DOWN</span>:</span><br><span class="line">            x = event.<span class="title function_">getRawX</span>();</span><br><span class="line">            y = event.<span class="title function_">getRawY</span>();</span><br><span class="line">            windowX = <span class="variable language_">window</span>.<span class="title function_">getX</span>();</span><br><span class="line">            windowY = <span class="variable language_">window</span>.<span class="title function_">getY</span>();</span><br><span class="line">            downTime = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">case</span> event.<span class="property">ACTION_MOVE</span>:</span><br><span class="line">            <span class="comment">//移动手指时调整悬浮窗位置</span></span><br><span class="line">            <span class="variable language_">window</span>.<span class="title function_">setPosition</span>(windowX + (event.<span class="title function_">getRawX</span>() - x),</span><br><span class="line">                windowY + (event.<span class="title function_">getRawY</span>() - y));</span><br><span class="line">            <span class="comment">//如果按下的时间超过1.5秒判断为长按，退出脚本</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>() - downTime &gt; <span class="number">1500</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(execution)&#123;</span><br><span class="line">                    engines.<span class="title function_">all</span>().<span class="title function_">map</span>(<span class="function">(<span class="params">ScriptEngine</span>) =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (engines.<span class="title function_">myEngine</span>().<span class="title function_">toString</span>() !== <span class="title class_">ScriptEngine</span>.<span class="title function_">toString</span>()) &#123;</span><br><span class="line">                          <span class="title class_">ScriptEngine</span>.<span class="title function_">forceStop</span>();</span><br><span class="line">                        &#125;</span><br><span class="line">                      &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">hide</span>();</span><br><span class="line">                threads.<span class="title function_">start</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                    execution = engines.<span class="title function_">execScriptFile</span>(<span class="string">&quot;console.js&quot;</span>); <span class="comment">//运行console.js脚本</span></span><br><span class="line">                    <span class="title function_">exit</span>();</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">case</span> event.<span class="property">ACTION_UP</span>:</span><br><span class="line">            <span class="comment">//手指弹起时如果偏移很小则判断为点击</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(event.<span class="title function_">getRawY</span>() - y) &lt; <span class="number">5</span> &amp;&amp; <span class="title class_">Math</span>.<span class="title function_">abs</span>(event.<span class="title function_">getRawX</span>() - x) &lt; <span class="number">5</span>)&#123;</span><br><span class="line">                <span class="title function_">onClick</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">onClick</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">action</span>.<span class="title function_">getText</span>() == <span class="string">&#x27;开始运行&#x27;</span>)&#123;</span><br><span class="line">        threads.<span class="title function_">start</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            execution = engines.<span class="title function_">execScriptFile</span>(<span class="string">&quot;home.js&quot;</span>); <span class="comment">//运行home脚本</span></span><br><span class="line">        &#125;);</span><br><span class="line">        execution = engines.<span class="title function_">execScriptFile</span>(<span class="string">&quot;click.js&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">hide</span>();</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">action</span>.<span class="title function_">setText</span>(<span class="string">&#x27;停止运行&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(execution)&#123;</span><br><span class="line">            engines.<span class="title function_">all</span>().<span class="title function_">map</span>(<span class="function">(<span class="params">ScriptEngine</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (engines.<span class="title function_">myEngine</span>().<span class="title function_">toString</span>() !== <span class="title class_">ScriptEngine</span>.<span class="title function_">toString</span>()) &#123;</span><br><span class="line">                  <span class="title class_">ScriptEngine</span>.<span class="title function_">forceStop</span>();</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">action</span>.<span class="title function_">setText</span>(<span class="string">&#x27;开始运行&#x27;</span>);</span><br><span class="line">        threads.<span class="title function_">start</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            execution = engines.<span class="title function_">execScriptFile</span>(<span class="string">&quot;home.js&quot;</span>); <span class="comment">//运行home脚本</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_">id</span>(<span class="string">&quot;md_title&quot;</span>).<span class="title function_">findOnce</span>())&#123;</span><br><span class="line">            <span class="title function_">click</span>(<span class="string">&#x27;确定&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    click.js</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> password=<span class="title function_">rawInput</span>(<span class="string">&quot;请输入检验码&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(password==<span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable constant_">ERROR</span> = <span class="title function_">confirm</span>(<span class="string">&quot;ERROR:检验码不能为空!&quot;</span>);</span><br><span class="line">    engines.<span class="title function_">stopAllAndToast</span>(); <span class="comment">//结束脚本</span></span><br><span class="line">    <span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(password != <span class="string">&#x27;8023&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable constant_">ERROR</span> = <span class="title function_">confirm</span>(<span class="string">&quot;ERROR:检验码错误!&quot;</span>);</span><br><span class="line">    engines.<span class="title function_">stopAllAndToast</span>(); <span class="comment">//结束脚本</span></span><br><span class="line">    <span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable constant_">OK</span> = <span class="title function_">confirm</span>(<span class="string">&quot;欢迎使用自动化刷课脚本(ACBS)\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line"><span class="comment">//封装兼容机型的函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">clicks</span>(<span class="params">x,y</span>)&#123;</span><br><span class="line">    <span class="comment">//注意,测试机型为1080*2340,你可以根据自己的机型修改</span></span><br><span class="line">    x1=device.<span class="property">width</span>/<span class="number">1080</span>;</span><br><span class="line">    y1=device.<span class="property">height</span>/<span class="number">2340</span>;</span><br><span class="line">    <span class="title function_">click</span>(x*x1,y*y1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> name=<span class="title function_">rawInput</span>(<span class="string">&quot;请输入课程名称&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(name==<span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable constant_">ERROR</span> = <span class="title function_">confirm</span>(<span class="string">&quot;ERROR:课程名不能为空!&quot;</span>);</span><br><span class="line">    engines.<span class="title function_">stopAllAndToast</span>(); <span class="comment">//结束脚本</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line"><span class="title function_">click</span>(<span class="string">&quot;知到&quot;</span>);</span><br><span class="line"><span class="title function_">sleep</span>(<span class="number">4100</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//检测网络</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_">className</span>(<span class="string">&quot;android.widget.TextView&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;当前网络不可用&quot;</span>).<span class="title function_">findOnce</span>())&#123;</span><br><span class="line">    threads.<span class="title function_">start</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        execution = engines.<span class="title function_">execScriptFile</span>(<span class="string">&quot;home.js&quot;</span>); <span class="comment">//运行home脚本</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> <span class="variable constant_">ERROR</span> = <span class="title function_">confirm</span>(<span class="string">&quot;ERROR:请检查网络是否连接正常!&quot;</span>);</span><br><span class="line">    engines.<span class="title function_">stopAllAndToast</span>(); <span class="comment">//结束脚本</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    engines.<span class="title function_">execScriptFile</span>(<span class="string">&quot;KillApp.js&quot;</span>); <span class="comment">//运行KillApp脚本</span></span><br><span class="line">    <span class="title function_">sleep</span>(<span class="number">5000</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_">className</span>(<span class="string">&quot;android.widget.TextView&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;知到&quot;</span>).<span class="title function_">findOnce</span>())&#123;  <span class="comment">//找到&#x27;知到&#x27;软件</span></span><br><span class="line">        <span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line">        <span class="title function_">className</span>(<span class="string">&quot;android.widget.TextView&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;知到&quot;</span>).<span class="title function_">findOnce</span>().<span class="title function_">click</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">ERROR</span> = <span class="title function_">confirm</span>(<span class="string">&quot;ERROR:未找到‘知到’软件，请检查‘知到’软件是否在手机桌面！！！&quot;</span>);</span><br><span class="line">        engines.<span class="title function_">stopAllAndToast</span>(); <span class="comment">//结束脚本</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sleep</span>(<span class="number">6000</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_">className</span>(<span class="string">&quot;android.widget.TextView&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;当前网络不可用&quot;</span>).<span class="title function_">findOnce</span>())&#123;</span><br><span class="line">        threads.<span class="title function_">start</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            execution = engines.<span class="title function_">execScriptFile</span>(<span class="string">&quot;home.js&quot;</span>); <span class="comment">//运行home脚本</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">ERROR</span> = <span class="title function_">confirm</span>(<span class="string">&quot;ERROR:请检查网络是否连接正常!&quot;</span>);</span><br><span class="line">        engines.<span class="title function_">stopAllAndToast</span>(); <span class="comment">//结束脚本</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">clicks</span>(<span class="number">899</span>,<span class="number">170</span>);  <span class="comment">//点击&#x27;跳过&#x27;</span></span><br><span class="line">    <span class="title function_">sleep</span>(<span class="number">1500</span>);</span><br><span class="line">    <span class="title function_">clicks</span>(<span class="number">405</span>,<span class="number">2252</span>); <span class="comment">//点击&#x27;学习&#x27;</span></span><br><span class="line">    <span class="title function_">sleep</span>(<span class="number">6000</span>);</span><br><span class="line">    <span class="title function_">swipe</span>(<span class="number">598</span>, <span class="number">1333</span>, <span class="number">598</span>, <span class="number">860</span>, <span class="number">500</span>);</span><br><span class="line">    <span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找指定课程name</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_">id</span>(<span class="string">&quot;tv_course_credit_name&quot;</span>).<span class="title function_">className</span>(<span class="string">&quot;android.widget.TextView&quot;</span>).<span class="title function_">text</span>(name).<span class="title function_">findOnce</span>())&#123;</span><br><span class="line">        <span class="title function_">click</span>(name); <span class="comment">//点击播放</span></span><br><span class="line">        <span class="title function_">sleep</span>(<span class="number">5000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_">home</span>();</span><br><span class="line">        <span class="keyword">var</span> <span class="variable constant_">ERROR</span> = <span class="title function_">confirm</span>(<span class="string">&quot;ERROR:未找到对应课程，请检查输入正确的课程名称!&quot;</span>);</span><br><span class="line">        engines.<span class="title function_">stopAllAndToast</span>(); <span class="comment">//结束脚本</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line">    <span class="title function_">clicks</span>(<span class="number">531</span>,<span class="number">466</span>);  <span class="comment">//点击&#x27;继续学习&#x27;</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_">className</span>(<span class="string">&quot;android.widget.TextView&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;正在使用非WI-FI网络，精彩内容不容错过&quot;</span>).<span class="title function_">findOnce</span>())&#123;</span><br><span class="line">        <span class="title function_">sleep</span>(<span class="number">4000</span>);</span><br><span class="line">        <span class="title function_">clicks</span>(<span class="number">536</span>,<span class="number">486</span>);  <span class="comment">//点击&#x27;继续播放&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//多线程执行time</span></span><br><span class="line">    <span class="keyword">var</span> execution = <span class="literal">null</span>;</span><br><span class="line">    threads.<span class="title function_">start</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        execution = engines.<span class="title function_">execScriptFile</span>(<span class="string">&quot;time.js&quot;</span>); <span class="comment">//运行time脚本</span></span><br><span class="line">        threads.<span class="title function_">shutDownAll</span>();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">sleep</span>(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="title function_">sleep</span>(<span class="number">1500</span>);</span><br><span class="line">        <span class="keyword">if</span>(!(<span class="title function_">id</span>(<span class="string">&quot;md_buttonDefaultPositive&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;确定&quot;</span>).<span class="title function_">findOnce</span>()))&#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="title function_">sleep</span>(<span class="number">1500</span>);</span><br><span class="line">                <span class="comment">//自动答题不能确保答案一定正确</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_">id</span>(<span class="string">&quot;md_buttonDefaultPositive&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;确定&quot;</span>).<span class="title function_">findOnce</span>())&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_">className</span>(<span class="string">&quot;android.view.View&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;判断题&quot;</span>).<span class="title function_">findOnce</span>())&#123;</span><br><span class="line">                    <span class="comment">// findOnce()根据当前的选择器所确定的筛选条件，对屏幕上的控件进行搜索，如果找到符合条件的控件则返回该控件；否 则返回null。</span></span><br><span class="line">                    <span class="title function_">className</span>(<span class="string">&quot;android.widget.ListView&quot;</span>).<span class="title function_">findOnce</span>().<span class="title function_">children</span>().<span class="title function_">forEach</span>(<span class="function"><span class="params">child</span> =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">var</span> target = child.<span class="title function_">findOne</span>(<span class="title function_">className</span>(<span class="string">&quot;android.widget.TextView&quot;</span>));</span><br><span class="line">                        target.<span class="title function_">click</span>();</span><br><span class="line">                        &#125;);</span><br><span class="line">                    <span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line">                    <span class="title function_">clicks</span>(<span class="number">949</span>,<span class="number">397</span>);  <span class="comment">//点击(X)关闭</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="title function_">className</span>(<span class="string">&quot;android.view.View&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;单选题&quot;</span>).<span class="title function_">findOnce</span>())&#123;</span><br><span class="line">                    <span class="title function_">className</span>(<span class="string">&quot;android.widget.ListView&quot;</span>).<span class="title function_">findOnce</span>().<span class="title function_">children</span>().<span class="title function_">forEach</span>(<span class="function"><span class="params">child</span> =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">var</span> target = child.<span class="title function_">findOne</span>(<span class="title function_">className</span>(<span class="string">&quot;android.widget.TextView&quot;</span>));</span><br><span class="line">                        target.<span class="title function_">click</span>();</span><br><span class="line">                        &#125;);</span><br><span class="line">                    <span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line">                    <span class="title function_">clicks</span>(<span class="number">949</span>,<span class="number">397</span>);  <span class="comment">//点击(X)关闭</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="title function_">className</span>(<span class="string">&quot;android.view.View&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;多选题&quot;</span>).<span class="title function_">findOnce</span>())&#123;</span><br><span class="line">                    <span class="comment">//进行答题(默认选择四个选项 即A/B/C/D)</span></span><br><span class="line">                    <span class="title function_">className</span>(<span class="string">&quot;android.widget.ListView&quot;</span>).<span class="title function_">findOnce</span>().<span class="title function_">children</span>().<span class="title function_">forEach</span>(<span class="function"><span class="params">child</span> =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">var</span> target = child.<span class="title function_">findOne</span>(<span class="title function_">className</span>(<span class="string">&quot;android.widget.TextView&quot;</span>));</span><br><span class="line">                        target.<span class="title function_">click</span>();</span><br><span class="line">                        &#125;);</span><br><span class="line">                    <span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line">                    <span class="title function_">clicks</span>(<span class="number">949</span>,<span class="number">397</span>);  <span class="comment">//点击(X)关闭</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line">                    <span class="title function_">clicks</span>(<span class="number">116</span>,<span class="number">575</span>);  <span class="comment">//防止屏幕熄屏,每2秒自动点击屏幕</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_">className</span>(<span class="string">&quot;android.view.View&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;未作答的弹题不能关闭&quot;</span>).<span class="title function_">findOnce</span>())&#123;</span><br><span class="line">                    <span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line">                    <span class="title function_">clicks</span>(<span class="number">706</span>,<span class="number">1855</span>); <span class="comment">//点击&#x27;下一题&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_">className</span>(<span class="string">&quot;android.widget.TextView&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;温馨提示&quot;</span>).<span class="title function_">findOnce</span>())&#123;</span><br><span class="line">                    <span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line">                    <span class="title function_">id</span>(<span class="string">&quot;tv_peace_socre&quot;</span>).<span class="title function_">findOnce</span>().<span class="title function_">click</span>();</span><br><span class="line">                    <span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line">                    <span class="title function_">className</span>(<span class="string">&quot;android.view.View&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;返回&quot;</span>).<span class="title function_">findOnce</span>().<span class="title function_">click</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    time.js</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> cmd_x=<span class="title function_">point_x</span>(<span class="number">20</span>);   <span class="comment">//控制台输出位置的x坐标</span></span><br><span class="line"><span class="keyword">var</span> cmd_y=<span class="title function_">point_y</span>(<span class="number">1900</span>); <span class="comment">//控制台输出位置的y坐标</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//兼容机型函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">point_x</span>(<span class="params">x</span>)&#123;</span><br><span class="line">    x1=device.<span class="property">width</span>/<span class="number">1080</span></span><br><span class="line">    <span class="keyword">return</span> x*x1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">point_y</span>(<span class="params">y</span>)&#123;</span><br><span class="line">    y1=device.<span class="property">height</span>/<span class="number">2340</span></span><br><span class="line">    <span class="keyword">return</span> y*y1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输入指定时长</span></span><br><span class="line"><span class="keyword">var</span> time_count=<span class="title function_">rawInput</span>(<span class="string">&quot;请指定刷课时长\n时间单位为(分钟)\n默认不输入为无时长限制\n输入0退出当前脚本\n温馨提示：在刷课过程中可能有网路延迟，输入的时长请大于目标时长&quot;</span>,<span class="string">&quot;30&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(time_count==<span class="string">&quot;0&quot;</span>)&#123;  <span class="comment">//为0退出程序</span></span><br><span class="line">    <span class="title function_">home</span>();</span><br><span class="line">    engines.<span class="title function_">stopAllAndToast</span>(); <span class="comment">//结束脚本</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(time_count == <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">    time_count=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(time_count&lt;<span class="number">0</span> || !(time_count&gt;<span class="number">0</span>))&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable constant_">ERROR</span> = <span class="title function_">confirm</span>(<span class="string">&quot;ERROR:请输入符合标准的时间!&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        time_count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> time_count=<span class="title function_">rawInput</span>(<span class="string">&quot;请指定刷课时长\n时间单位为(分钟)\n默认不输入为无时长限制\n输入0退出当前脚本\n温馨提示：在刷课过程中可能有网路延迟，输入的时长请大于目标时长&quot;</span>,<span class="string">&quot;30&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(time_count==<span class="string">&quot;0&quot;</span>)&#123;  <span class="comment">//为0退出程序</span></span><br><span class="line">            <span class="title function_">home</span>();</span><br><span class="line">            engines.<span class="title function_">stopAllAndToast</span>(); <span class="comment">//结束脚本</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(time_count&lt;<span class="number">0</span> || !(time_count&gt;<span class="number">0</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span>(time_count == <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">                time_count=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> <span class="variable constant_">ERROR</span> = <span class="title function_">confirm</span>(<span class="string">&quot;ERROR:请输入符合标准的时间!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(time_count&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">sleep</span>(<span class="number">100</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">setPosition</span>(cmd_x, cmd_y); <span class="comment">//控制台输出位置</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">show</span>(); <span class="comment">//显示控制台</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">sleep</span>(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> cmd_x=<span class="title function_">point_x</span>(<span class="number">700</span>);  <span class="comment">//控制台大小的x坐标</span></span><br><span class="line"><span class="keyword">var</span> cmd_y=<span class="title function_">point_y</span>(<span class="number">500</span>);  <span class="comment">//控制台大小的y坐标</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">setSize</span>(cmd_x, cmd_y); <span class="comment">//设置控制台大小</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;00:00:00&quot;</span>); <span class="comment">//默认初始时间为(00:00:00)</span></span><br><span class="line">time_count=time_count*<span class="number">60</span>; <span class="comment">//将用户输入时间进行换算</span></span><br><span class="line"><span class="keyword">var</span> time=<span class="number">0</span>; <span class="comment">//初始化计时器为0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//计时器</span></span><br><span class="line"><span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    time++; <span class="comment">//计时器每1秒加1</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//小时、分钟、秒进行换算</span></span><br><span class="line">    <span class="keyword">let</span> s=<span class="built_in">parseInt</span>(time*<span class="number">1000</span>/<span class="number">1000</span>%<span class="number">60</span>);</span><br><span class="line">    <span class="keyword">let</span> m=<span class="built_in">parseInt</span>(time*<span class="number">1000</span>/<span class="number">1000</span>/<span class="number">60</span>%<span class="number">60</span>);</span><br><span class="line">    <span class="keyword">let</span> h=<span class="built_in">parseInt</span>(time*<span class="number">1000</span>/<span class="number">1000</span>/<span class="number">60</span>/<span class="number">60</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//自动补零，若长度为1，则自动在前方补零</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">parseInt</span>(s/<span class="number">10</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">        s=<span class="string">&quot;0&quot;</span>+s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">parseInt</span>(m/<span class="number">10</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">        m=<span class="string">&quot;0&quot;</span>+m;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">parseInt</span>(h/<span class="number">10</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">        h=<span class="string">&quot;0&quot;</span>+h;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">clear</span>();  <span class="comment">//每次都进行清屏</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(h+<span class="string">&quot;:&quot;</span>+m+<span class="string">&quot;:&quot;</span>+s);  <span class="comment">//输出时间</span></span><br><span class="line">    <span class="keyword">if</span>(time_count==time)&#123;  <span class="comment">//计时器时间到达用户指定时间</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;时间到！&quot;</span>);  <span class="comment">//提示用户时间到</span></span><br><span class="line">        engines.<span class="title function_">all</span>().<span class="title function_">map</span>(<span class="function">(<span class="params">ScriptEngine</span>) =&gt;</span> &#123;  <span class="comment">//结束其他所有脚本</span></span><br><span class="line">            <span class="keyword">if</span> (engines.<span class="title function_">myEngine</span>().<span class="title function_">toString</span>() !== <span class="title class_">ScriptEngine</span>.<span class="title function_">toString</span>()) &#123;</span><br><span class="line">              <span class="title class_">ScriptEngine</span>.<span class="title function_">forceStop</span>();</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">          threads.<span class="title function_">start</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            execution = engines.<span class="title function_">execScriptFile</span>(<span class="string">&quot;home.js&quot;</span>); <span class="comment">//运行home脚本</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="title function_">exit</span>();  <span class="comment">//退出当前脚本</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    KillApp.js</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">killApp</span>(<span class="string">&quot;知到&quot;</span>);</span><br><span class="line"><span class="comment">//关闭应用 </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">killApp</span>(<span class="params">appName</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> forcedStopStr = [<span class="string">&quot;结束&quot;</span>, <span class="string">&quot;停&quot;</span>, <span class="string">&quot;强&quot;</span>];</span><br><span class="line">    <span class="keyword">let</span> packageName = app.<span class="title function_">getPackageName</span>(appName);<span class="comment">//获取应用包名 通过软件名</span></span><br><span class="line">    <span class="keyword">if</span> (packageName) &#123;</span><br><span class="line">        app.<span class="title function_">openAppSetting</span>(packageName);<span class="comment">//进入应用设置信息</span></span><br><span class="line">        <span class="title function_">sleep</span>(<span class="number">1500</span>);</span><br><span class="line">        <span class="title function_">text</span>(appName).<span class="title function_">waitFor</span>();<span class="comment">//等待查询到名字出现</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; forcedStopStr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_">textContains</span>(forcedStopStr[i]).<span class="title function_">exists</span>()) &#123;<span class="comment">//判定关键字是否存在</span></span><br><span class="line">                <span class="title function_">sleep</span>(<span class="number">100</span>);</span><br><span class="line">                <span class="keyword">let</span> forcedStop = <span class="title function_">textContains</span>(forcedStopStr[i]).<span class="title function_">findOne</span>();</span><br><span class="line">                <span class="keyword">if</span> (forcedStop.<span class="title function_">enabled</span>()) &#123;</span><br><span class="line">                    <span class="title function_">text</span>(<span class="string">&quot;强行停止&quot;</span>).<span class="title function_">waitFor</span>();</span><br><span class="line">                    <span class="comment">//这里的结束运行不能被点击,我用控件中心点来点击</span></span><br><span class="line">                    <span class="keyword">var</span> 结束运行 = <span class="title function_">text</span>(<span class="string">&quot;强行停止&quot;</span>).<span class="title function_">findOne</span>().<span class="title function_">bounds</span>();</span><br><span class="line">                    <span class="title function_">click</span>(结束运行.<span class="title function_">centerX</span>(), 结束运行.<span class="title function_">centerY</span>());</span><br><span class="line">                    <span class="title function_">sleep</span>(<span class="number">500</span>);</span><br><span class="line">                    forcedStop.<span class="title function_">click</span>();</span><br><span class="line">                    <span class="title function_">text</span>(<span class="string">&quot;强行停止&quot;</span>).<span class="title function_">findOne</span>().<span class="title function_">click</span>();</span><br><span class="line">                    <span class="title function_">sleep</span>(<span class="number">500</span>);</span><br><span class="line">                    <span class="title function_">home</span>();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    home.js</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">home</span>();</span><br><span class="line"><span class="title function_">sleep</span>(<span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    console.js</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> cmd_x=<span class="title function_">point_x</span>(<span class="number">50</span>);</span><br><span class="line"><span class="keyword">var</span> cmd_y=<span class="title function_">point_y</span>(<span class="number">300</span>);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">point_x</span>(<span class="params">x</span>)&#123;</span><br><span class="line">    x1=device.<span class="property">width</span>/<span class="number">1080</span></span><br><span class="line">    <span class="keyword">return</span> x*x1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">point_y</span>(<span class="params">y</span>)&#123;</span><br><span class="line">    y1=device.<span class="property">height</span>/<span class="number">2340</span></span><br><span class="line">    <span class="keyword">return</span> y*y1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//终端输出</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">setPosition</span>(cmd_x, cmd_y);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">show</span>();</span><br><span class="line"><span class="title function_">sleep</span>(<span class="number">500</span>);</span><br><span class="line"><span class="keyword">var</span> cmd_x=<span class="title function_">point_x</span>(<span class="number">700</span>);</span><br><span class="line"><span class="keyword">var</span> cmd_y=<span class="title function_">point_y</span>(<span class="number">1000</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">setSize</span>(cmd_x, cmd_y);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;拜拜 (* ~ *)\n\n\n&quot;</span>);</span><br><span class="line"><span class="title function_">sleep</span>(<span class="number">1500</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;下次再来 (~ _ ~)\n\n\n&quot;</span>);</span><br><span class="line"><span class="title function_">sleep</span>(<span class="number">1500</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;别忘了我 (T ~ T)&quot;</span>);</span><br><span class="line"><span class="title function_">sleep</span>(<span class="number">1000</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">hide</span>();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ACBS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C Language</title>
      <link href="/2022/04/19/pta%EF%BC%88c%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%89/"/>
      <url>/2022/04/19/pta%EF%BC%88c%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="c语言程序设计"><a href="#c语言程序设计" class="headerlink" title="c语言程序设计"></a>c语言程序设计</h1><h2 id="1-1简化的插入排序"><a href="#1-1简化的插入排序" class="headerlink" title="1-1简化的插入排序"></a>1-1简化的插入排序</h2><p>本题要求编写程序，将一个给定的整数插到原本有序的整数序列中，使结果序列仍然有序。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行先给出非负整数N（&lt;10）；第二行给出N个从小到大排好顺序的整数；第三行给出一个整数X。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行内输出将X插入后仍然从小到大有序的整数序列，每个数字后面有一个空格。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 2 4 5 7</span><br><span class="line">3</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5 7 </span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[<span class="number">11</span>];</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="type">int</span> i,j=<span class="number">0</span>,k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">while</span>(a[j]&lt;x &amp;&amp; j&lt;n)</span><br><span class="line">        j++;</span><br><span class="line"><span class="keyword">for</span>(k=n<span class="number">-1</span>;k&gt;=j;k--)</span><br><span class="line">a[k+<span class="number">1</span>]=a[k];</span><br><span class="line">a[j]=x;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n+<span class="number">1</span>;i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-2查找整数"><a href="#1-2查找整数" class="headerlink" title="1-2查找整数"></a>1-2查找整数</h2><p>本题要求从输入的N个整数中查找给定的X。如果找到，输出X的位置（从0开始数）；如果没有找到，输出“Not Found”。</p><h3 id="输入格式：-1"><a href="#输入格式：-1" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行中给出两个正整数N（≤20）和X，第二行给出N个整数。数字均不超过长整型，其间以空格分隔。</p><h3 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出X的位置，或者“Not Found”。</p><h3 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 7</span><br><span class="line">3 5 7 1 9</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5 7</span><br><span class="line">3 5 8 1 9</span><br></pre></td></tr></table></figure><h3 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Not Found</span><br></pre></td></tr></table></figure><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n,x;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="type">int</span> a[<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="type">int</span> flag=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;n,&amp;x);</span><br><span class="line"><span class="keyword">if</span>(n&gt;=<span class="number">0</span> &amp;&amp; n&lt;=<span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="keyword">if</span>(x==a[i])</span><br><span class="line">&#123;</span><br><span class="line">num=i;</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Not Found&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-3计算平均分并输出低于平均分的学生成绩"><a href="#1-3计算平均分并输出低于平均分的学生成绩" class="headerlink" title="1-3计算平均分并输出低于平均分的学生成绩"></a>1-3计算平均分并输出低于平均分的学生成绩</h2><p>从键盘上输入若干（&lt;20）个学生的成绩，统计计算出平均成绩，并输出低于平均分的学生成绩，用输入负数结束输入。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>在一行中输入若干（&lt;20）个学生的实型成绩，用输入负数结束输入，数据之间各用一个空格间隔。</p><h3 id="输出格式：-2"><a href="#输出格式：-2" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按照“ave&#x3D;平均成绩（回车）”顺序输出平均成绩，平均成绩保留2位小数，没有列宽控制。 在下一行中输出低于平均分的学生成绩，学生成绩保留1位小数，列宽为6列。</p><h3 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">85 65 74 -1</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ave=74.67</span><br><span class="line">  65.0  74.0</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-1"><a href="#代码：-1" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> j;</span><br><span class="line"><span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="type">float</span> ave=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;<span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">sum+=a[i];</span><br><span class="line">num++;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">ave=(<span class="type">float</span>)sum/num;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ave=%.2f\n&quot;</span>,ave);</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=i;j++)</span><br><span class="line"><span class="keyword">if</span>(a[j]&lt;ave &amp;&amp; a[j]&gt;=<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%6.1f&quot;</span>,(<span class="type">float</span>)a[j]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-4-输出数组元素"><a href="#1-4-输出数组元素" class="headerlink" title="1-4 输出数组元素"></a>1-4 输出数组元素</h2><p>本题要求编写程序，对顺序读入的<em>n</em>个整数，顺次计算后项减前项之差，并按每行三个元素的格式输出结果。</p><h3 id="输入格式：-2"><a href="#输入格式：-2" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入的第一行给出正整数<em>n</em>（1&lt;<em>n</em>≤10）。随后一行给出<em>n</em>个整数，其间以空格分隔。</p><h3 id="输出格式：-3"><a href="#输出格式：-3" class="headerlink" title="输出格式："></a>输出格式：</h3><p>顺次计算后项减前项之差，并按每行三个元素的格式输出结果。数字间空一格，行末不得有多余空格。</p><h3 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">5 1 7 14 6 36 4 28 50 100</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-4 6 7</span><br><span class="line">-8 30 -32</span><br><span class="line">24 22 50</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-2"><a href="#代码：-2" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="type">int</span> a[<span class="number">11</span>];</span><br><span class="line"><span class="type">int</span> ca = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">ca = a[i + <span class="number">1</span>] - a[i];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ca);</span><br><span class="line"><span class="keyword">if</span> ((i + <span class="number">1</span>) % <span class="number">3</span> == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i &lt; n - <span class="number">2</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-5求整数序列中出现次数最多的数"><a href="#1-5求整数序列中出现次数最多的数" class="headerlink" title="1-5求整数序列中出现次数最多的数"></a>1-5求整数序列中出现次数最多的数</h2><p>本题要求统计一个整型序列中出现次数最多的整数及其出现次数。</p><h3 id="输入格式：-3"><a href="#输入格式：-3" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出序列中整数个数N（0&lt;N≤1000），以及N个整数。数字间以空格分隔。</p><h3 id="输出格式：-4"><a href="#输出格式：-4" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出出现次数最多的整数及其出现次数，数字间以空格分隔。题目保证这样的数字是唯一的。</p><h3 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10 3 2 -1 5 3 4 3 0 3 2</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 4</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-3"><a href="#代码：-3" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line"><span class="type">int</span> a[<span class="number">1001</span>];</span><br><span class="line"><span class="type">int</span> b[<span class="number">1001</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> max = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line"><span class="keyword">if</span> (a[i] == a[j])</span><br><span class="line">b[i]++;</span><br><span class="line"><span class="keyword">if</span> (max &lt; b[i])</span><br><span class="line">&#123;</span><br><span class="line">max = b[i];</span><br><span class="line">num = a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, num, max);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-6冒泡法排序"><a href="#1-6冒泡法排序" class="headerlink" title="1-6冒泡法排序"></a>1-6冒泡法排序</h2><p>将<em>N</em>个整数按从小到大排序的冒泡排序法是这样工作的：从头到尾比较相邻两个元素，如果前面的元素大于其紧随的后面元素，则交换它们。通过一遍扫描，则最后一个元素必定是最大的元素。然后用同样的方法对前<em>N</em>−1个元素进行第二遍扫描。依此类推，最后只需处理两个元素，就完成了对<em>N</em>个数的排序。</p><p>本题要求对任意给定的<em>K</em>（&lt;<em>N</em>），输出扫描完第<em>K</em>遍后的中间结果数列。</p><h3 id="输入格式：-4"><a href="#输入格式：-4" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第1行中给出<em>N</em>和<em>K</em>（1≤<em>K</em>&lt;<em>N</em>≤100），在第2行中给出<em>N</em>个待排序的整数，数字间以空格分隔。</p><h3 id="输出格式：-5"><a href="#输出格式：-5" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出冒泡排序法扫描完第<em>K</em>遍后的中间结果数列，数字间以空格分隔，但末尾不得有多余空格。</p><h3 id="输入样例：-4"><a href="#输入样例：-4" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">6 2</span><br><span class="line">2 3 5 1 6 4</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-4"><a href="#输出样例：-4" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2 1 3 4 5 6</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-4"><a href="#代码：-4" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="type">int</span> a[<span class="number">101</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> tem = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n - <span class="number">1</span> - i; j++)</span><br><span class="line"><span class="keyword">if</span> (a[j] &gt; a[j + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">tem = a[j];</span><br><span class="line">a[j] = a[j + <span class="number">1</span>];</span><br><span class="line">a[j + <span class="number">1</span>] = tem;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i]);</span><br><span class="line"><span class="keyword">if</span> (i &lt; n - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-7求矩阵各行元素之和"><a href="#1-7求矩阵各行元素之和" class="headerlink" title="1-7求矩阵各行元素之和"></a>1-7求矩阵各行元素之和</h2><p>本题要求编写程序，求一个给定的<em>m</em>×<em>n</em>矩阵各行元素之和。</p><h3 id="输入格式：-5"><a href="#输入格式：-5" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出两个正整数<em>m</em>和<em>n</em>（1≤<em>m</em>,<em>n</em>≤6）。随后<em>m</em>行，每行给出<em>n</em>个整数，其间</p><p>以空格分隔。</p><h3 id="输出格式：-6"><a href="#输出格式：-6" class="headerlink" title="输出格式："></a>输出格式：</h3><p>每行输出对应矩阵行元素之和。</p><h3 id="输入样例：-5"><a href="#输入样例：-5" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3 2</span><br><span class="line">6 3</span><br><span class="line">1 -8</span><br><span class="line">3 12</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-5"><a href="#输出样例：-5" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">9</span><br><span class="line">-7</span><br><span class="line">15</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-5"><a href="#代码：-5" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> m, n;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="type">int</span> sum;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>][<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;m,&amp;n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line">sum += a[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br><span class="line"><span class="keyword">if</span> (i &lt; n )</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-8-判断双对称方阵"><a href="#1-8-判断双对称方阵" class="headerlink" title="1-8 判断双对称方阵"></a>1-8 判断双对称方阵</h2><p>对于一个n阶方阵，请判断该方阵是否双对称，即既左右对称又上下对称。若是则输出“yes”，否则输出“no”。例如，样例中，以第2列为界则左右对称，以第2行为界则上下对称，因此输出“yes”。</p><h3 id="输入格式：-6"><a href="#输入格式：-6" class="headerlink" title="输入格式："></a>输入格式：</h3><p>首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。每组数据的第一行输入方阵的阶n（2≤n≤50），接下来输入n行，每行n个整数，表示方阵中的元素。</p><h3 id="输出格式：-7"><a href="#输出格式：-7" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对于每组测试数据，若该方阵双对称，则输出“yes”，否则输出“no”。注意，引号不必输出。</p><h3 id="输入样例：-6"><a href="#输入样例：-6" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">3</span><br><span class="line">1 2 1</span><br><span class="line">3 5 3</span><br><span class="line">1 4 1</span><br><span class="line">3</span><br><span class="line">1 2 1</span><br><span class="line">3 5 3</span><br><span class="line">1 2 1</span><br></pre></td></tr></table></figure><h3 id="输出样例：-6"><a href="#输出样例：-6" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">no</span><br><span class="line">yes</span><br></pre></td></tr></table></figure><h3 id="代码：-6"><a href="#代码：-6" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t, n;</span><br><span class="line"><span class="type">int</span> i, j, k;</span><br><span class="line"><span class="type">int</span> a[<span class="number">50</span>][<span class="number">50</span>];</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>, m = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">m = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">x = n - <span class="number">1</span>;</span><br><span class="line">y = n - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; n; k++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[j][k]);</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n ; j++)</span><br><span class="line">&#123;</span><br><span class="line">x = n - <span class="number">1</span>;</span><br><span class="line">m = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; n ; k++)</span><br><span class="line"><span class="keyword">if</span> (a[j][k] != a[j][x--])</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[j][m] != a[y][m])</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">++m;</span><br><span class="line"><span class="keyword">if</span> (m == n )</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">y--;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;yes\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;no\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-9骑士"><a href="#1-9骑士" class="headerlink" title="1-9骑士"></a>1-9骑士</h2><p>在国际象棋中，棋盘的行编号为1<del>8，列编号为a</del>h；马以“日”方式行走，根据马在当前棋盘上的位置，请问可以有几种合适的走法。如下图所示，设马（以H表示）在e4位置，则下一步可以走的位置是棋盘中粗体数字标注的8个位置：</p><p><img src="C:\Users\ASUS\Desktop\素材\48254aef-ceaf-4397-a9a5-a439e575e8ed.png" alt="48254aef-ceaf-4397-a9a5-a439e575e8ed"></p><h3 id="输入格式：-7"><a href="#输入格式：-7" class="headerlink" title="输入格式："></a>输入格式：</h3><p>首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。每组测试数据输入一个字符（a<del>h）和一个整数（1</del>8），表示马所在的当前位置。</p><h3 id="输出格式：-8"><a href="#输出格式：-8" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对于每组测试，输出共有几种走法。</p><h3 id="输入样例：-7"><a href="#输入样例：-7" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">e4</span><br></pre></td></tr></table></figure><h3 id="输出样例：-7"><a href="#输出样例：-7" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure><h3 id="代码：-7"><a href="#代码：-7" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">int</span> i, j, k;</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line"><span class="type">int</span> x=<span class="number">0</span>,y=<span class="number">0</span>; </span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">&#123;</span><br><span class="line">        sum=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot; %c%d&quot;</span>,&amp;ch,&amp;y);</span><br><span class="line">y -= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">switch</span> (ch)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:x = <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:x = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:x = <span class="number">2</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:x = <span class="number">3</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;e&#x27;</span>:x = <span class="number">4</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;f&#x27;</span>:x = <span class="number">5</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;g&#x27;</span>:x = <span class="number">6</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;h&#x27;</span>:x = <span class="number">7</span>; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">8</span>; j++)</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">8</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (j == x - <span class="number">2</span> &amp;&amp; k == y + <span class="number">1</span>)</span><br><span class="line">sum += <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (j == x - <span class="number">1</span> &amp;&amp; k == y + <span class="number">2</span>)</span><br><span class="line">sum += <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (j == x + <span class="number">1</span> &amp;&amp; k == y + <span class="number">2</span>)</span><br><span class="line">sum += <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (j == x + <span class="number">2</span> &amp;&amp; k == y + <span class="number">1</span>)</span><br><span class="line">sum += <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (j == x + <span class="number">2</span> &amp;&amp; k == y - <span class="number">1</span>)</span><br><span class="line">sum += <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (j == x + <span class="number">1</span> &amp;&amp; k == y - <span class="number">2</span>)</span><br><span class="line">sum += <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (j == x - <span class="number">1</span> &amp;&amp; k == y - <span class="number">2</span>)</span><br><span class="line">sum += <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (j == x - <span class="number">2</span> &amp;&amp; k == y - <span class="number">1</span>)</span><br><span class="line">sum += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-10sdut-array2-5打印“杨辉三角”品中国数学史增民族自豪感（2）"><a href="#1-10sdut-array2-5打印“杨辉三角”品中国数学史增民族自豪感（2）" class="headerlink" title="1-10sdut-array2-5打印“杨辉三角”品中国数学史增民族自豪感（2）"></a>1-10sdut-array2-5打印“杨辉三角”品中国数学史增民族自豪感（2）</h2><p><strong>背景介绍</strong>：</p><p>北宋人贾宪约1050年首先使用“贾宪三角”进行高次开方运算。 南宋数学家杨辉在《详解九章算法》（1261年）记载并保存了“贾宪三角”，故称杨辉三角。杨辉三角是中国数学史上的一个伟大成就。 杨辉三角，是中国古代数学的杰出研究成果之一，它把二项式系数图形化，把组合数内在的一些代数性质直观地从图形中体现出来，是一种离散型的数与形的结合。</p><p>中国南宋数学家杨辉1261年所著的《详解九章算法》一书中出现。在欧洲，帕斯卡（1623—-1662）在1654年发现这一规律，所以这个表又叫做帕斯卡三角形。帕斯卡的发现比杨辉要迟393年，比贾宪迟600年。</p><p><strong>杨辉三角数字的特点为：</strong></p><p>（1）在三角形的首列和对角线上，数值均为1；</p><p>（2）其余数据为：每个数字等于上一行的左右两个数字之和，第n+1行的第i个数等于第n行的第i-1个数和第i个数之和，用公式表示为： C(n+1,i)&#x3D;C(n,i)+C(n,i-1)。</p><p>图示为：<img src="https://images.ptausercontent.com/58befd1a-2780-464b-8667-b11ec1a4086b.jpg" alt="1.jpg"></p><p><strong>杨辉三角的应用</strong>：(a+b)的n次方，展开式中的各项系数依次对应杨辉三角的第(n+1)行中的每一项。</p><h3 id="输入格式：-8"><a href="#输入格式：-8" class="headerlink" title="输入格式："></a>输入格式：</h3><p>欲打印杨辉三角的行数n（1&lt;&#x3D;n&lt;&#x3D;13)。</p><h3 id="输出格式：-9"><a href="#输出格式：-9" class="headerlink" title="输出格式："></a>输出格式：</h3><p>（1）输出的数据为等腰三角形样式；</p><p>（2）每个数字占据4个字符的位置，数字左对齐，数字不足4位的右边留出空格；</p><p>（3）最后一行的数值“1”顶格，前面无空格。</p><p>提示：以n&#x3D;5，分析行首空格数为：</p><p><img src="https://images.ptausercontent.com/3c450dda-9651-41e5-8b30-3eb689a30354.jpg" alt="7.jpg"></p><h3 id="输入样例1：-1"><a href="#输入样例1：-1" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例1：-1"><a href="#输出样例1：-1" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">        1   </span><br><span class="line">      1   1   </span><br><span class="line">    1   2   1   </span><br><span class="line">  1   3   3   1   </span><br><span class="line">1   4   6   4   1   </span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例2：-1"><a href="#输入样例2：-1" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例2：-1"><a href="#输出样例2：-1" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">          1   </span><br><span class="line">        1   1   </span><br><span class="line">      1   2   1   </span><br><span class="line">    1   3   3   1   </span><br><span class="line">  1   4   6   4   1   </span><br><span class="line">1   5   10  10  5   1   </span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-8"><a href="#代码：-8" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 13</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j, k, n = <span class="number">0</span>, a[N][N] = &#123; <span class="number">0</span> &#125;;   <span class="comment">/*定义二维数组a[14][14]*/</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        a[i][<span class="number">0</span>] = a[i][i] = <span class="number">1</span>;      <span class="comment">/*两边的数令它为1，因为现在循环从0开始，就认为a[i][1]为第一个数*/</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;=i - <span class="number">1</span>; j++)</span><br><span class="line">            a[i][j] = a[i - <span class="number">1</span>][j - <span class="number">1</span>] + a[i - <span class="number">1</span>][j];  <span class="comment">/*除两边的数外都等于上两顶数之和*/</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; n-i<span class="number">-1</span> ; k++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);   </span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)    <span class="comment">/*j&lt;=i的原因是不输出其它的数，只输出我们想要的数*/</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%-4d&quot;</span>, a[i][j]);</span><br><span class="line">        <span class="keyword">if</span>(i&lt;n<span class="number">-1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-11-Programming-in-C-is-fun"><a href="#1-11-Programming-in-C-is-fun" class="headerlink" title="1-11 Programming in C is fun!"></a>1-11 Programming in C is fun!</h2><p>本题要求编写程序，输出一个短句“Programming in C is fun!”。</p><h3 id="输入格式：-9"><a href="#输入格式：-9" class="headerlink" title="输入格式："></a>输入格式：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本题目没有输入。</span><br></pre></td></tr></table></figure><h3 id="输出格式：-10"><a href="#输出格式：-10" class="headerlink" title="输出格式："></a>输出格式：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在一行中输出短句“Programming in C is fun!”。</span><br></pre></td></tr></table></figure><h3 id="代码：-9"><a href="#代码：-9" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Programming in C is fun!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-12输出倒三角图案"><a href="#1-12输出倒三角图案" class="headerlink" title="1-12输出倒三角图案"></a>1-12输出倒三角图案</h2><p>本题要求编写程序，输出指定的由“*”组成的倒三角图案。</p><h3 id="输入格式：-10"><a href="#输入格式：-10" class="headerlink" title="输入格式："></a>输入格式：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本题目没有输入。</span><br></pre></td></tr></table></figure><h3 id="输出格式：-11"><a href="#输出格式：-11" class="headerlink" title="输出格式："></a>输出格式：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* * * *</span><br><span class="line"> * * *</span><br><span class="line">  * *</span><br><span class="line">   *</span><br></pre></td></tr></table></figure><h3 id="代码：-10"><a href="#代码：-10" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;<span class="number">7</span><span class="number">-2</span>*i;k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(k%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-13温度转换"><a href="#1-13温度转换" class="headerlink" title="1-13温度转换"></a>1-13温度转换</h2><p>本题要求编写程序，计算华氏温度150°F对应的摄氏温度。计算公式：C&#x3D;5×(F−32)&#x2F;9，式中：C表示摄氏温度，F表示华氏温度，输出数据要求为整型。</p><h3 id="输入格式：-11"><a href="#输入格式：-11" class="headerlink" title="输入格式："></a>输入格式：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本题目没有输入。</span><br></pre></td></tr></table></figure><h3 id="输出格式：-12"><a href="#输出格式：-12" class="headerlink" title="输出格式："></a>输出格式：</h3><p>按照下列格式输出</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fahr = 150, celsius = 计算所得摄氏温度的整数值</span><br></pre></td></tr></table></figure><h3 id="代码：-11"><a href="#代码：-11" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> fahr = <span class="number">150</span>;</span><br><span class="line">    <span class="type">int</span> celsius=<span class="number">5</span>*(fahr<span class="number">-32</span>)/<span class="number">9</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;fahr = %d, celsius = %d&quot;</span>,fahr,celsius);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-14计算物体自由下落的距离"><a href="#1-14计算物体自由下落的距离" class="headerlink" title="1-14计算物体自由下落的距离"></a>1-14计算物体自由下落的距离</h2><p>一个物体从100米的高空自由落下。编写程序，求它在前3秒内下落的垂直距离。设重力加速度为10米&#x2F;秒。</p><h3 id="输入格式：-12"><a href="#输入格式：-12" class="headerlink" title="输入格式："></a>输入格式：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本题目没有输入。</span><br></pre></td></tr></table></figure><h3 id="输出格式：-13"><a href="#输出格式：-13" class="headerlink" title="输出格式："></a>输出格式：</h3><p>按照下列格式输出</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">height = 垂直距离值</span><br></pre></td></tr></table></figure><p>结果保留2位小数。</p><h3 id="代码：-12"><a href="#代码：-12" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> height;</span><br><span class="line">    <span class="type">double</span> t=<span class="number">3.0</span>,g=<span class="number">10.0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;height = %0.2lf&quot;</span>,g*t*t/<span class="number">2.0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-15计算摄氏温度"><a href="#1-15计算摄氏温度" class="headerlink" title="1-15计算摄氏温度"></a>1-15计算摄氏温度</h2><p>给定一个华氏温度F，本题要求编写程序，计算对应的摄氏温度C。计算公式：C&#x3D;5×(F−32)&#x2F;9。题目保证输入与输出均在整型范围内。</p><h3 id="输入格式：-13"><a href="#输入格式：-13" class="headerlink" title="输入格式："></a>输入格式：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入在一行中给出一个华氏温度。</span><br></pre></td></tr></table></figure><h3 id="输出格式：-14"><a href="#输出格式：-14" class="headerlink" title="输出格式："></a>输出格式：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在一行中按照格式“Celsius = C”输出对应的摄氏温度C的整数值。</span><br></pre></td></tr></table></figure><h3 id="输入样式："><a href="#输入样式：" class="headerlink" title="输入样式："></a>输入样式：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">150</span><br></pre></td></tr></table></figure><h3 id="输出样例：-8"><a href="#输出样例：-8" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Celsius = 65</span><br></pre></td></tr></table></figure><h3 id="代码：-13"><a href="#代码：-13" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> f;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;f);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Celsius = %d&quot;</span>,<span class="number">5</span>*(f<span class="number">-32</span>)/<span class="number">9</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-16整数的四则运算"><a href="#1-16整数的四则运算" class="headerlink" title="1-16整数的四则运算"></a>1-16整数的四则运算</h2><p>本题要求编写程序，计算2个正整数的和、差、积、商并输出。题目保证输入和输出全部在整型范围内。</p><h3 id="输入格式：-14"><a href="#输入格式：-14" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出2个正整数A和B。</p><h3 id="输出格式：-15"><a href="#输出格式：-15" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在4行中按照格式“A 运算符 B &#x3D; 结果”顺序输出和、差、积、商。</p><h3 id="输入样例：-8"><a href="#输入样例：-8" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 2</span><br></pre></td></tr></table></figure><h3 id="输出样例：-9"><a href="#输出样例：-9" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 + 2 = 5</span><br><span class="line">3 - 2 = 1</span><br><span class="line">3 * 2 = 6</span><br><span class="line">3 / 2 = 1</span><br></pre></td></tr></table></figure><h3 id="代码：-14"><a href="#代码：-14" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d + %d = %d\n&quot;</span>,a,b,a+b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d - %d = %d\n&quot;</span>,a,b,a-b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d * %d = %d\n&quot;</span>,a,b,a*b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d / %d = %d\n&quot;</span>,a,b,a/b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-17练习5-1求m到n之和"><a href="#1-17练习5-1求m到n之和" class="headerlink" title="1-17练习5-1求m到n之和"></a>1-17练习5-1求m到n之和</h2><p>本题要求实现一个计算m~n（m&lt;n）之间所有整数的和的简单函数。</p><p><strong>函数接口定义：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum</span><span class="params">( <span class="type">int</span> m, <span class="type">int</span> n )</span>;</span><br></pre></td></tr></table></figure><p>其中m和n是用户传入的参数，保证有m&lt;n。函数返回的是m-n之间所有整数的和。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;    </span><br><span class="line">    <span class="type">int</span> m, n;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum(m, n));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-9"><a href="#输入样例：-9" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-5 8</span><br></pre></td></tr></table></figure><h3 id="输出样例：-10"><a href="#输出样例：-10" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum = 21</span><br></pre></td></tr></table></figure><h3 id="代码：-15"><a href="#代码：-15" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sum</span><span class="params">( <span class="type">int</span> m, <span class="type">int</span> n )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=m;i&lt;=n;i++)</span><br><span class="line">        sum=sum+i;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-18找两个数中最大者"><a href="#1-18找两个数中最大者" class="headerlink" title="1-18找两个数中最大者"></a>1-18找两个数中最大者</h2><p>本题要求对两个整数a和b，输出其中较大的数。</p><p><strong>函数接口定义：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">max</span><span class="params">( <span class="type">int</span> a, <span class="type">int</span> b )</span>;</span><br></pre></td></tr></table></figure><p>其中a和b是用户传入的参数，函数返回的是两者中较大的数。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">max</span><span class="params">( <span class="type">int</span> a, <span class="type">int</span> b )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;    </span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;max = %d\n&quot;</span>, max(a, b));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-10"><a href="#输入样例：-10" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-5 8</span><br></pre></td></tr></table></figure><h3 id="输出样例：-11"><a href="#输出样例：-11" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max = 8</span><br></pre></td></tr></table></figure><h3 id="代码：-16"><a href="#代码：-16" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">max</span><span class="params">( <span class="type">int</span> a, <span class="type">int</span> b )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span>(a&gt;b)?a:b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-19数字金字塔"><a href="#1-19数字金字塔" class="headerlink" title="1-19数字金字塔"></a>1-19数字金字塔</h2><p>本题要求实现函数输出n行数字金字塔。</p><p><strong>函数接口定义：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">pyramid</span><span class="params">( <span class="type">int</span> n )</span>;</span><br></pre></td></tr></table></figure><p>其中n是用户传入的参数，为[1, 9]的正整数。要求函数按照如样例所示的格式打印出n行数字金字塔。注</p><p>意每个数字后面跟一个空格。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">pyramid</span><span class="params">( <span class="type">int</span> n )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;    </span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    pyramid(n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-11"><a href="#输入样例：-11" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h3 id="输出样例：-12"><a href="#输出样例：-12" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    1 </span><br><span class="line">   2 2 </span><br><span class="line">  3 3 3 </span><br><span class="line"> 4 4 4 4 </span><br><span class="line">5 5 5 5 5 </span><br></pre></td></tr></table></figure><h3 id="代码：-17"><a href="#代码：-17" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">pyramid</span><span class="params">( <span class="type">int</span> n )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n-i;j++)</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;<span class="number">2</span>*i;k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(k%<span class="number">2</span>==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,i);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-20符号函数"><a href="#1-20符号函数" class="headerlink" title="1-20符号函数"></a>1-20符号函数</h2><p>本题要求实现符号函数sign(x)。</p><p><strong>函数接口定义：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sign</span><span class="params">( <span class="type">int</span> x )</span>;</span><br></pre></td></tr></table></figure><p>其中x是用户传入的整型参数。符号函数的定义为：若x大于0，sign(x) &#x3D; 1；若x等于0，sign(x) &#x3D; 0；否则，sign(x) &#x3D; −1。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">sign</span><span class="params">( <span class="type">int</span> x )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sign(%d) = %d\n&quot;</span>, x, sign(x));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-12"><a href="#输入样例：-12" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><h3 id="输出样例：-13"><a href="#输出样例：-13" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sign(10) = 1</span><br></pre></td></tr></table></figure><h3 id="代码：-18"><a href="#代码：-18" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sign</span><span class="params">( <span class="type">int</span> x )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (x==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x&lt;<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-1使用函数求奇数和"><a href="#2-1使用函数求奇数和" class="headerlink" title="2-1使用函数求奇数和"></a>2-1使用函数求奇数和</h2><p>本题要求实现一个函数，计算N个整数中所有奇数的和，同时实现一个判断奇偶性的函数。</p><p><strong>函数接口定义：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">even</span><span class="params">( <span class="type">int</span> n )</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">OddSum</span><span class="params">( <span class="type">int</span> List[], <span class="type">int</span> N )</span>;</span><br></pre></td></tr></table></figure><p>其中函数even将根据用户传入的参数n的奇偶性返回相应值：当n为偶数时返回1，否则返回0。函数OddSum负责计算并返回传入的N个整数List[]中所有奇数的和。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 10</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">even</span><span class="params">( <span class="type">int</span> n )</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">OddSum</span><span class="params">( <span class="type">int</span> List[], <span class="type">int</span> N )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;    </span><br><span class="line">    <span class="type">int</span> List[MAXN], N, i;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Sum of ( &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> ( i=<span class="number">0</span>; i&lt;N; i++ ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;List[i]);</span><br><span class="line">        <span class="keyword">if</span> ( even(List[i])==<span class="number">0</span> )</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, List[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;) = %d\n&quot;</span>, OddSum(List, N));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-13"><a href="#输入样例：-13" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">2 -3 7 88 0 15</span><br></pre></td></tr></table></figure><h3 id="输出样例：-14"><a href="#输出样例：-14" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sum of ( -3 7 15 ) = 19</span><br></pre></td></tr></table></figure><h3 id="代码：-19"><a href="#代码：-19" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">even</span><span class="params">( <span class="type">int</span> n )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span>(n%<span class="number">2</span>==<span class="number">0</span>) ?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">OddSum</span><span class="params">( <span class="type">int</span> List[], <span class="type">int</span> N )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;N;i++)</span><br><span class="line">        <span class="keyword">if</span>(even(List[i])==<span class="number">0</span>) </span><br><span class="line">            sum+=List[i];</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2使用函数计算两点间的距离"><a href="#2-2使用函数计算两点间的距离" class="headerlink" title="2-2使用函数计算两点间的距离"></a>2-2使用函数计算两点间的距离</h2><p>本题要求实现一个函数，对给定平面任意两点坐标(x1,y1 )和(x2 ,y2 )，求这两点之间的距离。</p><p><strong>函数接口定义：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">dist</span><span class="params">( <span class="type">double</span> x1, <span class="type">double</span> y1, <span class="type">double</span> x2, <span class="type">double</span> y2 )</span>;</span><br></pre></td></tr></table></figure><p>其中用户传入的参数为平面上两个点的坐标(x1, y1)和(x2, y2)，函数dist应返回两点间的距离。</p><p><strong>测试程序样例:</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">dist</span><span class="params">( <span class="type">double</span> x1, <span class="type">double</span> y1, <span class="type">double</span> x2, <span class="type">double</span> y2 )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;    </span><br><span class="line">    <span class="type">double</span> x1, y1, x2, y2;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %lf %lf&quot;</span>, &amp;x1, &amp;y1, &amp;x2, &amp;y2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;dist = %.2f\n&quot;</span>, dist(x1, y1, x2, y2));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-14"><a href="#输入样例：-14" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 10 200 100</span><br></pre></td></tr></table></figure><h3 id="输出样例：-15"><a href="#输出样例：-15" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dist = 210.24</span><br></pre></td></tr></table></figure><h3 id="代码：-20"><a href="#代码：-20" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">dist</span><span class="params">( <span class="type">double</span> x1, <span class="type">double</span> y1, <span class="type">double</span> x2, <span class="type">double</span> y2 )</span></span><br><span class="line">&#123;</span><br><span class="line">    x1=x1-x2;</span><br><span class="line">    y1=y1-y2;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>(x1*x1+y1*y1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3成绩是否合格"><a href="#2-3成绩是否合格" class="headerlink" title="2-3成绩是否合格"></a>2-3成绩是否合格</h2><p>输入成绩值x∈[0,100]，如果x≥60，则输出pass，否则输出fail。</p><h3 id="输入格式：-15"><a href="#输入格式：-15" class="headerlink" title="输入格式："></a>输入格式：</h3><p>直接输入[0,100]之间的1个整数，没有其它任何附加字符。</p><h3 id="输出格式：-16"><a href="#输出格式：-16" class="headerlink" title="输出格式："></a>输出格式：</h3><p>直接输出你“pass”或“fail”，没有其它任何附加字符。</p><h3 id="输入样例1：-2"><a href="#输入样例1：-2" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">78</span><br></pre></td></tr></table></figure><h3 id="输出样例1：-2"><a href="#输出样例1：-2" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pass</span><br></pre></td></tr></table></figure><h3 id="输入样例2：-2"><a href="#输入样例2：-2" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">46</span><br></pre></td></tr></table></figure><h3 id="输出样例2：-2"><a href="#输出样例2：-2" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fail</span><br></pre></td></tr></table></figure><h3 id="代码：-21"><a href="#代码：-21" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>||x&gt;<span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;error!!!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x&gt;=<span class="number">60</span>&amp;&amp;x&lt;=<span class="number">100</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;pass&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;fail&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-I-Love-GPLT"><a href="#2-4-I-Love-GPLT" class="headerlink" title="2-4 I Love GPLT"></a>2-4 I Love GPLT</h2><p>这道超级简单的题目没有任何输入。</p><p>你只需要把这句很重要的话 —— <code>I Love GPLT</code> ——竖着输出就可以了。</p><p>所谓“竖着输出”，是指每个字符占一行（包括空格），即每行只能有1个字符和回车。</p><h3 id="代码：-22"><a href="#代码：-22" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;I\n \nL\no\nv\ne\n \nG\nP\nL\nT\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-5输出各位数字"><a href="#2-5输出各位数字" class="headerlink" title="2-5输出各位数字"></a>2-5输出各位数字</h2><p>给定一个三位正整数，输出其百位数字、十位数字及个位数字。</p><h3 id="输入格式：-16"><a href="#输入格式：-16" class="headerlink" title="输入格式："></a>输入格式：</h3><p>直接输入一个三位正整数，没有其它任何附加字符。</p><h3 id="输出格式：-17"><a href="#输出格式：-17" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出所输入正整数的各个位数字，各个数字之间用逗号间隔，没有其它任何附加字符。</p><h3 id="输入样例：-15"><a href="#输入样例：-15" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">258</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-16"><a href="#输出样例：-16" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2,5,8</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-23"><a href="#代码：-23" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>,c=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    a=n % <span class="number">10</span>;</span><br><span class="line">    b=n /<span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">    c=n /<span class="number">100</span> % <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d,%d&quot;</span>,c,b,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-6-评分规则"><a href="#2-6-评分规则" class="headerlink" title="2-6 评分规则"></a>2-6 评分规则</h2><p>小明与伙伴们游戏，请来了5个裁判。对于每个孩子的表现，每个裁判给一个分数。总评分的计算规则是：去掉最高分，去掉最低分，剩下的分数计算平均分，作为总评分。请你帮小明编写程序计算总评分。</p><h3 id="输入格式：-17"><a href="#输入格式：-17" class="headerlink" title="输入格式："></a>输入格式：</h3><p>在一行中给出5个在0到100之间的整数，用一个空格隔开。这个5个整数已经按照从大到小顺序排好了。</p><h3 id="输出格式：-18"><a href="#输出格式：-18" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出总评分，要求保留小数点后2位。</p><h3 id="输入样例：-16"><a href="#输入样例：-16" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">100 99 98 97 96</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-17"><a href="#输出样例：-17" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">98.00</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-24"><a href="#代码：-24" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>];</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">float</span> avg;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[j]);</span><br><span class="line">    <span class="type">int</span> max=a[<span class="number">0</span>],min=a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(max&lt;a[i])</span><br><span class="line">            max=a[i];</span><br><span class="line">        <span class="keyword">if</span>(min&gt;a[i])</span><br><span class="line">            min=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sum=(a[<span class="number">0</span>]+a[<span class="number">1</span>]+a[<span class="number">2</span>]+a[<span class="number">3</span>]+a[<span class="number">4</span>])-(max+min);</span><br><span class="line">    avg=sum/<span class="number">3</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,avg);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-7圆球的体积"><a href="#2-7圆球的体积" class="headerlink" title="2-7圆球的体积"></a>2-7圆球的体积</h2><p>请编写程序，输入球的半径 <em>r</em> (<em>c**m</em>)，计算并输出球的体积 <em>v</em> (<em>cm</em>3)。</p><p><img src="https://images.ptausercontent.com/4f2cc94d-d63b-4c8e-8961-49688c36aeed.jpg" alt="题图.jpg"></p><h3 id="输入格式：-18"><a href="#输入格式：-18" class="headerlink" title="输入格式："></a>输入格式：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r</span><br></pre></td></tr></table></figure><h3 id="输出格式：-19"><a href="#输出格式：-19" class="headerlink" title="输出格式："></a>输出格式：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v</span><br></pre></td></tr></table></figure><p>要求：输出2位小数(末位四舍五入)。</p><h3 id="输入样例：-17"><a href="#输入样例：-17" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.25</span><br></pre></td></tr></table></figure><h3 id="输出样例：-18"><a href="#输出样例：-18" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8.18</span></span><br></pre></td></tr></table></figure><p>注：<em>π</em>&#x3D;3.1415926535897932384626…</p><h3 id="代码：-25"><a href="#代码：-25" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> pi=<span class="number">3.1415926535897932384626</span>;</span><br><span class="line">    <span class="type">double</span> r;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;r);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>,<span class="number">4.0</span>/<span class="number">3</span>*pi*r*r*r);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-8-判断体质完整版"><a href="#2-8-判断体质完整版" class="headerlink" title="2-8 判断体质完整版"></a>2-8 判断体质完整版</h2><p>体质指数（ BMI）是目前国际上常用的衡量人体胖瘦程度以及是否健康的一个标准。BMI的计算方法如下： 体质指数（BMI） &#x3D; 体重（kg）&#x2F; 身高（ m )的平方。</p><table><thead><tr><th>胖瘦程度</th><th>BMI</th></tr></thead><tbody><tr><td>偏瘦</td><td>BMI &lt; 18.5</td></tr><tr><td>正常</td><td>18.5&lt;&#x3D;BMI &lt; 24</td></tr><tr><td>偏胖</td><td>24&lt;&#x3D; BMI &lt;28</td></tr><tr><td>肥胖</td><td>28&lt;&#x3D;BMI &lt;40</td></tr><tr><td>极重度肥胖</td><td>BMI &gt;&#x3D; 40</td></tr></tbody></table><h3 id="输入格式：-19"><a href="#输入格式：-19" class="headerlink" title="输入格式："></a>输入格式：</h3><p>在一行里输入体重 和 身高的值</p><h3 id="输出格式：-20"><a href="#输出格式：-20" class="headerlink" title="输出格式："></a>输出格式：</h3><p>根据BMI的值，输出表格中的肥胖程度。</p><h3 id="输入样例：-18"><a href="#输入样例：-18" class="headerlink" title="输入样例："></a>输入样例：</h3><p>在这里给出一组输入。例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">62 1.71</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-19"><a href="#输出样例：-19" class="headerlink" title="输出样例："></a>输出样例：</h3><p>在这里给出相应的输出。例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">正常</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-26"><a href="#代码：-26" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> kg;</span><br><span class="line">    <span class="type">double</span> m;</span><br><span class="line">    <span class="type">double</span> bmi=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf&quot;</span>,&amp;kg,&amp;m);</span><br><span class="line">    bmi=kg/(m*m);</span><br><span class="line">    <span class="keyword">if</span>(bmi&lt;<span class="number">18.5</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;偏瘦\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(bmi&lt;<span class="number">24</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;正常\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(bmi&lt;<span class="number">28</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;偏胖\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(bmi&lt;<span class="number">40</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;肥胖\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;极重度肥胖\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-9-判断是否构成三角形"><a href="#2-9-判断是否构成三角形" class="headerlink" title="2-9 判断是否构成三角形"></a>2-9 判断是否构成三角形</h2><p>输入三角形的三边，判断是否能构成三角形。若能构成输出YES，否则输出NO。</p><h3 id="输入格式：-20"><a href="#输入格式：-20" class="headerlink" title="输入格式："></a>输入格式：</h3><p>在一行中直接输入3个整数，3个整数之间各用一个空格间隔，没有其他任何附加字符。</p><h3 id="输出格式：-21"><a href="#输出格式：-21" class="headerlink" title="输出格式："></a>输出格式：</h3><p>直接输出YES或NO，没有其他任何附加字符。</p><h3 id="输入样例1：-3"><a href="#输入样例1：-3" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 5 6</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例1：-3"><a href="#输出样例1：-3" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例2：-3"><a href="#输入样例2：-3" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 2 4</span><br></pre></td></tr></table></figure><h3 id="输出样例2：-3"><a href="#输出样例2：-3" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure><h3 id="代码：-27"><a href="#代码：-27" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a,b,c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">    <span class="keyword">if</span>(((a+b)&gt;c) &amp;&amp; ((a+c)&gt;b) &amp;&amp; ((b+c)&gt;a))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-10降价提醒机器人"><a href="#2-10降价提醒机器人" class="headerlink" title="2-10降价提醒机器人"></a>2-10降价提醒机器人</h2><p>小 T 想买一个玩具很久了，但价格有些高，他打算等便宜些再买。但天天盯着购物网站很麻烦，请你帮小 T 写一个降价提醒机器人，当玩具的当前价格比他设定的价格便宜时发出提醒。</p><h3 id="输入格式：-21"><a href="#输入格式：-21" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行是两个正整数 <em>N</em> 和 <em>M</em> (1≤<em>N</em>≤100,0≤<em>M</em>≤1000)，表示有 <em>N</em> 条价格记录，小 T 设置的价格为 <em>M</em>。</p><p>接下来 <em>N</em> 行，每行有一个实数 <em>P**i</em>（−1000.0&lt;<em>P**i</em>&lt;1000.0），表示一条价格记录。</p><h3 id="输出格式：-22"><a href="#输出格式：-22" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对每一条比设定价格 <em>M</em> 便宜的价格记录 <code>P</code>，在一行中输出 <code>On Sale! P</code>，其中 <code>P</code> 输出到小数点后 1 位。</p><h3 id="输入样例：-19"><a href="#输入样例：-19" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">4 99</span><br><span class="line">98.0</span><br><span class="line">97.0</span><br><span class="line">100.2</span><br><span class="line">98.9</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-20"><a href="#输出样例：-20" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">On Sale! 98.0</span><br><span class="line">On Sale! 97.0</span><br><span class="line">On Sale! 98.9</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-28"><a href="#代码：-28" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span> s;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;s);</span><br><span class="line"><span class="keyword">if</span> (s &lt; m)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;On Sale! %.1f\n&quot;</span>, s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-11-先择结构-字符变换"><a href="#2-11-先择结构-字符变换" class="headerlink" title="2-11 先择结构-字符变换"></a>2-11 先择结构-字符变换</h2><p>接收用户从键盘输入的单个字符。然后根据字符的类型，对它的ASCII编码做加法，<strong>变换指定的字符为其他字符： 如果是数字，加上2；如果是大写字母，加上3；如果是小写字母，加上4。</strong></p><p>不是上述的字符范围，不变。</p><h3 id="输入格式：-22"><a href="#输入格式：-22" class="headerlink" title="输入格式："></a>输入格式：</h3><p>一个字符。</p><h3 id="输出格式：-23"><a href="#输出格式：-23" class="headerlink" title="输出格式："></a>输出格式：</h3><p>变换或未变换后的字符。</p><h3 id="输入样例1：-4"><a href="#输入样例1：-4" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例1：-4"><a href="#输出样例1：-4" class="headerlink" title="输出样例1："></a>输出样例1：</h3><p>数字是ASCII编码加上的2。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例2：-4"><a href="#输入样例2：-4" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">B</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例2：-4"><a href="#输出样例2：-4" class="headerlink" title="输出样例2："></a>输出样例2：</h3><p>数字是ASCII编码加上的3。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">E</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-29"><a href="#代码：-29" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;ch);</span><br><span class="line">    <span class="keyword">if</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">        ch=ch+<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(ch&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">        ch=ch+<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(ch&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">        ch=ch+<span class="number">4</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-12-三个整数排序"><a href="#2-12-三个整数排序" class="headerlink" title="2-12 三个整数排序"></a>2-12 三个整数排序</h2><p>从键盘上输入3个整数，按照升序排序，最后输出结果。</p><h3 id="输入格式：-23"><a href="#输入格式：-23" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入三个整数，中间用空格分隔。</p><h3 id="输出格式：-24"><a href="#输出格式：-24" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出三个整数，中间用英文逗号分隔，最后换行。</p><h3 id="输入样例1：-5"><a href="#输入样例1：-5" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1  2  3</span><br></pre></td></tr></table></figure><h3 id="输出样例1：-5"><a href="#输出样例1：-5" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1,2,3</span><br></pre></td></tr></table></figure><h3 id="输入样例2：-5"><a href="#输入样例2：-5" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1  3  2</span><br></pre></td></tr></table></figure><h3 id="输出样例2：-5"><a href="#输出样例2：-5" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1,2,3</span><br></pre></td></tr></table></figure><h3 id="输入样例3："><a href="#输入样例3：" class="headerlink" title="输入样例3："></a>输入样例3：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2  1  3</span><br></pre></td></tr></table></figure><h3 id="输出样例3："><a href="#输出样例3：" class="headerlink" title="输出样例3："></a>输出样例3：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="输入样例4："><a href="#输入样例4：" class="headerlink" title="输入样例4："></a>输入样例4：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2  3  1</span><br></pre></td></tr></table></figure><h3 id="输出样例4："><a href="#输出样例4：" class="headerlink" title="输出样例4："></a>输出样例4：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1,2,3</span><br></pre></td></tr></table></figure><h3 id="输入样例5："><a href="#输入样例5：" class="headerlink" title="输入样例5："></a>输入样例5：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3  1  2</span><br></pre></td></tr></table></figure><h3 id="输出样例5："><a href="#输出样例5：" class="headerlink" title="输出样例5："></a>输出样例5：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1,2,3</span><br></pre></td></tr></table></figure><h3 id="输入样例6："><a href="#输入样例6：" class="headerlink" title="输入样例6："></a>输入样例6：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3  2  1</span><br></pre></td></tr></table></figure><h3 id="输出样例6："><a href="#输出样例6：" class="headerlink" title="输出样例6："></a>输出样例6：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1,2,3</span><br></pre></td></tr></table></figure><h3 id="代码：-30"><a href="#代码：-30" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a,b,c;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">    <span class="keyword">if</span>(a&gt;b)</span><br><span class="line">    &#123;</span><br><span class="line">        temp=a;</span><br><span class="line">        a=b;</span><br><span class="line">        b=temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;c)</span><br><span class="line">    &#123;</span><br><span class="line">        temp=a;</span><br><span class="line">        a=c;</span><br><span class="line">        c=temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(b&gt;c)</span><br><span class="line">    &#123;</span><br><span class="line">        temp=b;</span><br><span class="line">        b=c;</span><br><span class="line">        c=temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d,%d\n&quot;</span>,a,b,c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-13强迫症"><a href="#2-13强迫症" class="headerlink" title="2-13强迫症"></a>2-13强迫症</h2><p>小强在统计一个小区里居民的出生年月，但是发现大家填写的生日格式不统一，例如有的人写 <code>199808</code>，有的人只写 <code>9808</code>。有强迫症的小强请你写个程序，把所有人的出生年月都整理成 <code>年年年年-月月</code> 格式。对于那些只写了年份后两位的信息，我们默认小于 <code>22</code> 都是 <code>20</code> 开头的，其他都是 <code>19</code> 开头的。</p><h3 id="输入格式：-24"><a href="#输入格式：-24" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个出生年月，为一个 6 位或者 4 位数，题目保证是 1000 年 1 月到 2021 年 12 月之间的合法年月。</p><h3 id="输出格式：-25"><a href="#输出格式：-25" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按标准格式 <code>年年年年-月月</code> 将输入的信息整理输出。</p><h3 id="输入样例-1："><a href="#输入样例-1：" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">9808</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-1："><a href="#输出样例-1：" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1998-08</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例-2："><a href="#输入样例-2：" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0510</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-2："><a href="#输出样例-2：" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2005-10</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例-3："><a href="#输入样例-3：" class="headerlink" title="输入样例 3："></a>输入样例 3：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">196711</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-3："><a href="#输出样例-3：" class="headerlink" title="输出样例 3："></a>输出样例 3：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1967-11</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-31"><a href="#代码：-31" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span>  N;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;N);</span><br><span class="line">    <span class="keyword">if</span>(N&gt;<span class="number">10000</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d-%.2d&quot;</span>,N/<span class="number">100</span>,N%<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(N/<span class="number">100</span>&lt;<span class="number">22</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d-%.2d&quot;</span>,N/<span class="number">100</span>+<span class="number">2000</span>,N%<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d-%.2d&quot;</span>,N/<span class="number">100</span>+<span class="number">1900</span>,N%<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-14计算天数"><a href="#2-14计算天数" class="headerlink" title="2-14计算天数"></a>2-14计算天数</h2><p>本题要求编写程序计算某年某月某日是该年中的第几天。</p><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中按照格式“yyyy&#x2F;mm&#x2F;dd”（即“年&#x2F;月&#x2F;日”）给出日期。注意：闰年的判别条件是该年年份能被4整除但不能被100整除、或者能被400整除。闰年的2月有29天。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行输出日期是该年中的第几天。</p><h3 id="输入样例1"><a href="#输入样例1" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2009/03/02</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例1"><a href="#输出样例1" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">61</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例2"><a href="#输入样例2" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2000/03/02</span><br></pre></td></tr></table></figure><h3 id="输出样例2"><a href="#输出样例2" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">62</span><br></pre></td></tr></table></figure><h3 id="代码：-32"><a href="#代码：-32" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> year, month, day;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d/%d/%d&quot;</span>, &amp;year, &amp;month, &amp;day);</span><br><span class="line">    <span class="keyword">if</span> (month &gt;= <span class="number">1</span> &amp;&amp; month &lt;= <span class="number">12</span> &amp;&amp; day &gt;= <span class="number">1</span> &amp;&amp; day &lt;= <span class="number">31</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> leap;</span><br><span class="line">        <span class="keyword">if</span> ((year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || year % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">            leap = <span class="number">29</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            leap = <span class="number">28</span>;</span><br><span class="line">        <span class="type">int</span> month_days[] = &#123;<span class="number">31</span>, leap, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;</span><br><span class="line">        <span class="type">int</span> days_count = <span class="number">0</span>;</span><br><span class="line">        -- month;</span><br><span class="line">        <span class="keyword">while</span> (month &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            days_count += month_days[(month --) - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        days_count += day;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, days_count);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-15找出最小值"><a href="#2-15找出最小值" class="headerlink" title="2-15找出最小值"></a>2-15找出最小值</h2><p>本题要求编写程序，找出给定一系列整数中的最小值。</p><h3 id="输入格式：-25"><a href="#输入格式：-25" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中首先给出一个正整数<em>n</em>，之后是<em>n</em>个整数，其间以空格分隔。</p><h3 id="输出格式：-26"><a href="#输出格式：-26" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按照“min &#x3D; 最小值”的格式输出<em>n</em>个整数中的最小值。</p><h3 id="输入样例：-20"><a href="#输入样例：-20" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 -2 -123 100 0</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-21"><a href="#输出样例：-21" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">min = -123</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-33"><a href="#代码：-33" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="type">int</span> min;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">    min=a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">        <span class="keyword">if</span>(min&gt;a)</span><br><span class="line">            min=a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;min = %d&quot;</span>,min);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-16统计80到90分人数"><a href="#2-16统计80到90分人数" class="headerlink" title="2-16统计80到90分人数"></a>2-16统计80到90分人数</h2><p>输入若干学生成绩，以负数结束输入。计算所有学生的平均成绩并统计成绩在80到90分（不含90）之间的人数。</p><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>在一行输入几个百分制实型成绩，数据之间以一个空格间隔。输入负数结束输入。</p><h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中按照“ave&#x3D;平均分，n&#x3D;人数”的顺序输出结果，其中平均分要求保留两位小数，人数是正整数。</p><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">58 89 80 55 -5</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ave=70.50,n=2</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-34"><a href="#代码：-34" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">    <span class="type">float</span> ave;</span><br><span class="line">    <span class="type">int</span> sum;</span><br><span class="line">    <span class="type">int</span> n=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;score);</span><br><span class="line">        <span class="keyword">if</span>(score&lt;<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        sum+=score;</span><br><span class="line">        <span class="keyword">if</span>(score&gt;=<span class="number">80</span> &amp;&amp; score &lt;<span class="number">90</span>)</span><br><span class="line">            n++;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">    ave=(<span class="type">float</span>)sum/num;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ave=%.2lf,n=%d&quot;</span>,ave,n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-17高空坠球"><a href="#2-17高空坠球" class="headerlink" title="2-17高空坠球"></a>2-17高空坠球</h2><p>皮球从某给定高度自由落下，触地后反弹到原高度的一半，再落下，再反弹，……，如此反复。问皮球在第<em>n</em>次落地时，在空中一共经过多少距离？第<em>n</em>次反弹的高度是多少？</p><h3 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出两个非负整数，分别是皮球的初始高度和<em>n</em>，均在长整型范围内。</p><h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中顺序输出皮球第<em>n</em>次落地时在空中经过的距离、以及第<em>n</em>次反弹的高度，其间以一个空格分隔，保留一位小数。题目保证计算结果不超过双精度范围。</p><h3 id="输入样例-1"><a href="#输入样例-1" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">33 5</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-1"><a href="#输出样例-1" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">94.9 1.0</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-35"><a href="#代码：-35" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> h;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">float</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f %d&quot;</span>,&amp;h,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        sum=h;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum+=h;</span><br><span class="line">            h/=<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        h/=<span class="number">2</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1f %.1f&quot;</span>,sum,h);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        h=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1f %.1f&quot;</span>,sum,h);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-18龟兔赛跑"><a href="#2-18龟兔赛跑" class="headerlink" title="2-18龟兔赛跑"></a>2-18龟兔赛跑</h2><p>乌龟与兔子进行赛跑，跑场是一个矩型跑道，跑道边可以随地进行休息。乌龟每分钟可以前进3米，兔子每分钟前进9米；兔子嫌乌龟跑得慢，觉得肯定能跑赢乌龟，于是，每跑10分钟回头看一下乌龟，若发现自己超过乌龟，就在路边休息，每次休息30分钟，否则继续跑10分钟；而乌龟非常努力，一直跑，不休息。假定乌龟与兔子在同一起点同一时刻开始起跑，请问T分钟后乌龟和兔子谁跑得快？</p><h3 id="输入格式：-26"><a href="#输入格式：-26" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出比赛时间T（分钟）。</p><h3 id="输出格式：-27"><a href="#输出格式：-27" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出比赛的结果：乌龟赢输出<code>@_@</code>，兔子赢输出<code>^_^</code>，平局则输出<code>-_-</code>；后跟1空格，再输出胜利者跑完的距离。</p><h3 id="输入样例：-21"><a href="#输入样例：-21" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">242</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-22"><a href="#输出样例：-22" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@_@ 726</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-36"><a href="#代码：-36" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="type">int</span> t_m=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> w_m=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;T);</span><br><span class="line">    w_m = T * <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; T; i++)</span><br><span class="line">        <span class="keyword">if</span> ((i % <span class="number">90</span> &gt;= <span class="number">0</span> &amp;&amp; i % <span class="number">90</span> &lt; <span class="number">10</span>) || (i % <span class="number">90</span> &gt;= <span class="number">40</span> &amp;&amp; i % <span class="number">90</span> &lt; <span class="number">50</span>) || (i % <span class="number">90</span> &gt;= <span class="number">80</span> &amp;&amp; i % <span class="number">90</span> &lt; <span class="number">90</span>))</span><br><span class="line">            t_m += <span class="number">9</span>;</span><br><span class="line">    <span class="keyword">if</span> (t_m &gt; w_m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;^_^&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>,t_m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (t_m == w_m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-_-&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, t_m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;@_@&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, w_m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-19求简单交错序列前N项和"><a href="#2-19求简单交错序列前N项和" class="headerlink" title="2-19求简单交错序列前N项和"></a>2-19求简单交错序列前N项和</h2><p>本题要求编写程序,计算序列 1 - 1&#x2F;4 + 1&#x2F;7 - 1&#x2F;10 + … 的前N项之和。</p><h3 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一个正整数N。</p><h3 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中按照“sum &#x3D; S”的格式输出部分和的值S，精确到小数点后三位。题目保证计算结果不超过双精度范围。</p><h3 id="输入样例-2"><a href="#输入样例-2" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-2"><a href="#输出样例-2" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sum = 0.819</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-37"><a href="#代码：-37" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">float</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> q=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum = sum + <span class="number">1.0</span>/q * t ;</span><br><span class="line">        q+=<span class="number">3</span>;</span><br><span class="line">        t*=(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum = %.3f&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-20含8的数字的个数"><a href="#2-20含8的数字的个数" class="headerlink" title="2-20含8的数字的个数"></a>2-20含8的数字的个数</h2><p>现代人对数字越来越讲究，都喜欢含有8的数字。现要你编程计算a至b之间的含有数字8的数的个数（比如181,88,8,28这些数都含有数字8，而21,45,49等没有含有数字8）。</p><h3 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>在一行中输入两个正整数a和b，用一个空格隔开。0&lt;a&lt;&#x3D;b&lt;100000。</p><h3 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出a和b之间含有8的数的个数。包括a和b。</p><h3 id="输入样例-3"><a href="#输入样例-3" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 30</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-3"><a href="#输出样例-3" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-38"><a href="#代码：-38" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="keyword">if</span> (a &gt; <span class="number">0</span> &amp;&amp; a &lt;= b &amp;&amp; b &lt; <span class="number">100000</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = a; i &lt;= b; i++)</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">10</span> == <span class="number">8</span> || i / <span class="number">10</span> % <span class="number">10</span> == <span class="number">8</span> || i / <span class="number">100</span> % <span class="number">10</span> == <span class="number">8</span> || i / <span class="number">1000</span> % <span class="number">10</span> == <span class="number">8</span> || i / <span class="number">10000</span> % <span class="number">10</span> == <span class="number">8</span> || i / <span class="number">100000</span> % <span class="number">10</span> == <span class="number">8</span>)</span><br><span class="line">                num++;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-1-1-2-…-n"><a href="#3-1-1-2-…-n" class="headerlink" title="3-1  1!+2!+…+n!"></a>3-1  1!+2!+…+n!</h2><p>Caculate 1!+2!+…+n!</p><h3 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h3><p>An integer for n.</p><h3 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h3><p>An interger for the result.</p><h3 id="Input-sample"><a href="#Input-sample" class="headerlink" title="Input sample:"></a>Input sample:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h3 id="Output-sample"><a href="#Output-sample" class="headerlink" title="Output sample:"></a>Output sample:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">153</span><br></pre></td></tr></table></figure><h3 id="代码：-39"><a href="#代码：-39" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++)</span><br><span class="line">            a *= j;</span><br><span class="line">        sum += a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2百鸡问题扩展-N鸡问题"><a href="#3-2百鸡问题扩展-N鸡问题" class="headerlink" title="3-2百鸡问题扩展-N鸡问题"></a>3-2百鸡问题扩展-N鸡问题</h2><p><code>N</code>元钱买<code>N</code>只鸡，公鸡每只5元，母鸡每只3元，小鸡1元3只，<code>N</code>元钱必须刚好买<code>N</code>只鸡，而且鸡必须整只买，不能劈开买。<br>有几种买法呢？这就是N鸡问题。</p><h3 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>在一行中输入一个正整数<code>N</code>。（<code>N&lt;500</code>）</p><h3 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中输出两个整数<code>c</code> <code>s</code>，中间用一个空格隔开，表示<code>N</code>元钱买<code>N</code>只鸡共有 <code>c</code> 种买法，且所有买法的公鸡数量之和是 <code>s</code>。<br><strong>如果无解，则 <code>s</code> 为 <code>-1</code>.</strong></p><h3 id="输入样例1-1"><a href="#输入样例1-1" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">100</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例1-1"><a href="#输出样例1-1" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 24</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例2-1"><a href="#输入样例2-1" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例2-1"><a href="#输出样例2-1" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0 -1</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-40"><a href="#代码：-40" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> i, j, z;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">500</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= n / <span class="number">5</span>; i++)</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= n / <span class="number">3</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                z = n - i - j;</span><br><span class="line">                <span class="keyword">if</span> (n == i * <span class="number">5</span> + j * <span class="number">3</span> + z / <span class="number">3</span> &amp;&amp; z % <span class="number">3</span> == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    sum += i;</span><br><span class="line">                    num++;</span><br><span class="line">                &#125; </span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span> (num &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, num, sum);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d -1&quot;</span>, num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3显示菱形"><a href="#3-3显示菱形" class="headerlink" title="3-3显示菱形"></a>3-3显示菱形</h2><p>请编写函数，输入菱形的行数和组成菱形的字符，输出对应的菱形图像。</p><h3 id="输入样例-4"><a href="#输入样例-4" class="headerlink" title="输入样例"></a>输入样例</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5 $</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-4"><a href="#输出样例-4" class="headerlink" title="输出样例"></a>输出样例</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  $</span><br><span class="line"> $$$</span><br><span class="line">$$$$$</span><br><span class="line"> $$$</span><br><span class="line">  $</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><p>要求：若行数小于等于 0，则输出 None；若行数是偶数，则输出Error。</p><h3 id="代码：-41"><a href="#代码：-41" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> half;</span><br><span class="line">    <span class="type">int</span> x, i, j;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot; %c&quot;</span>, &amp;ch);</span><br><span class="line">    half = n / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % <span class="number">2</span> != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (x = <span class="number">1</span>; x &lt;= n; x++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (x &lt;= (n / <span class="number">2</span>) + <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= half; i++)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                    <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= num; j++)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, ch);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (x != (n / <span class="number">2</span>) + <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        half--;</span><br><span class="line">                        num += <span class="number">2</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    half++;</span><br><span class="line">                    num -= <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= half; i++)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                    <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= num; j++)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, ch);</span><br><span class="line">                    <span class="keyword">if</span>(x != n)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n &lt;= <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;None&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-4换硬币"><a href="#3-4换硬币" class="headerlink" title="3-4换硬币"></a>3-4换硬币</h2><p>将一笔零钱换成5分、2分和1分的硬币，要求每种硬币至少有一枚，有几种不同的换法？</p><h3 id="输入格式-7"><a href="#输入格式-7" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出待换的零钱数额<em>x</em>∈(8,100)。</p><h3 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>要求按5分、2分和1分硬币的数量依次从大到小的顺序，输出各种换法。每行输出一种换法，格式为：“fen5:5分硬币数量, fen2:2分硬币数量, fen1:1分硬币数量, total:硬币总数量”。最后一行输出“count &#x3D; 换法个数”。</p><h3 id="输入样例-5"><a href="#输入样例-5" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">13</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-5"><a href="#输出样例-5" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fen5:2, fen2:1, fen1:1, total:4</span><br><span class="line">fen5:1, fen2:3, fen1:2, total:6</span><br><span class="line">fen5:1, fen2:2, fen1:4, total:7</span><br><span class="line">fen5:1, fen2:1, fen1:6, total:8</span><br><span class="line">count = 4</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-42"><a href="#代码：-42" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x, b, c, d, i, m, yue, jishu = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    x = x - <span class="number">8</span>;</span><br><span class="line">    b = x / <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = b; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        c = x - <span class="number">5</span> * i;</span><br><span class="line">        d = c / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (m = d; m &gt;= <span class="number">0</span>; m--)</span><br><span class="line">        &#123;</span><br><span class="line">            yue = x - <span class="number">5</span> * i - <span class="number">2</span> * m;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;fen5:%d, fen2:%d, fen1:%d, total:%d\n&quot;</span>, i + <span class="number">1</span>, m + <span class="number">1</span>, yue + <span class="number">1</span>, i + m + yue + <span class="number">3</span>);</span><br><span class="line">            jishu++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;count = %d&quot;</span>, jishu);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-5水仙花数"><a href="#3-5水仙花数" class="headerlink" title="3-5水仙花数"></a>3-5水仙花数</h2><p>输入两个3位的正整数m，n，输出[m，n]区间内所有的“水仙花数”。所谓“水仙花数”是指一个3位数，其各位数字的立方和等于该数本身。</p><h3 id="输入格式-8"><a href="#输入格式-8" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>测试数据由多组，处理到文件尾。每组测试输入两个3位的正整数m，n（100≤m&lt;n≤999）。</p><h3 id="输出格式-7"><a href="#输出格式-7" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>对于每组测试，若[m，n]区间内没有水仙花数则输出“none”（引号不必输出），否则逐行输出区间内所有的水仙花数，每行输出的格式具体参看输出样例。</p><h3 id="输入样例-6"><a href="#输入样例-6" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">100 150</span><br><span class="line">100 200</span><br></pre></td></tr></table></figure><h3 id="输出样例-6"><a href="#输出样例-6" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">none</span><br><span class="line">153=1*1*1+5*5*5+3*3*3</span><br></pre></td></tr></table></figure><h3 id="代码：-43"><a href="#代码：-43" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> m, n;</span><br><span class="line"><span class="type">int</span> temp;</span><br><span class="line"><span class="type">int</span> a, b, c;</span><br><span class="line"><span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> ((<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n))!=EOF)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m &gt; n)</span><br><span class="line">&#123;</span><br><span class="line">temp = m;</span><br><span class="line">m = n;</span><br><span class="line">n = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = m; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">a = i % <span class="number">10</span>;</span><br><span class="line">b = i / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">c = i / <span class="number">100</span> % <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> (i == a * a * a + b * b * b + c * c * c)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d=%d*%d*%d+%d*%d*%d+%d*%d*%d\n&quot;</span>, i, c, c, c, b, b, b, a, a, a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;none\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-6打印九九口诀表"><a href="#3-6打印九九口诀表" class="headerlink" title="3-6打印九九口诀表"></a>3-6打印九九口诀表</h2><p>下面是一个完整的下三角九九口诀表：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1*1=1   </span><br><span class="line">1*2=2   2*2=4   </span><br><span class="line">1*3=3   2*3=6   3*3=9   </span><br><span class="line">1*4=4   2*4=8   3*4=12  4*4=16  </span><br><span class="line">1*5=5   2*5=10  3*5=15  4*5=20  5*5=25  </span><br><span class="line">1*6=6   2*6=12  3*6=18  4*6=24  5*6=30  6*6=36  </span><br><span class="line">1*7=7   2*7=14  3*7=21  4*7=28  5*7=35  6*7=42  7*7=49  </span><br><span class="line">1*8=8   2*8=16  3*8=24  4*8=32  5*8=40  6*8=48  7*8=56  8*8=64  </span><br><span class="line">1*9=9   2*9=18  3*9=27  4*9=36  5*9=45  6*9=54  7*9=63  8*9=72  9*9=81  </span><br></pre></td></tr></table></figure><p>本题要求对任意给定的一位正整数<code>N</code>，输出从<code>1*1</code>到<code>N*N</code>的部分口诀表。</p><h3 id="输入格式：-27"><a href="#输入格式：-27" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个正整数<code>N</code>（1≤<code>N</code>≤9）。</p><h3 id="输出格式：-28"><a href="#输出格式：-28" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出下三角<code>N*N</code>部分口诀表，其中等号右边数字占4位、左对齐。</p><h3 id="输入样例：-22"><a href="#输入样例：-22" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-23"><a href="#输出样例：-23" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1*1=1   </span><br><span class="line">1*2=2   2*2=4   </span><br><span class="line">1*3=3   2*3=6   3*3=9   </span><br><span class="line">1*4=4   2*4=8   3*4=12  4*4=16  </span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-44"><a href="#代码：-44" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">if</span> (n &gt;= <span class="number">1</span> &amp;&amp; n &lt;= <span class="number">9</span>)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%-4d&quot;</span>,j,i,i*j);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-7输出三角形字符阵列"><a href="#3-7输出三角形字符阵列" class="headerlink" title="3-7输出三角形字符阵列"></a>3-7输出三角形字符阵列</h2><p>本题要求编写程序，输出<em>n</em>行由大写字母A开始构成的三角形字符阵列。</p><h3 id="输入格式：-28"><a href="#输入格式：-28" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个正整数<em>n</em>（1≤<em>n</em>&lt;7）。</p><h3 id="输出格式：-29"><a href="#输出格式：-29" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出<em>n</em>行由大写字母A开始构成的三角形字符阵列。格式见输出样例，其中每个字母后面都有一个空格。</p><h3 id="输入样例：-23"><a href="#输入样例：-23" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-24"><a href="#输出样例：-24" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A B C D </span><br><span class="line">E F G </span><br><span class="line">H I </span><br><span class="line">J </span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-45"><a href="#代码：-45" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> s = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">if</span> (n &gt;= <span class="number">1</span> &amp;&amp; n &lt; <span class="number">7</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;=<span class="number">1</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line">num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">char</span> j = s; j &lt;= <span class="string">&#x27;Z&#x27;</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c &quot;</span>,j);</span><br><span class="line">num++;</span><br><span class="line">s = j + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (num == i)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-8神奇的数学之回文数"><a href="#3-8神奇的数学之回文数" class="headerlink" title="3-8神奇的数学之回文数"></a>3-8神奇的数学之回文数</h2><p>回文数是一种数字。如：8008, 这个数字正读是8008,倒读也是8008,正读倒读一样，所以这个数字就是回文数。任取一个正整数，如果不是回文数，将该数与他的倒序数相加，若其和不是回文数，则重复上述步骤，一直到获得回文数为止。例如：68变成154（68+86），再变成605（154+451），最后变成1111（605+506），而1111是回文数。于是有数学家提出一个猜想：不论开始是什么正整数，在经过有限次正序数和倒序数相加的步骤后，都会得到一个回文数。现在请你编程序验证猜想</p><h3 id="输入格式-9"><a href="#输入格式-9" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>每行一个正整数。</p><p>特别说明：输入的数据保证中间结果小于2^31</p><h3 id="输出格式-8"><a href="#输出格式-8" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>对应每个输入，输出两行，一行是变换的次数，一行是变换的过程。</p><h3 id="输入样例-7"><a href="#输入样例-7" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">27228  </span><br><span class="line">37649</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-7"><a href="#输出样例-7" class="headerlink" title="输出样例:"></a>输出样例:</h3><p>在这里给出相应的输出。例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">27228---&gt;109500---&gt;115401---&gt;219912</span><br><span class="line">2</span><br><span class="line">37649---&gt;132322---&gt;355553</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-46"><a href="#代码：-46" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 1000</span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">long</span>  n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>,&amp;n)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="type">int</span> a[M]=&#123;n&#125;; <span class="comment">//用数组保存每次变换的数 第一个存放原始数据</span></span><br><span class="line">        <span class="type">int</span> count=<span class="number">0</span>; <span class="comment">// 计数器</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)  <span class="comment">//循环恒为真，一直变换， 直到是回文数break</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> temp=<span class="number">0</span>; <span class="comment">//临时变量 为倒序数</span></span><br><span class="line">            n=a[count]; <span class="comment">//n的值一直在变，取值为数组中的数字进行计算</span></span><br><span class="line">            <span class="keyword">while</span>(n!=<span class="number">0</span>) <span class="comment">//求n倒序数temp</span></span><br><span class="line">            &#123;</span><br><span class="line">                temp=temp*<span class="number">10</span>+n%<span class="number">10</span>;</span><br><span class="line">                n=n/<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(temp==a[count]) <span class="comment">//回文数 倒序数等于该数</span></span><br><span class="line">                <span class="keyword">break</span>; <span class="comment">//退出循环</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                count++; <span class="comment">//计数器+1</span></span><br><span class="line">                a[count]=temp+a[count<span class="number">-1</span>]; <span class="comment">//变化数字为该数加上倒序数</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 循环结束，找到回文数，并且中间变换过程数字均存放在数组中，直接输出</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,count);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;count;i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d---&gt;&quot;</span>,a[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a[count]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-9求1-3-5-……-n"><a href="#3-9求1-3-5-……-n" class="headerlink" title="3-9求1!+3!+5!+……+n!"></a>3-9求1!+3!+5!+……+n!</h2><p>求1!+3!+5!+……+n!的和，要求用循环嵌套设计，n&lt;12。</p><h3 id="输入格式-10"><a href="#输入格式-10" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一个不超过12的正整数n。</p><h3 id="输出格式-9"><a href="#输出格式-9" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中按照格式“n&#x3D;n值,s&#x3D;阶乘和”的顺序输出，其中阶乘和是正整数。</p><h3 id="输入样例-8"><a href="#输入样例-8" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-8"><a href="#输出样例-8" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=5,s=127</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-47"><a href="#代码：-47" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">if</span> (n &gt; <span class="number">0</span> &amp;&amp; n &lt; <span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i+=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++)</span><br><span class="line">a *= j;</span><br><span class="line">s += a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;n=%d,s=%d&quot;</span>,n,s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-10六大门派身份识别"><a href="#3-10六大门派身份识别" class="headerlink" title="3-10六大门派身份识别"></a>3-10六大门派身份识别</h2><p>武林中六大门派“少林派、武当派、昆仑派、峨嵋派、华山派、崆峒派”的弟子众多，他们行走江湖，需要能够互相识别身份，以免被邪门歪道的恶人冒充。</p><p>六大门派（以下简称“正派”）的掌门人聚在一起闭关半年，设计出来这样一个识别方式：</p><p>每名正派弟子均有一个身份验证码，并熟知验证规则。当一名正派弟子遇见另一名自称为正派弟子的人，就要求对方报出身份验证码。若验证无误，则交个朋友；若验证失败，说明对方为假冒的，立即开战（当然，如果打不过就溜……）</p><p>验证码是这样的：</p><ul><li>由9位数字组成;</li><li>首位数字表示所在的门派编号，少林派、武当派、昆仑派、峨嵋派、华山派、崆峒派依次使用<code>0</code>-<code>5</code>表示;</li><li>接下来4位数字记为整数<code>a</code>，最后4位数字记为整数<code>b</code>; （若a、b不满4位，则左边添<code>0</code>补位）</li></ul><p>例如：<code>000100015</code>即表示少林派、<code>a</code>是<code>10</code>，<code>b</code>是<code>15</code></p><p>验证规则是这样的：</p><ol><li>找出整数<code>a</code>和整数<code>b</code>之间（包括a和b）的所有素数p1、p2、p3、… (提示: a、b均可以是<code>0-9999</code>的任何数）</li><li>计算所有这些素数的各位数字之和<code>sum</code> （若a、b之间没有素数，则<code>sum</code>计为<code>0</code>）</li><li>求出<code>sum</code>除以<code>6</code>的余数<code>r</code></li><li>若余数r与首位门派编号相同，则验证通过，否则为验证失败</li></ol><p>例如，验证码<code>000100015</code>可以通过验证，因为<code>10-15</code>之间的素数有<code>11</code>、<code>13</code>，其各位数字之和为(1+1+1+3) &#x3D; <code>6</code>，6除以6的余数为<code>0</code>，与门派编号<code>0</code>相同。</p><p>现在给你一些身份验证码，请进行验证、判断是正派弟子还是恶人冒充。</p><h3 id="输入格式-11"><a href="#输入格式-11" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>第一行给出1个不超过<code>100</code>的正整数<code>N</code>；</p><p>接下来<code>N</code>行，每行给出1个9位的验证码.</p><p>提示: C语言的scanf( )函数第一个参数若使用 <code>&quot;%d&quot;</code> 可以读取一个十进制整数，若使用 <code>&quot;%5d&quot;</code>则可以读取一个5位十进制整数。这条提示或可帮助你对此题进行输入。</p><h3 id="输出格式-10"><a href="#输出格式-10" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>对每一个验证码，在一行中给出验证结果：</p><ul><li>如果验证通过，先给出所在门派，然后是素数各位数字之和<code>sum</code>，中间空1格。 六大门派依次使用拼音表示：<code>shaolin</code>,<code>wudang</code>,<code>kunlun</code>,<code>emei</code>,<code>huashan</code>,<code>kongtong</code>；</li><li>如果验证失败，则要开战了，输出<code>Fighting!</code></li></ul><h3 id="输入样例1-2"><a href="#输入样例1-2" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">000200022</span><br><span class="line">219492021</span><br><span class="line">202230666</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例1-2"><a href="#输出样例1-2" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">shaolin 0</span><br><span class="line">Fighting!</span><br><span class="line">kunlun 986</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例2-2"><a href="#输入样例2-2" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">500320050</span><br><span class="line">400900105</span><br><span class="line">500100002</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例2-2"><a href="#输出样例2-2" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Fighting!</span><br><span class="line">huashan 22</span><br><span class="line">kongtong 17</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-48"><a href="#代码：-48" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> qingshan 666666</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isPrime</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">0</span>||n==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">2</span>; i &lt;= (<span class="type">int</span>)<span class="built_in">sqrt</span>(n)+<span class="number">1</span>; i ++)</span><br><span class="line">        <span class="keyword">if</span>(n%i == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">xx</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        sum+=n%<span class="number">10</span>;</span><br><span class="line">        n=n/<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> m=<span class="number">0</span>,l=<span class="number">0</span>,n=<span class="number">0</span>,i=<span class="number">0</span>,j=<span class="number">0</span>,x=<span class="number">0</span>,y=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> o=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">if</span> (x&lt;=<span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;x;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%1d%4d%4d&quot;</span>,&amp;n,&amp;m,&amp;l);</span><br><span class="line">        <span class="keyword">if</span>(m&gt;l)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> t=m;</span><br><span class="line">                m=l;</span><br><span class="line">                l=t;</span><br><span class="line">            &#125;</span><br><span class="line">        o = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = m; i &lt;= l; i ++)</span><br><span class="line">            <span class="keyword">if</span>(isPrime(i))</span><br><span class="line">                o+=xx(i);</span><br><span class="line">        y=o%<span class="number">6</span>;</span><br><span class="line">        <span class="keyword">if</span>(y==n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(y==<span class="number">0</span>)&#123;<span class="built_in">printf</span>(<span class="string">&quot;shaolin %d\n&quot;</span>,o);&#125;</span><br><span class="line">            <span class="keyword">if</span>(y==<span class="number">1</span>)&#123;<span class="built_in">printf</span>(<span class="string">&quot;wudang %d\n&quot;</span>,o);&#125;</span><br><span class="line">            <span class="keyword">if</span>(y==<span class="number">2</span>)&#123;<span class="built_in">printf</span>(<span class="string">&quot;kunlun %d\n&quot;</span>,o);&#125;</span><br><span class="line">            <span class="keyword">if</span>(y==<span class="number">3</span>)&#123;<span class="built_in">printf</span>(<span class="string">&quot;emei %d\n&quot;</span>,o);&#125;</span><br><span class="line">            <span class="keyword">if</span>(y==<span class="number">4</span>)&#123;<span class="built_in">printf</span>(<span class="string">&quot;huashan %d\n&quot;</span>,o);&#125;</span><br><span class="line">            <span class="keyword">if</span>(y==<span class="number">5</span>)&#123;<span class="built_in">printf</span>(<span class="string">&quot;kongtong %d\n&quot;</span>,o);&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Fighting!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-11使用函数输出水仙花数"><a href="#3-11使用函数输出水仙花数" class="headerlink" title="3-11使用函数输出水仙花数"></a>3-11使用函数输出水仙花数</h2><p>水仙花数是指一个<em>N</em>位正整数（<em>N</em>≥3），它的每个位上的数字的<em>N</em>次幂之和等于它本身。例如：153&#x3D;13+53+33。 本题要求编写两个函数，一个判断给定整数是否水仙花数，另一个按从小到大的顺序打印出给定区间(<em>m</em>,<em>n</em>)内所有的水仙花数。</p><h3 id="函数接口定义："><a href="#函数接口定义：" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">narcissistic</span><span class="params">( <span class="type">int</span> number )</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintN</span><span class="params">( <span class="type">int</span> m, <span class="type">int</span> n )</span>;</span><br></pre></td></tr></table></figure><p>函数<code>narcissistic</code>判断<code>number</code>是否为水仙花数，是则返回1，否则返回0。</p><p>函数<code>PrintN</code>则打印开区间(<code>m</code>, <code>n</code>)内所有的水仙花数，每个数字占一行。题目保证100≤<code>m</code>≤<code>n</code>≤10000。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">narcissistic</span><span class="params">( <span class="type">int</span> number )</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintN</span><span class="params">( <span class="type">int</span> m, <span class="type">int</span> n )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> m, n;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">    <span class="keyword">if</span> ( narcissistic(m) ) <span class="built_in">printf</span>(<span class="string">&quot;%d is a narcissistic number\n&quot;</span>, m);</span><br><span class="line">    PrintN(m, n);</span><br><span class="line">    <span class="keyword">if</span> ( narcissistic(n) ) <span class="built_in">printf</span>(<span class="string">&quot;%d is a narcissistic number\n&quot;</span>, n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-24"><a href="#输入样例：-24" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">153 400</span><br></pre></td></tr></table></figure><h3 id="输出样例：-25"><a href="#输出样例：-25" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">153 is a narcissistic number</span><br><span class="line">370</span><br><span class="line">371</span><br></pre></td></tr></table></figure><h3 id="代码：-49"><a href="#代码：-49" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">narcissistic</span><span class="params">(<span class="type">int</span> number)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> fl = number;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> a[N] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="type">int</span> flag;</span><br><span class="line">    <span class="type">int</span> j, i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (number)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i++] = number % <span class="number">10</span>;</span><br><span class="line">        number /= <span class="number">10</span>;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; count; j++)</span><br><span class="line">            flag *= a[i];</span><br><span class="line">        sum += flag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum == fl)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintN</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = m + <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (narcissistic(i))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-12输入3个整数并输出其和"><a href="#3-12输入3个整数并输出其和" class="headerlink" title="3-12输入3个整数并输出其和"></a>3-12输入3个整数并输出其和</h2><p>编写一段程序，像下面这样显示读取到的三个整数的和。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">请输入三个整数。</span><br><span class="line">整数1：7（回车）</span><br><span class="line">整数2：15（回车）</span><br><span class="line">整数3：23（回车）</span><br><span class="line">它们的和是45。</span><br></pre></td></tr></table></figure><h3 id="输入格式-12"><a href="#输入格式-12" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>在每个提示符后输入整数，并回车。</p><h3 id="输出格式-11"><a href="#输出格式-11" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>参见题干说明。</p><h3 id="输入样例-9"><a href="#输入样例-9" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">15</span><br><span class="line">23</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-9"><a href="#输出样例-9" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请输入三个整数。</span><br><span class="line">整数1：整数2：整数3：它们的和是45。</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-50"><a href="#代码：-50" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a,b,c,sum;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入三个整数。\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;整数1：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;整数2：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;整数3：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c);</span><br><span class="line">    sum=a+b+c;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;它们的和是%d。\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-13计算输入三个整数中最小值"><a href="#3-13计算输入三个整数中最小值" class="headerlink" title="3-13计算输入三个整数中最小值"></a>3-13计算输入三个整数中最小值</h2><p>编写一段程序，计算出输入的三个整数中的最小值并显示。</p><ul><li>注意使用 if 语句。</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请输入三个整数。</span><br><span class="line">12  67  -56 （回车）</span><br><span class="line">其中的最小值为-56。</span><br></pre></td></tr></table></figure><h3 id="输入样例-10"><a href="#输入样例-10" class="headerlink" title="输入样例:"></a>输入样例:</h3><p>在同一行中输入三个整数， 用空格隔开，最后敲回车。例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">12  67  -56  （回车）</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-10"><a href="#输出样例-10" class="headerlink" title="输出样例:"></a>输出样例:</h3><p>输出提示符， 和结果。例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请输入三个整数。</span><br><span class="line">其中的最小值为-56。</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-51"><a href="#代码：-51" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a,b,c;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入三个整数。\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c);</span><br><span class="line">    <span class="keyword">if</span>(a&gt;b)</span><br><span class="line">        a=b;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a&gt;c)</span><br><span class="line">        a=c;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;其中的最小值为%d。\n&quot;</span>,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-14偶数之和"><a href="#3-14偶数之和" class="headerlink" title="3-14偶数之和"></a>3-14偶数之和</h2><p>输入n，求[1，n]范围内的所有偶数之和。</p><h3 id="输入格式-13"><a href="#输入格式-13" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>测试数据有多组。每组测试数据输入一个整数n（0&lt;n&lt;1000）。若n&#x3D;0，则输入结束。</p><h3 id="输出格式-12"><a href="#输出格式-12" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>对于每组测试，求[1，n]中的偶数之和。</p><h3 id="输入样例-11"><a href="#输入样例-11" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">9</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="输出样例-11"><a href="#输出样例-11" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">30</span><br><span class="line">20</span><br></pre></td></tr></table></figure><h3 id="代码：-52"><a href="#代码：-52" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n,i,sum;</span><br><span class="line">    l1:<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">0</span> &amp;&amp; n&lt;<span class="number">1000</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">if</span>(i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">                sum += i;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">        sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">goto</span> l1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-15斐波那契数列"><a href="#3-15斐波那契数列" class="headerlink" title="3-15斐波那契数列"></a>3-15斐波那契数列</h2><p>意大利数学家斐波那契（Leonardo Fibonacci）是12、13世纪欧洲数学界的代表人物。他提出的“兔子问题”引起了后人的极大兴趣。 “兔子问题”假定一对大兔子每一个月可以生一对小兔子，而小兔子出生后两个月就有繁殖能力，问从一对小兔子开始，n个月后能繁殖成多少对兔子？</p><h3 id="输入格式-14"><a href="#输入格式-14" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。每组测试输入一个正整数n（1≤n≤46）。</p><h3 id="输出格式-13"><a href="#输出格式-13" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>对于每组测试，输出n个月后能繁殖成的兔子对数。</p><h3 id="输入样例-12"><a href="#输入样例-12" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">4</span><br></pre></td></tr></table></figure><h3 id="输出样例-12"><a href="#输出样例-12" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="代码：-53"><a href="#代码：-53" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j,t,n;</span><br><span class="line">    <span class="type">int</span> tu1=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> tu3=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;t;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        <span class="type">int</span> a[n];</span><br><span class="line">        a[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        a[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">        tu1=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span>(tu1&gt;=<span class="number">0</span> &amp;&amp; tu1&lt;=<span class="number">45</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(tu1==<span class="number">0</span> || tu1==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                a[i]=<span class="number">1</span>;</span><br><span class="line">                tu3=a[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(tu1&gt;=<span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(j=<span class="number">2</span>;j&lt;=tu1;j++)</span><br><span class="line">                    a[j]=a[j<span class="number">-1</span>]+a[j<span class="number">-2</span>];</span><br><span class="line">                tu3=a[tu1];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,tu3);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-16数字金字塔"><a href="#3-16数字金字塔" class="headerlink" title="3-16数字金字塔"></a>3-16数字金字塔</h2><p>本题要求实现函数输出n行数字金字塔。</p><h3 id="函数接口定义：-1"><a href="#函数接口定义：-1" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">pyramid</span><span class="params">( <span class="type">int</span> n )</span>;</span><br></pre></td></tr></table></figure><p>其中<code>n</code>是用户传入的参数，为[1, 9]的正整数。要求函数按照如样例所示的格式打印出<code>n</code>行数字金字塔。注</p><p>意每个数字后面跟一个空格。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">pyramid</span><span class="params">( <span class="type">int</span> n )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;    </span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    pyramid(n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-25"><a href="#输入样例：-25" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-26"><a href="#输出样例：-26" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    1 </span><br><span class="line">   2 2 </span><br><span class="line">  3 3 3 </span><br><span class="line"> 4 4 4 4 </span><br><span class="line">5 5 5 5 5 </span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-54"><a href="#代码：-54" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">pyramid</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, k, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (k = i; k &lt;= n<span class="number">-1</span>; k++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= i; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-17判断奇偶性"><a href="#3-17判断奇偶性" class="headerlink" title="3-17判断奇偶性"></a>3-17判断奇偶性</h2><p>本题要求实现判断给定整数奇偶性的函数。</p><h3 id="函数接口定义：-2"><a href="#函数接口定义：-2" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">even</span><span class="params">( <span class="type">int</span> n )</span>;</span><br></pre></td></tr></table></figure><p>其中<code>n</code>是用户传入的整型参数。当<code>n</code>为偶数时，函数返回1；<code>n</code>为奇数时返回0。注意：0是偶数。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">even</span><span class="params">( <span class="type">int</span> n )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;    </span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">if</span> (even(n))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d is even.\n&quot;</span>, n);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d is odd.\n&quot;</span>, n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例1：-6"><a href="#输入样例1：-6" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-6</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例1：-6"><a href="#输出样例1：-6" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-6 is even.</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例2：-6"><a href="#输入样例2：-6" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h3 id="输出样例2：-6"><a href="#输出样例2：-6" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 is odd.</span><br></pre></td></tr></table></figure><h3 id="代码：-55"><a href="#代码：-55" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">even</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-18使用函数计算两点间的距离"><a href="#3-18使用函数计算两点间的距离" class="headerlink" title="3-18使用函数计算两点间的距离"></a>3-18使用函数计算两点间的距离</h2><p>本题要求实现一个函数，对给定平面任意两点坐标(<em>x</em>1,<em>y</em>1)和(<em>x</em>2,<em>y</em>2)，求这两点之间的距离。</p><h3 id="函数接口定义：-3"><a href="#函数接口定义：-3" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">dist</span><span class="params">( <span class="type">double</span> x1, <span class="type">double</span> y1, <span class="type">double</span> x2, <span class="type">double</span> y2 )</span>;</span><br></pre></td></tr></table></figure><p>其中用户传入的参数为平面上两个点的坐标(<code>x1</code>, <code>y1</code>)和(<code>x2</code>, <code>y2</code>)，函数<code>dist</code>应返回两点间的距离。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">dist</span><span class="params">( <span class="type">double</span> x1, <span class="type">double</span> y1, <span class="type">double</span> x2, <span class="type">double</span> y2 )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;    </span><br><span class="line">    <span class="type">double</span> x1, y1, x2, y2;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %lf %lf&quot;</span>, &amp;x1, &amp;y1, &amp;x2, &amp;y2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;dist = %.2f\n&quot;</span>, dist(x1, y1, x2, y2));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-26"><a href="#输入样例：-26" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10 10 200 100</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-27"><a href="#输出样例：-27" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dist = 210.24</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-56"><a href="#代码：-56" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">dist</span><span class="params">(<span class="type">double</span> x1, <span class="type">double</span> y1, <span class="type">double</span> x2, <span class="type">double</span> y2)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-19使用函数统计指定数字的个数"><a href="#3-19使用函数统计指定数字的个数" class="headerlink" title="3-19使用函数统计指定数字的个数"></a>3-19使用函数统计指定数字的个数</h2><p>本题要求实现一个统计整数中指定数字的个数的简单函数。</p><h3 id="函数接口定义：-4"><a href="#函数接口定义：-4" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">CountDigit</span><span class="params">( <span class="type">int</span> number, <span class="type">int</span> digit )</span>;</span><br></pre></td></tr></table></figure><p>其中<code>number</code>是不超过长整型的整数，<code>digit</code>为[0, 9]区间内的整数。函数<code>CountDigit</code>应返回<code>number</code>中<code>digit</code>出现的次数。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">CountDigit</span><span class="params">( <span class="type">int</span> number, <span class="type">int</span> digit )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> number, digit;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;number, &amp;digit);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Number of digit %d in %d: %d\n&quot;</span>, digit, number, CountDigit(number, digit));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-27"><a href="#输入样例：-27" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-21252 2</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-28"><a href="#输出样例：-28" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Number of digit 2 in -21252: 3</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-57"><a href="#代码：-57" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">CountDigit</span><span class="params">(<span class="type">int</span> number, <span class="type">int</span> digit)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (number &lt; <span class="number">0</span>) </span><br><span class="line">        number *= <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span> (number == <span class="number">0</span> &amp;&amp; digit == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> num = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (number&gt;<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (number % <span class="number">10</span> == digit)</span><br><span class="line">            num++;</span><br><span class="line">        number /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(number==digit)</span><br><span class="line">        num++;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-20圆形体体积计算器"><a href="#3-20圆形体体积计算器" class="headerlink" title="3-20圆形体体积计算器"></a>3-20圆形体体积计算器</h2><p>本题要求实现一个常用圆形体体积的计算器。计算公式如下：</p><ul><li>球体体积 <em>V</em>&#x3D;34<em>π**r</em>3，其中<em>r</em>是球体半径。</li><li>圆柱体体积 <em>V</em>&#x3D;<em>π**r</em>2<em>h</em>，其中<em>r</em>是底圆半径，<em>h</em>是高。</li><li>圆锥体体积 <em>V</em>&#x3D;31<em>π**r</em>2<em>h</em>，其中<em>r</em>是底圆半径，<em>h</em>是高。</li></ul><h3 id="输入格式：-29"><a href="#输入格式：-29" class="headerlink" title="输入格式："></a>输入格式：</h3><p>在每次计算之前，要求输出如下界面：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1-Ball</span><br><span class="line">2-Cylinder</span><br><span class="line">3-Cone</span><br><span class="line">other-Exit</span><br><span class="line">Please enter your command:</span><br></pre></td></tr></table></figure><p>然后从标准输入读进一个整数指令。</p><h3 id="输出格式：-30"><a href="#输出格式：-30" class="headerlink" title="输出格式："></a>输出格式：</h3><p>如果读入的指令是1或2或3，则执行相应的体积计算；如果是其他整数，则程序结束运行。</p><ul><li>当输入为1时，在计算球体体积之前，打印<code>Please enter the radius:</code>，然后读入球体半径，完成计算；</li><li>当输入为2时，在计算圆柱体体积之前，打印<code>Please enter the radius and the height:</code>，然后读入底圆半径和高，完成计算；</li><li>当输入为3时，在计算圆锥体体积之前，打印<code>Please enter the radius and the height:</code>，然后读入底圆半径和高，完成计算。</li></ul><p>计算结果在一行内输出，保留小数点后两位。</p><h3 id="输入样例：-28"><a href="#输入样例：-28" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">2.4 3</span><br><span class="line">0</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-29"><a href="#输出样例：-29" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1-Ball</span><br><span class="line">2-Cylinder</span><br><span class="line">3-Cone</span><br><span class="line">other-Exit</span><br><span class="line">Please enter your command:</span><br><span class="line">Please enter the radius:</span><br><span class="line">33.51</span><br><span class="line">1-Ball</span><br><span class="line">2-Cylinder</span><br><span class="line">3-Cone</span><br><span class="line">other-Exit</span><br><span class="line">Please enter your command:</span><br><span class="line">Please enter the radius and the height:</span><br><span class="line">18.10</span><br><span class="line">1-Ball</span><br><span class="line">2-Cylinder</span><br><span class="line">3-Cone</span><br><span class="line">other-Exit</span><br><span class="line">Please enter your command:</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-58"><a href="#代码：-58" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pi 3.1415926535</span></span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">Ball</span><span class="params">(<span class="type">double</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">4</span> / <span class="number">3.0</span> * pi * r * r * r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">Cylinder</span><span class="params">(<span class="type">double</span> r, <span class="type">double</span> h)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> pi * r * r * h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">Cone</span><span class="params">(<span class="type">double</span> r, <span class="type">double</span> h)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span> / <span class="number">3.0</span> * pi * r * r * h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> input;</span><br><span class="line"><span class="type">double</span> r = <span class="number">0</span>, h = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1-Ball\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;2-Cylinder\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;3-Cone\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;other-Exit\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter your command:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot; %c&quot;</span>,&amp;input);</span><br><span class="line"><span class="keyword">switch</span> (input)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the radius:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;r);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, Ball(r));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span><span class="number">&#x27;2&#x27;</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the radius and the height:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>, &amp;r, &amp;h);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, Cylinder(r, h));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the radius and the height:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>, &amp;r, &amp;h);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, Cone(r, h));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-1哥德巴赫猜想"><a href="#4-1哥德巴赫猜想" class="headerlink" title="4-1哥德巴赫猜想"></a>4-1哥德巴赫猜想</h2><p>数学领域著名的“哥德巴赫猜想”的大致意思是：任何一个大于2的偶数总能表示为两个素数之和。比如：24&#x3D;5+19，其中5和19都是素数。本实验的任务是设计一个程序，验证5000以内的偶数都可以分解成两个素数之和。</p><h3 id="输入格式-15"><a href="#输入格式-15" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一个(2, 5000]范围内的偶数N。</p><h3 id="输出格式-14"><a href="#输出格式-14" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中按照格式“N &#x3D; p + q”输出N的素数分解，其中p \le≤ q均为素数。又因为这样的分解不唯一（例如24还可以分解为7+17），要求必须输出所有解中p最小的解。</p><h3 id="输入样例-13"><a href="#输入样例-13" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">24</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-13"><a href="#输出样例-13" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">24 = 5 + 19</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-59"><a href="#代码：-59" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">sushu</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span> (n % i == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span> (n == i)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">int</span> p = <span class="number">0</span>, q = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line"><span class="keyword">if</span> (m &gt;= <span class="number">2</span> &amp;&amp; m &lt;= <span class="number">5000</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">p = i;</span><br><span class="line">q = m - i;</span><br><span class="line"><span class="keyword">if</span> (sushu(p) &amp;&amp; sushu(q))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d = %d + %d&quot;</span>, m, p, q);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2挑选数字字符"><a href="#4-2挑选数字字符" class="headerlink" title="4-2挑选数字字符"></a>4-2挑选数字字符</h2><p>输入一个字符串，每个字符串由字母和数字组成，将数字选出，求和。</p><h3 id="输入格式-16"><a href="#输入格式-16" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入一个有数字和字母组成的字符串，不含空格</p><h3 id="输出格式-15"><a href="#输出格式-15" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>将数字字符选出，转换成整数求和</p><h3 id="输入样例-14"><a href="#输入样例-14" class="headerlink" title="输入样例:"></a>输入样例:</h3><p>在这里给出一组输入。例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a1b2c3d4e5f</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-14"><a href="#输出样例-14" class="headerlink" title="输出样例:"></a>输出样例:</h3><p>在这里给出相应的输出。例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">15</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-60"><a href="#代码：-60" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> ch[<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)</span><br><span class="line"><span class="keyword">if</span>(ch[i]&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch[i]&lt;=<span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">sum+=ch[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-3单词排序（快速排序）"><a href="#4-3单词排序（快速排序）" class="headerlink" title="4-3单词排序（快速排序）"></a>4-3单词排序（快速排序）</h2><p>请编写程序，输入一系列单词，然后按字典顺序排序，最后输出结果。</p><h3 id="输入格式：-30"><a href="#输入格式：-30" class="headerlink" title="输入格式："></a>输入格式：</h3><blockquote><p>第一行为单词的数量 <em>n</em> (0&lt;<em>n</em>&lt;10000)，后面有 <em>n</em> 行，每行一个英文单词(均由小写字母组成，且长度均不超过15个英文字母)</p></blockquote><h3 id="输出格式：-31"><a href="#输出格式：-31" class="headerlink" title="输出格式："></a>输出格式：</h3><blockquote><p>共 <em>n</em> 行，每行一个英文单词(按字典顺序排列)</p></blockquote><h3 id="输入样例：-29"><a href="#输入样例：-29" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">stick</span><br><span class="line">stock</span><br><span class="line">stack</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-30"><a href="#输出样例：-30" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stack</span><br><span class="line">stick</span><br><span class="line">stock</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-61"><a href="#代码：-61" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10000</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Quicksorct</span><span class="params">(<span class="type">char</span> arry[][<span class="number">16</span>], <span class="type">int</span> L, <span class="type">int</span> R)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> left = L, right = R;      <span class="comment">//left是左边的数组下标    right是右边的数组下标</span></span><br><span class="line"><span class="type">char</span> pivot[<span class="number">16</span>]=<span class="string">&quot;&quot;</span>;            <span class="comment">//pivot是快速排序的基准数</span></span><br><span class="line"><span class="keyword">if</span> (L &gt;= R)                   <span class="comment">//递归出口</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="built_in">strcpy</span>(pivot, arry[left]);    <span class="comment">//将左边的数组元素作为排序的基准数</span></span><br><span class="line"><span class="keyword">while</span> (left &lt; right)          </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (left &lt; right &amp;&amp; <span class="built_in">strcmp</span>(arry[right], pivot) &gt;= <span class="number">0</span>)      <span class="comment">//数组从右向左递进寻找小于等于基准数pivot的字符串</span></span><br><span class="line">right--;              <span class="comment">//若没找到小于等于基准数pivot的字符串 那么数组下标减1</span></span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> (left &lt; right)</span><br><span class="line"><span class="built_in">strcpy</span>(arry[left], arry[right]);          <span class="comment">//将找到的数组赋值给arr[left]</span></span><br><span class="line">        </span><br><span class="line"><span class="keyword">while</span> (left &lt; right &amp;&amp; <span class="built_in">strcmp</span>(arry[left], pivot) &lt;= <span class="number">0</span>)       <span class="comment">//数组从左向右递进寻找大于等于基准数pivot的字符串</span></span><br><span class="line">left++;              <span class="comment">//若没找到大于等于基准数pivot的字符串 那么数组下标加1</span></span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> (left &lt; right)</span><br><span class="line"><span class="built_in">strcpy</span>(arry[right], arry[left]);          <span class="comment">//将找到的数组赋值给arr[right]</span></span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> (left &gt;= right)</span><br><span class="line"><span class="built_in">strcpy</span>(arry[left], pivot);                <span class="comment">//如果left和right相等则把pivot的值赋值给arry[left]</span></span><br><span class="line">&#125;</span><br><span class="line">Quicksorct(arry, L, right - <span class="number">1</span>);       <span class="comment">//pivot左边排序（小于pivot的）</span></span><br><span class="line">Quicksorct(arry, right + <span class="number">1</span>, R);       <span class="comment">//pivot右边排序（大于pivot的）</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="type">char</span> ch[N][<span class="number">16</span>];</span><br><span class="line">    </span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);           <span class="comment">//n个字符串</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, ch[i]);    <span class="comment">//对字符串进行赋值</span></span><br><span class="line">    </span><br><span class="line">Quicksorct(ch, <span class="number">0</span>, n - <span class="number">1</span>);  <span class="comment">//快速排序函数</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,ch[i]);  <span class="comment">//遍历输出字符串数组</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,ch[i]);</span><br><span class="line">    </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-4最矮的巨人"><a href="#4-4最矮的巨人" class="headerlink" title="4-4最矮的巨人"></a>4-4最矮的巨人</h2><p>操场上有N x N个“巨人”按N行N列的矩阵形式列队，请编程找出该方阵中所有“最矮的巨人”。 所谓“最矮的巨人”是指，该巨人在其所在行中，身高最高（没人比其更高）；且在其所在列中，身高最矮（没人比其更矮）。</p><h3 id="输入格式-17"><a href="#输入格式-17" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入的第1行给出一个正整数n ( 1 ≤ n ≤ 6 )，表示方阵的行列数。随后n行，每行给出n个整数，代表巨人的身高，其间以空格作分隔。</p><h3 id="输出格式-16"><a href="#输出格式-16" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>如果找到至少一个“最矮巨人”，输出如下：<br>(第1个最矮巨人所在行下标，第1个最矮巨人所在列下标)<br>(第2个最矮巨人所在行下标，第2个最矮巨人所在列下标)<br>…<br>(第n个最矮巨人所在行下标，第n个最矮巨人所在列下标)</p><p>如果没有找到“最矮巨人”，输出如下： NONE</p><p>注意：即便输出结果只有一行，也要输出换行符。行列下标均从0开始计数。</p><h3 id="输入样例-15"><a href="#输入样例-15" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 7 4 6</span><br><span class="line">4 6 3 6</span><br><span class="line">1 6 1 6</span><br><span class="line">0 7 8 7</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-15"><a href="#输出样例-15" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(1,1)</span><br><span class="line">(1,3)</span><br><span class="line">(2,1)</span><br><span class="line">(2,3)</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-62"><a href="#代码：-62" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 6</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> i, j, k;</span><br><span class="line"><span class="type">int</span> a[N][N];</span><br><span class="line"><span class="type">int</span> flag1;</span><br><span class="line"><span class="type">int</span> flag2;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">if</span> (n &gt;= <span class="number">1</span> &amp;&amp; n &lt;= <span class="number">6</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class="line">flag1 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line">flag2 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; n; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i][j]&lt;a[i][k] || a[i][j]&gt;a[k][j])</span><br><span class="line">flag2 = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag2 == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;(%d,%d)\n&quot;</span>, i, j);</span><br><span class="line">flag1 = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag1 == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NONE\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-5汉诺塔问题"><a href="#4-5汉诺塔问题" class="headerlink" title="4-5汉诺塔问题"></a>4-5汉诺塔问题</h2><p>在印度，有这么一个古老的传说：在世界中心贝拿勒斯（在印度北部）的圣庙里，一块黄铜板上插着三根宝石针。印度教的主神梵天在创造世界的时候，在其中一根针上从下到上地穿好了由大到小的64片金片，这就是所谓的汉诺塔(Tower of Hanoi)。不论白天黑夜，总有一个僧侣在按照下面的法则移动这些金片到另一根针上。法则是一次只移动一片，而且小片必在大片上面。当所有的金片都从梵天穿好的那根针上移到第三根针上时，世界就将在一声霹雳中消灭，梵塔、庙宇和众生都将同归于尽。</p><p><img src="https://images.ptausercontent.com/51a6d87e-0254-441a-aea0-6bb8f552d233.png" alt="55555555555.png"></p><p>利用数学方法可以计算得出，若传说属实，僧侣们需要264−1步才能完成这个任务。若他们每秒可完成一次盘子的移动，就需要5849亿年才能完成。整个宇宙现在也不过137亿年。</p><p>这就是关于汉诺塔传说，由此衍生出汉诺塔问题，这个问题看起来好像有点复杂，实际上可以用递归的思想来分析：</p><p>将n个盘子从A柱移到C柱可以分解为下面三个步骤：</p><p>（1）将A柱上的n-1个盘子借助于C柱移到B柱上；</p><p>（2）将A柱上的最后一个盘子移到C柱上；</p><p>（3）再将B柱上的n-1盘子借助于A柱移到C柱上。</p><p>其中，第一步又可以分解为以下三步：</p><p>（1）将A柱上的n-2个盘子借助于B柱移到C柱上；</p><p>（2）将A柱上的第n-1个盘子移到B柱上；</p><p>（3）再将C柱上的n-2个盘子借助于A柱移到B柱上。</p><p>这种分解可以一直递归地进行下去，直到变成移动一个盘子，递归结束。事实上，以上三个步骤包含两种操作：</p><p>（1）将多个盘子从一根柱子移到另一根柱子上，这是一个递归的过程；</p><p>（2）将一个盘子从一根柱子移到另一根柱子。</p><p>分别编写两个函数来实现以上两个操作。</p><p>函数hanoi（int n,char one,char two,char three）实现把”one”柱上的n个盘子借助于”two”柱移到”three”柱上；</p><p>函数move(char x,char y)表示将1个盘子从x柱移到y柱，并输出移动盘子的提示信息。</p><p>编程输入金盘的数量n，输出将n个金盘从A柱(借助B柱)移动到C柱的过程。</p><h3 id="输入样例-16"><a href="#输入样例-16" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-31"><a href="#输出样例：-31" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">A--&gt;C</span><br><span class="line">A--&gt;B</span><br><span class="line">C--&gt;B</span><br><span class="line">A--&gt;C</span><br><span class="line">B--&gt;A</span><br><span class="line">B--&gt;C</span><br><span class="line">A--&gt;C</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-63"><a href="#代码：-63" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">hanoi</span><span class="params">(<span class="type">int</span> n, <span class="type">char</span> A, <span class="type">char</span> B, <span class="type">char</span> C)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c--&gt;%c\n&quot;</span>, A, C);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">hanoi(n - <span class="number">1</span>, A, C, B);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c--&gt;%c\n&quot;</span>, A, C);</span><br><span class="line">hanoi(n - <span class="number">1</span>, B, A, C);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">hanoi(n, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-6走楼梯"><a href="#4-6走楼梯" class="headerlink" title="4-6走楼梯"></a>4-6走楼梯</h2><p>众所周知，<em>Ke<strong>v</strong>e**n</em> 特别喜欢走楼梯，并且由于某些原因，<em>Ke<strong>v</strong>e**n</em> 每次只能走一层楼梯或者两层楼梯，现在 <em>Ke<strong>v</strong>e**n</em> 还有 <em>n</em> 层楼梯要走，<em>Ke<strong>v</strong>e**n</em> 现在想知道他有多少种不同的方法可以走到第 <em>n</em> 层楼梯，由于 <em>Ke<strong>v</strong>e**n</em> 还要爬楼梯，所以这个问题交给了你。</p><h3 id="输入格式-18"><a href="#输入格式-18" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>第一行一个整数 <em>n</em>，意义如上</p><p>(1&lt;&#x3D;<em>n</em>&lt;&#x3D;40)</p><h3 id="输出格式-17"><a href="#输出格式-17" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中输出一个整数，表示 <em>Ke<strong>v</strong>e**n</em> 有多少种不同的方法可以走到第 <em>n</em> 层楼梯</p><h3 id="输入样例-17"><a href="#输入样例-17" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-16"><a href="#输出样例-16" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-64"><a href="#代码：-64" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">s = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">2</span>)</span><br><span class="line">s = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">s = f(n - <span class="number">1</span>) + f(n - <span class="number">2</span>);</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,f(n));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-7汉诺塔数列-递归版"><a href="#4-7汉诺塔数列-递归版" class="headerlink" title="4-7汉诺塔数列(递归版)"></a>4-7汉诺塔数列(递归版)</h2><p>汉诺塔是一个源于印度古老传说的益智玩具。据说大梵天创造世界的时候做了三根金刚石柱子，在一根柱子上从下往上按照大小顺序摞着64片黄金圆盘，大梵天命令僧侣把圆盘移到另一根柱子上，并且规定：在小圆盘上不能放大圆盘，每次只能移动一个圆盘。当所有圆盘都移到另一根柱子上时，世界就会毁灭。</p><p>1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, …</p><p>第 1 项为 1，表明移动 1 片圆盘的汉诺塔需 1 步；第 2 项为 3，表明移动 2 片圆盘的汉诺塔需 3 步；……，以此类推。请编写递归函数，求汉诺塔数列中任一项的值。</p><h3 id="函数接口定义：-5"><a href="#函数接口定义：-5" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">NumHanoi</span><span class="params">(<span class="type">int</span> index)</span>;</span><br></pre></td></tr></table></figure><p>说明：参数 index 为索引号(正整数)，函数值为汉诺塔数列第 index 项的值。</p><p>要求：不要使用循环语句。不要调用 pow、exp 等数学函数。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">NumHanoi</span><span class="params">(<span class="type">int</span> index)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.15g\n&quot;</span>, NumHanoi(n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你提交的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例1-3"><a href="#输入样例1-3" class="headerlink" title="输入样例1"></a>输入样例1</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="输出样例1-3"><a href="#输出样例1-3" class="headerlink" title="输出样例1"></a>输出样例1</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><h3 id="输入样例2-3"><a href="#输入样例2-3" class="headerlink" title="输入样例2"></a>输入样例2</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">45</span><br></pre></td></tr></table></figure><h3 id="输出样例2：-7"><a href="#输出样例2：-7" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">35184372088831</span><br></pre></td></tr></table></figure><h3 id="代码：-65"><a href="#代码：-65" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> <span class="title function_">NumHanoi</span><span class="params">(<span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (index == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        num = <span class="number">1</span>;</span><br><span class="line">        a = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    NumHanoi(index - <span class="number">1</span>);</span><br><span class="line">    a *= <span class="number">2</span>;</span><br><span class="line">    num += a;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-8统计平均分，最高分及得最高分人数"><a href="#4-8统计平均分，最高分及得最高分人数" class="headerlink" title="4-8统计平均分，最高分及得最高分人数"></a>4-8统计平均分，最高分及得最高分人数</h2><p>请编写一个函数fun，函数的功能是：统计出若干个学生的平均成绩，最高分以及得最高分的人数。</p><h3 id="函数接口定义：-6"><a href="#函数接口定义：-6" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">float</span> <span class="title">fun</span><span class="params">(<span class="type">float</span> array[],<span class="type">int</span> n)</span></span>;</span><br></pre></td></tr></table></figure><p>其中 <code>array</code> 和 <code>n</code> 都是用户传入的参数。函数须统计 <code>array</code>数组中学生的平均成绩，最高分以及得最高分的人数，函数返回平均成绩，最高分以及得最高分的人数存放在全局变量 <code>Max</code> 和 <code>J</code>中 。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">float</span> Max=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> J=<span class="number">0</span>;</span><br><span class="line"><span class="type">float</span> <span class="title function_">fun</span><span class="params">(<span class="type">float</span> <span class="built_in">array</span>[],<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span>  a[<span class="number">10</span>],ave;</span><br><span class="line"><span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;a[i]);</span><br><span class="line">ave=fun(a,<span class="number">10</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ave=%.2f\n&quot;</span>,ave);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;max=%.02f\n&quot;</span>,Max);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Total:%d\n&quot;</span>,J);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 请在这里填写答案 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-30"><a href="#输入样例：-30" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">84 75 86 59 25 94 76 84 15 65</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-32"><a href="#输出样例：-32" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ave=66.30</span><br><span class="line">max=94.00</span><br><span class="line">Total:1</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-66"><a href="#代码：-66" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> <span class="title function_">fun</span><span class="params">(<span class="type">float</span> <span class="built_in">array</span>[],<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="type">float</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Max&lt;<span class="built_in">array</span>[i])</span><br><span class="line">Max=<span class="built_in">array</span>[i];</span><br><span class="line">sum+=<span class="built_in">array</span>[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">array</span>[i]==Max)</span><br><span class="line">J++;</span><br><span class="line"><span class="keyword">return</span> sum/n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-9数组去最值"><a href="#4-9数组去最值" class="headerlink" title="4-9数组去最值"></a>4-9数组去最值</h2><p>比赛成绩中“去掉一个最高分，去掉一个最低分”常有。编写函数，对传入的指定长度的指定数组进行去最值处理（去掉一个最大和一个最小值，其它元素保持相对不变），删除最值时需要移动元素（后边的元素要前移）,要求采用高效算法：移动元素尽量少的元素，因为最大最小值是两个，故原来的数组长度自然是减少了两个，主调函数自知，你不用返回删除后的长度，但是，要求删除函数返回总的移动次数（以测试你是不是以最少的移动完成）。</p><h3 id="函数接口定义：-7"><a href="#函数接口定义：-7" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">delMaxMin</span><span class="params">(<span class="type">int</span> A[],<span class="type">int</span> n)</span>;</span><br></pre></td></tr></table></figure><p>删除最值后的值仍存储于原数组。 <code>n</code>是数组的实际长度，程序保证n&gt;2。函数返回删除最大与最小值时移动的元素个数。</p><h3 id="输入样例：-31"><a href="#输入样例：-31" class="headerlink" title="输入样例："></a>输入样例：</h3><p>第一行是数组的长度，第二行是空格分隔的数组元素。如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">9 3 8 3 3 9 8 5 8 8</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-33"><a href="#输出样例：-33" class="headerlink" title="输出样例："></a>输出样例：</h3><p>你只需要完成删除最值的函数（返回移动元素个数），输出由测试程序完成：第一行去最值后的数组，第二行，移动的元素个数。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;9,3,8,3,8,5,8,8&#125;</span><br><span class="line">4</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><p>&#x2F;* 请在这里填写答案 *&#x2F;</p><h3 id="代码：-67"><a href="#代码：-67" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">delMaxMin</span><span class="params">(<span class="type">int</span> A[],<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> max=A[n<span class="number">-1</span>],min=A[n<span class="number">-1</span>];</span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line">    <span class="type">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> temp=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> x=n<span class="number">-1</span>,y=n<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=n<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(max&lt;A[i])</span><br><span class="line">&#123;</span><br><span class="line">max=A[i];</span><br><span class="line">x=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(min&gt;A[i])</span><br><span class="line">&#123;</span><br><span class="line">min=A[i];</span><br><span class="line">y=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;y)</span><br><span class="line">&#123;</span><br><span class="line">temp=x;</span><br><span class="line">x=y;</span><br><span class="line">y=temp;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">for</span>(i=y+<span class="number">1</span>;i&lt;x;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        num++;</span><br><span class="line">        A[i<span class="number">-1</span>]=A[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(j=x+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        num++;</span><br><span class="line">        A[j<span class="number">-2</span>]=A[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-10数组循环右移"><a href="#4-10数组循环右移" class="headerlink" title="4-10数组循环右移"></a>4-10数组循环右移</h2><p>本题要求实现一个对数组进行循环右移的简单函数：一个数组<em>a</em>中存有<em>n</em>（&gt;0）个整数，将每个整数循环向右移<em>m</em>（≥0）个位置，即将<em>a</em>中的数据由（<em>a</em>0<em>a</em>1⋯<em>a**n</em>−1）变换为（<em>a**n</em>−<em>m</em>⋯<em>a**n</em>−1<em>a</em>0<em>a</em>1⋯<em>a**n</em>−<em>m</em>−1）（最后<em>m</em>个数循环移至最前面的<em>m</em>个位置）。</p><h3 id="函数接口定义：-8"><a href="#函数接口定义：-8" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">ArrayShift</span><span class="params">( <span class="type">int</span> a[], <span class="type">int</span> n, <span class="type">int</span> m )</span>;</span><br></pre></td></tr></table></figure><p>其中<code>a[]</code>是用户传入的数组；<code>n</code>是数组的大小；<code>m</code>是右移的位数。函数<code>ArrayShift</code>须将循环右移后的数组仍然存在<code>a[]</code>中。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 10</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ArrayShift</span><span class="params">( <span class="type">int</span> a[], <span class="type">int</span> n, <span class="type">int</span> m )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[MAXN], n, m;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; n; i++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line">    ArrayShift(a, n, m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; n; i++ ) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-32"><a href="#输入样例：-32" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">6 2</span><br><span class="line">1 2 3 4 5 6</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-34"><a href="#输出样例：-34" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5 6 1 2 3 4</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-68"><a href="#代码：-68" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">ArrayShift</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> n, <span class="type">int</span> m)</span></span><br><span class="line">&#123;</span><br><span class="line">    m = m % n;</span><br><span class="line">    <span class="type">int</span> b[m], i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[i] = a[n - m + i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = n - m - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        a[i + m] = a[i];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        a[i] = b[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-11输入单词并排序输出"><a href="#4-11输入单词并排序输出" class="headerlink" title="4-11输入单词并排序输出"></a>4-11输入单词并排序输出</h2><p>本题要求通过input()函数实现输入若干个单词（每单词的长度不超过20，单词的最大数目不超过10）。输入过程中遇到单词<em>END</em> 则提前结束输入（<em>END</em>不作为后面排序的单词），或单词数目达到10个也结束。然后调用函数paixu（），对这若干个单词按字典顺序进行排序，最后调用函数printArr（）输出排序后的单词，输出的单词之间以空格进行分隔，最后一个单词后面没有空格。</p><h3 id="函数接口定义：-9"><a href="#函数接口定义：-9" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">input</span><span class="params">(<span class="type">char</span> ar2[][<span class="number">21</span>])</span>;</span><br><span class="line">其中函数的返回值等于输入的有效单词的数目。</span><br><span class="line"><span class="type">void</span> <span class="title function_">paixu</span><span class="params">(<span class="type">char</span> ar2[][<span class="number">21</span>], <span class="type">int</span> n)</span>;</span><br><span class="line">其中函数完成对ar2数组中的n个字符串进行排序。</span><br><span class="line"><span class="type">void</span> <span class="title function_">printArr</span><span class="params">(<span class="type">char</span> ar2[][<span class="number">21</span>], <span class="type">int</span> n)</span>;</span><br><span class="line">其中函数完成对ar2数组中的n个字符串进行输出。</span><br></pre></td></tr></table></figure><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">input</span><span class="params">(<span class="type">char</span> ar2[][<span class="number">21</span>])</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">paixu</span><span class="params">(<span class="type">char</span> ar2[][<span class="number">21</span>], <span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">printArr</span><span class="params">(<span class="type">char</span> ar2[][<span class="number">21</span>], <span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> arr[<span class="number">10</span>][<span class="number">21</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    n=input(arr);    </span><br><span class="line">    paixu(arr,n);</span><br><span class="line">    printArr(arr,n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 请在这里填写答案 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-33"><a href="#输入样例：-33" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">China Britain America Japan Egypt *END*</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-35"><a href="#输出样例：-35" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">After sorted:</span><br><span class="line">America Britain China Egypt Japan</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例：-34"><a href="#输入样例：-34" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  *END*</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-36"><a href="#输出样例：-36" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NO WORD</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例：-35"><a href="#输入样例：-35" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a1 b2 c3 d4 e5 a6 b7 c8 d9 e10 a11 b12 c13</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-37"><a href="#输出样例：-37" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">After sorted:</span><br><span class="line">a1 a6 b2 b7 c3 c8 d4 d9 e10 e5</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-69"><a href="#代码：-69" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">input</span><span class="params">(<span class="type">char</span> ar2[][<span class="number">21</span>])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;ar2[i]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(ar2[i], <span class="string">&quot;*END*&quot;</span>) == <span class="number">0</span> || num == <span class="number">10</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        i++;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">paixu</span><span class="params">(<span class="type">char</span> ar2[][<span class="number">21</span>], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="type">char</span> temp[<span class="number">21</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(ar2[j], ar2[j + <span class="number">1</span>]) &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">strcpy</span>(temp, ar2[j]);</span><br><span class="line">                <span class="built_in">strcpy</span>(ar2[j], ar2[j + <span class="number">1</span>]);</span><br><span class="line">                <span class="built_in">strcpy</span>(ar2[j + <span class="number">1</span>], temp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">printArr</span><span class="params">(<span class="type">char</span> ar2[][<span class="number">21</span>], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NO WORD&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;After sorted:\n&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, ar2[i]);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot; %s&quot;</span>,ar2[i]);</span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-12-谷歌的招聘"><a href="#4-12-谷歌的招聘" class="headerlink" title="4-12 谷歌的招聘"></a>4-12 谷歌的招聘</h2><p>2004 年 7 月，谷歌在硅谷的 101 号公路边竖立了一块巨大的广告牌（如下图）用于招聘。内容超级简单，就是一个以 .com 结尾的网址，而前面的网址是一个 10 位素数，这个素数是自然常数 e 中最早出现的 10 位连续数字。能找出这个素数的人，就可以通过访问谷歌的这个网站进入招聘流程的下一步。</p><p><img src="https://images.ptausercontent.com/57148679-d574-4f49-b048-775c6c07791c.jpg" alt="prime.jpg"></p><p>自然常数 e 是一个著名的超越数，前面若干位写出来是这样的：e &#x3D; 2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642<strong>7427466391</strong>932003059921… 其中粗体标出的 10 位数就是答案。</p><p>本题要求你编程解决一个更通用的问题：从任一给定的长度为 L 的数字中，找出最早出现的 K 位连续数字所组成的素数。</p><h3 id="输入格式：-31"><a href="#输入格式：-31" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行给出 2 个正整数，分别是 L（不超过 1000 的正整数，为数字长度）和 K（小于 10 的正整数）。接下来一行给出一个长度为 L 的正整数 N。</p><h3 id="输出格式：-32"><a href="#输出格式：-32" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出 N 中最早出现的 K 位连续数字所组成的素数。如果这样的素数不存在，则输出 <code>404</code>。注意，原始数字中的前导零也计算在位数之内。例如在 200236 中找 4 位素数，0023 算是解；但第一位 2 不能被当成 0002 输出，因为在原始数字中不存在这个 2 的前导零。</p><h3 id="输入样例-1：-1"><a href="#输入样例-1：-1" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">20 5</span><br><span class="line">23654987725541023819</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-1：-1"><a href="#输出样例-1：-1" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">49877</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例-2：-1"><a href="#输入样例-2：-1" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10 3</span><br><span class="line">2468001680</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-2：-1"><a href="#输出样例-2：-1" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">404</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-70"><a href="#代码：-70" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">sam</span><span class="params">(<span class="type">int</span> m)</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">if</span> (m &lt; <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i * i &lt;= m; i++) </span><br><span class="line"><span class="keyword">if</span> (m % i == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> L, k, i;</span><br><span class="line"><span class="type">char</span> n[<span class="number">1000</span>], arr[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %s&quot;</span>, &amp;L, &amp;k, n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= L - k; i++) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">strncpy</span>(arr, n + i, k);</span><br><span class="line"><span class="keyword">if</span> (sam(atoi(arr))) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, arr);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;404&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-13把两个数按由大到小的顺序输出"><a href="#4-13把两个数按由大到小的顺序输出" class="headerlink" title="4-13把两个数按由大到小的顺序输出"></a>4-13把两个数按由大到小的顺序输出</h2><p>把两个数按由大到小的顺序输出来。</p><h3 id="函数接口定义：-10"><a href="#函数接口定义：-10" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">( <span class="type">int</span> *p1,<span class="type">int</span> *p2)</span>;</span><br></pre></td></tr></table></figure><p>其中形参 <code>p1</code> 和 <code>p2</code>都是用户传入的参数。函数fun的功能是实现交换主函数中a和b的值。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">( <span class="type">int</span> *p1,<span class="type">int</span> *p2)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">( )</span></span><br><span class="line">&#123;<span class="type">int</span> a,b, *p1,*p2;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;a=%d,b=%d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">p1=&amp;a;p2=&amp;b;</span><br><span class="line"><span class="keyword">if</span>(a&lt;b) swap(p1,p2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d\n&quot;</span>,a,b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;max=%d,min=%d\n&quot;</span>,*p1,*p2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 请在这里填写答案 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-36"><a href="#输入样例：-36" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=3,b=5</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-38"><a href="#输出样例：-38" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=5,b=3</span><br><span class="line">max=5,min=3</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-71"><a href="#代码：-71" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">( <span class="type">int</span> *p1,<span class="type">int</span> *p2)</span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    t=*p1;</span><br><span class="line">    *p1=*p2;</span><br><span class="line">    *p2=t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-14计算两数的和与差"><a href="#4-14计算两数的和与差" class="headerlink" title="4-14计算两数的和与差"></a>4-14计算两数的和与差</h2><p>本题要求实现一个计算输入的两数的和与差的简单函数。</p><h3 id="函数接口定义：-11"><a href="#函数接口定义：-11" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">sum_diff</span><span class="params">( <span class="type">float</span> op1, <span class="type">float</span> op2, <span class="type">float</span> *psum, <span class="type">float</span> *pdiff )</span>;</span><br></pre></td></tr></table></figure><p>其中<code>op1</code>和<code>op2</code>是输入的两个实数，<code>*psum</code>和<code>*pdiff</code>是计算得出的和与差。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sum_diff</span><span class="params">( <span class="type">float</span> op1, <span class="type">float</span> op2, <span class="type">float</span> *psum, <span class="type">float</span> *pdiff )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> a, b, sum, diff;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f %f&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    sum_diff(a, b, &amp;sum, &amp;diff);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The sum is %.2f\nThe diff is %.2f\n&quot;</span>, sum, diff);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-37"><a href="#输入样例：-37" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 6</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-39"><a href="#输出样例：-39" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The sum is 10.00</span><br><span class="line">The diff is -2.00</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-72"><a href="#代码：-72" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">sum_diff</span><span class="params">( <span class="type">float</span> op1, <span class="type">float</span> op2, <span class="type">float</span> *psum, <span class="type">float</span> *pdiff )</span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">    a=op1+op2;</span><br><span class="line">    b=op1-op2;</span><br><span class="line">    *psum=a;</span><br><span class="line">    *pdiff=b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-15用指针将数组中的元素逆序存放"><a href="#4-15用指针将数组中的元素逆序存放" class="headerlink" title="4-15用指针将数组中的元素逆序存放"></a>4-15用指针将数组中的元素逆序存放</h2><p>用指针将数组中的元素逆序存放。</p><h3 id="函数接口定义：-12"><a href="#函数接口定义：-12" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">inv</span><span class="params">(<span class="type">int</span> *x,<span class="type">int</span> n)</span>;</span><br></pre></td></tr></table></figure><p>其中 <code>x </code>和 <code>n </code>是用户传入的参数。函数将指针 <code>x</code> 所指数组中的<code>n</code>个元素逆序存放。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">inv</span><span class="params">(<span class="type">int</span> *x,<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">( )</span></span><br><span class="line">&#123;<span class="type">int</span> i ,a[<span class="number">10</span>]=&#123;<span class="number">3</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">2</span>&#125;;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;The original array:\n&quot;</span>);</span><br><span class="line"> <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)  <span class="built_in">printf</span>(<span class="string">&quot;%3d&quot;</span>,a[i]);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"> inv(a,<span class="number">10</span>);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;The array has been inverted:\n&quot;</span>);</span><br><span class="line"> <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)  <span class="built_in">printf</span>(<span class="string">&quot;%3d&quot;</span>,a[i]);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 请在这里填写答案 */</span></span><br></pre></td></tr></table></figure><h3 id="输出样例：-40"><a href="#输出样例：-40" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">The original array:</span><br><span class="line">  3  7  9 11  0  6  7  5  4  2</span><br><span class="line">The array has been inverted:</span><br><span class="line">  2  4  5  7  6  0 11  9  7  3</span><br></pre></td></tr></table></figure><h3 id="代码：-73"><a href="#代码：-73" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">inv</span><span class="params">(<span class="type">int</span> *x,<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="type">int</span> *L=x,*R=x+n<span class="number">-1</span>;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=(n<span class="number">-1</span>)/<span class="number">2</span>;i++,L++,R--)&#123;</span><br><span class="line">        t=*L;</span><br><span class="line">        *L=*R;</span><br><span class="line">        *R=t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-16字符串的连接"><a href="#4-16字符串的连接" class="headerlink" title="4-16字符串的连接"></a>4-16字符串的连接</h2><p>本题要求实现一个函数，将两个字符串连接起来。</p><h3 id="函数接口定义：-13"><a href="#函数接口定义：-13" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> *<span class="title function_">str_cat</span><span class="params">( <span class="type">char</span> *s, <span class="type">char</span> *t )</span>;</span><br></pre></td></tr></table></figure><p>函数<code>str_cat</code>应将字符串<code>t</code>复制到字符串<code>s</code>的末端，并且返回字符串<code>s</code>的首地址。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXS 10</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> *<span class="title function_">str_cat</span><span class="params">( <span class="type">char</span> *s, <span class="type">char</span> *t )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *p;</span><br><span class="line">    <span class="type">char</span> str1[MAXS+MAXS] = &#123;<span class="string">&#x27;\0&#x27;</span>&#125;, str2[MAXS] = &#123;<span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s%s&quot;</span>, str1, str2);</span><br><span class="line">    p = str_cat(str1, str2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n%s\n&quot;</span>, p, str1);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-38"><a href="#输入样例：-38" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">abc</span><br><span class="line">def</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-41"><a href="#输出样例：-41" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">abcdef</span><br><span class="line">abcdef</span><br></pre></td></tr></table></figure><h3 id="代码：-74"><a href="#代码：-74" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> *<span class="title function_">str_cat</span><span class="params">( <span class="type">char</span> *s, <span class="type">char</span> *t )</span>&#123;</span><br><span class="line">    <span class="type">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> *a=s;</span><br><span class="line">    <span class="keyword">while</span>(*s!=<span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line">        num++;</span><br><span class="line">        s++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=num;i++,s++,t++)</span><br><span class="line">        *s=*t;</span><br><span class="line">    s=a;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-17使用函数实现字符串部分复制"><a href="#4-17使用函数实现字符串部分复制" class="headerlink" title="4-17使用函数实现字符串部分复制"></a>4-17使用函数实现字符串部分复制</h2><p>本题要求编写函数，将输入字符串<em>t</em>中从第<em>m</em>个字符开始的全部字符复制到字符串<em>s</em>中。</p><h3 id="函数接口定义：-14"><a href="#函数接口定义：-14" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">strmcpy</span><span class="params">( <span class="type">char</span> *t, <span class="type">int</span> m, <span class="type">char</span> *s )</span>;</span><br></pre></td></tr></table></figure><p>函数<code>strmcpy</code>将输入字符串<code>char *t</code>中从第<code>m</code>个字符开始的全部字符复制到字符串<code>char *s</code>中。若<code>m</code>超过输入字符串的长度，则结果字符串应为空串。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 20</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">strmcpy</span><span class="params">( <span class="type">char</span> *t, <span class="type">int</span> m, <span class="type">char</span> *s )</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">ReadString</span><span class="params">( <span class="type">char</span> s[] )</span>; <span class="comment">/* 由裁判实现，略去不表 */</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> t[MAXN], s[MAXN];</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d\n&quot;</span>, &amp;m);</span><br><span class="line">    ReadString(t);</span><br><span class="line">    strmcpy( t, m, s );</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-39"><a href="#输入样例：-39" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">happy new year</span><br></pre></td></tr></table></figure><h3 id="输出样例：-42"><a href="#输出样例：-42" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new year</span><br></pre></td></tr></table></figure><h3 id="代码：-75"><a href="#代码：-75" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">strmcpy</span><span class="params">( <span class="type">char</span> *t, <span class="type">int</span> m, <span class="type">char</span> *s )</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line">i = m - <span class="number">1</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ( t[i] != <span class="string">&#x27;\0&#x27;</span> )</span><br><span class="line">s[j++] = t[i++];</span><br><span class="line">s[j] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-18电码加密"><a href="#4-18电码加密" class="headerlink" title="4-18电码加密"></a>4-18电码加密</h2><p>为了防止信息被别人轻易窃取，需要把电码明文通过加密方式变换成为密文。要求编写并调用函数encrypt ()，按要求修改字符串内容。变换规则如下：小写字母z变换成为a，其他字母变换成为该字母ASCII码顺序后一位的字母，比如o变换成为p。</p><h3 id="函数接口定义：-15"><a href="#函数接口定义：-15" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">encrypt</span> <span class="params">( <span class="type">char</span> *s)</span>;</span><br></pre></td></tr></table></figure><p>其中 s为字符串首地址。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> MAXLINE 80</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">encrypt</span> <span class="params">( <span class="type">char</span> *s)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">char</span> line [MAXLINE];</span><br><span class="line"></span><br><span class="line">   gets(line);</span><br><span class="line">   encrypt (line);</span><br><span class="line">   <span class="built_in">printf</span> (<span class="string">&quot;%s\n&quot;</span>, line);</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 请在这里填写答案 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-40"><a href="#输入样例：-40" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adfz</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-43"><a href="#输出样例：-43" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bega</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-76"><a href="#代码：-76" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">encrypt</span> <span class="params">( <span class="type">char</span> *s)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>(*s!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        (*s)++;</span><br><span class="line">        <span class="keyword">if</span>(*s&gt;<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">            *s-=<span class="number">26</span>;</span><br><span class="line">        s++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-19判断回文"><a href="#4-19判断回文" class="headerlink" title="4-19判断回文"></a>4-19判断回文</h2><p>如果一串字符从左至右读和从右至左读相同，那么这串字符就是回文（Palindrome）。例如，ABCBA是回文，而ABCD则不是。本题要求编写一个判断字符串是否为回文的函数，并且通过函数参数获取字符串的中间字符（如果中间是两个字符，则获取靠左的那一个，例如字符串是ABCDEF，则中间字符是C）。题目保证输入的字符串长度在1至2000之间且不含空格、换行等分隔符。</p><h3 id="函数接口定义：-16"><a href="#函数接口定义：-16" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">isPalindrome</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* str, <span class="type">char</span>* pch)</span>;</span><br></pre></td></tr></table></figure><p>其中 <code>str</code> 和 <code>pch</code> 都是用户传入的参数。 <code>str</code> 是字符串的首地址； <code>pch</code> 是传入的要存放字符串中间字符的变量的地址。如果字符串是回文，函数须返1，否则返回0。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 测试程序仅为示例，实际的测试程序可能不同 */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXLENGTH 100</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isPalindrome</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* str, <span class="type">char</span>* pch)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">char</span> str[MAXLENGTH],mid;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br><span class="line">    <span class="keyword">if</span>(isPalindrome(str, &amp;mid))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;是回文！中间字符是%c\n&quot;</span>,mid);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;不是回文！中间字符是%c\n&quot;</span>,mid);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你编写的函数代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-41"><a href="#输入样例：-41" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ABCDACBC</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-44"><a href="#输出样例：-44" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">不是回文！中间字符是D</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-77"><a href="#代码：-77" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">isPalindrome</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* str, <span class="type">char</span>* pch)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> len=<span class="built_in">strlen</span>(str);</span><br><span class="line">    <span class="type">int</span> i,d=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;(len<span class="number">-1</span>)/<span class="number">2</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(str[len<span class="number">-1</span>-i]==str[i])</span><br><span class="line">        &#123;</span><br><span class="line">            d++; <span class="comment">//记录两边字符相等对数；</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    *pch=str[(len<span class="number">-1</span>)/<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">if</span>(d==(len<span class="number">-1</span>)/<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-20统计子串在母串出现的次数"><a href="#4-20统计子串在母串出现的次数" class="headerlink" title="4-20统计子串在母串出现的次数"></a>4-20统计子串在母串出现的次数</h2><p>编写一个函数，该函数可以统计一个长度为3的字符串在另一个字符串中出现的次数。例如，假定输入的字符串为：asdasasdfgasdaszx67asdmklo，字符串为：asd，则应输出n&#x3D;4。。</p><h3 id="函数接口定义：-17"><a href="#函数接口定义：-17" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">char</span> *str,<span class="type">char</span> *substr)</span>;</span><br></pre></td></tr></table></figure><p>其中<code> str</code> 和 <code>substr </code>是用户传入的参数。函数统计<code>substr</code>指针所指的字符串在<code>str</code>指针所指的字符串中出现的次数，并返回次数。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">char</span> *str,<span class="type">char</span> *substr)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123; <span class="type">char</span> str[<span class="number">81</span>]=<span class="string">&quot;asdasasdfgasdaszx67asdmklo&quot;</span>,substr[<span class="number">4</span>]=<span class="string">&quot;asd&quot;</span>;</span><br><span class="line"> <span class="type">int</span> n;</span><br><span class="line"> n=fun(str,substr);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;n=%d\n&quot;</span>,n);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 请在这里填写答案 */</span></span><br></pre></td></tr></table></figure><h3 id="输出样例：-45"><a href="#输出样例：-45" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=4</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-78"><a href="#代码：-78" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">char</span> * str, <span class="type">char</span> * substr)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(str); i++)</span><br><span class="line">        <span class="keyword">if</span>((str[i] == substr[<span class="number">0</span>]) &amp;&amp; (str[i + <span class="number">1</span>] == substr[<span class="number">1</span>]) &amp;&amp; (str[i + <span class="number">2</span>] == substr[<span class="number">2</span>]))</span><br><span class="line">            ++n;</span><br><span class="line">    <span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-1选队长"><a href="#5-1选队长" class="headerlink" title="5-1选队长"></a>5-1选队长</h2><p>小明最近喜欢玩一款新游戏。在该游戏中，需要组建队伍去完成任务以获取奖励。小明挑出了所有的队员（每个人能力不同），需要一个函数挑出队长（能力最强的队员）。</p><h3 id="函数接口定义：-18"><a href="#函数接口定义：-18" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">showCaptain</span><span class="params">(TeamMember team[], <span class="type">int</span> n)</span>;</span><br></pre></td></tr></table></figure><p>参数说明：team中从下标0开始存放n个TeamMember，n&gt;0。 函数功能：找出队长并输出其各项信息</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NAME_LEN 100</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SEX_LEN 6</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line"><span class="type">int</span> id;<span class="comment">//身份证号码</span></span><br><span class="line">    <span class="type">char</span> lastname[NAME_LEN+<span class="number">1</span>];<span class="comment">//姓</span></span><br><span class="line">    <span class="type">char</span> firstname[NAME_LEN+<span class="number">1</span>];<span class="comment">//名</span></span><br><span class="line">    <span class="type">char</span> sex[SEX_LEN];<span class="comment">//性别</span></span><br><span class="line">    <span class="type">double</span> ability;</span><br><span class="line">&#125; TeamMember;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">showCaptain</span><span class="params">(TeamMember team[], <span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    TeamMember *team;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    team = (TeamMember *)<span class="built_in">malloc</span>(n*<span class="keyword">sizeof</span>(TeamMember));</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %s %s %s %lf&quot;</span>,&amp;team[i].id,team[i].lastname, team[i].firstname, team[i].sex, &amp;team[i]. ability);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    showCaptain(team, n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 您提交的代码将放置在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-42"><a href="#输入样例：-42" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">123456 zhang san male 100</span><br><span class="line">123457 li si female 200.5</span><br><span class="line">123458 wang ming male 159.1</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-46"><a href="#输出样例：-46" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">123457 li si female 200.50</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-79"><a href="#代码：-79" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">showCaptain</span><span class="params">(TeamMember team[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> max=team[<span class="number">0</span>].ability;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">if</span>(team[i].ability&gt;max)</span><br><span class="line">        &#123;</span><br><span class="line">            max=team[i].ability;</span><br><span class="line">            x=i;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %s %s %s %.2lf&quot;</span>,team[x].id,team[x].lastname,team[x].firstname,team[x].sex,team[x].ability);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-2综合成绩"><a href="#5-2综合成绩" class="headerlink" title="5-2综合成绩"></a>5-2综合成绩</h2><p>小明的公司为了招聘新员工设计了一套考试方案。从表达能力、逻辑能力、人文素质、科学素质、计算思维5个方面进行考察。综合成绩 &#x3D; 表达能力<em>0.4+逻辑能力</em>0.5+人文素质<em>0.3+科学素质</em>0.6+计算思维*0.8。要求定义一个计算综合成绩的函数。</p><h3 id="函数接口定义：-19"><a href="#函数接口定义：-19" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">getAverage</span><span class="params">(Applicant *a)</span>;</span><br></pre></td></tr></table></figure><p>a中存放一个应聘者的考试成绩。要求返回综合成绩。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> presentation;</span><br><span class="line">    <span class="type">int</span> logical;</span><br><span class="line">    <span class="type">int</span> humanistic;</span><br><span class="line">    <span class="type">int</span> scientific;</span><br><span class="line">    <span class="type">int</span> computational;</span><br><span class="line">&#125;Applicant;</span><br><span class="line"><span class="type">double</span> <span class="title function_">getAverage</span><span class="params">(Applicant* a)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Applicant a;</span><br><span class="line">    <span class="type">double</span> overall;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d%d&quot;</span>, &amp;a.presentation,&amp;a.logical,&amp;a.humanistic,&amp;a.scientific,&amp;a.computational);</span><br><span class="line">    overall = getAverage(&amp;a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>,overall);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 您提交的代码将放置在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-43"><a href="#输入样例：-43" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">100 100 100 100 100</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-47"><a href="#输出样例：-47" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">260.00</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-80"><a href="#代码：-80" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">getAverage</span><span class="params">(Applicant *a)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> overall;</span><br><span class="line">    overall=a-&gt;presentation*<span class="number">0.4</span>+a-&gt;logical*<span class="number">0.5</span>+a-&gt;humanistic*<span class="number">0.3</span>+a-&gt;scientific*<span class="number">0.6</span>+a-&gt;computational*<span class="number">0.8</span>;</span><br><span class="line">    <span class="keyword">return</span> overall;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-3统计专业人数"><a href="#5-3统计专业人数" class="headerlink" title="5-3统计专业人数"></a>5-3统计专业人数</h2><p>本题要求实现一个函数，统计学生学号链表中专业为计算机的学生人数。链表结点定义如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> code[<span class="number">8</span>];</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这里学生的学号共7位数字，其中第2、3位是专业编号。计算机专业的编号为02。</p><h3 id="函数接口定义：-20"><a href="#函数接口定义：-20" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">countcs</span><span class="params">( <span class="keyword">struct</span> ListNode *head )</span>;</span><br></pre></td></tr></table></figure><p>其中<code>head</code>是用户传入的学生学号链表的头指针；函数<code>countcs</code>统计并返回<code>head</code>链表中专业为计算机的学生人数。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> code[<span class="number">8</span>];</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> ListNode *<span class="title function_">createlist</span><span class="params">()</span>; <span class="comment">/*裁判实现，细节不表*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">countcs</span><span class="params">( <span class="keyword">struct</span> ListNode *head )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>  *<span class="title">head</span>;</span></span><br><span class="line"></span><br><span class="line">    head = createlist();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, countcs(head));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-44"><a href="#输入样例：-44" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1021202</span><br><span class="line">2022310</span><br><span class="line">8102134</span><br><span class="line">1030912</span><br><span class="line">3110203</span><br><span class="line">4021205</span><br><span class="line">#结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-48"><a href="#输出样例：-48" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码;"></a>代码;</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">countcs</span><span class="params">( <span class="keyword">struct</span> ListNode *head )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span>==head)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">NULL</span>!=head-&gt;next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(head-&gt;code[<span class="number">2</span>]==<span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">            num++;</span><br><span class="line">        head=head-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(head-&gt;code[<span class="number">2</span>]==<span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">        num++;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-4找密码"><a href="#5-4找密码" class="headerlink" title="5-4找密码"></a>5-4找密码</h2><p>在一个古堡的大门上有5行字符。其中隐藏着打开大门的密码。密码共有4位数字（0到9）。小明发现了一种找密码的方法：最后一行中的字符在第一行字符中出现的总次数是密码的第一个数字，依此类推。输入数据保证每行得到的数字在0到9之间。 请编写一个函数 decode帮助小明找出密码。</p><h3 id="函数接口定义：-21"><a href="#函数接口定义：-21" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">decode</span><span class="params">(<span class="type">char</span>**s)</span>;</span><br></pre></td></tr></table></figure><p>通过参数s向函数传递5行字符串，函数返回密码值。</p><p><strong>测试程序样例：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 5</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">decode</span><span class="params">(<span class="type">char</span>**s)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> *s[M];</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> key;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;M; i++)&#123;</span><br><span class="line">        s[i] = (<span class="type">char</span> *)<span class="built_in">malloc</span>((N+<span class="number">1</span>)*<span class="keyword">sizeof</span>(<span class="type">char</span>));</span><br><span class="line">        gets(s[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    key = decode(s);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%04d&quot;</span>,key);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;M; i++)&#123;</span><br><span class="line">        <span class="built_in">free</span>(s[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 您提交的代码将放置在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-45"><a href="#输入样例：-45" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1111</span><br><span class="line">222</span><br><span class="line">33</span><br><span class="line">41</span><br><span class="line">2341</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-49"><a href="#输出样例：-49" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4322</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-81"><a href="#代码：-81" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">decode</span><span class="params">(<span class="type">char</span>**s)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> pwd = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="built_in">strlen</span>(s[i]); j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="built_in">strlen</span>(s[<span class="number">4</span>]); k++)</span><br><span class="line">                <span class="keyword">if</span> (s[i][j] == s[<span class="number">4</span>][k]) </span><br><span class="line">                    cnt++;</span><br><span class="line">        pwd = pwd * <span class="number">10</span> + cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pwd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-5计算坐标系中两个点之间的距离"><a href="#5-5计算坐标系中两个点之间的距离" class="headerlink" title="5-5计算坐标系中两个点之间的距离"></a>5-5计算坐标系中两个点之间的距离</h2><p>定义一个结构体类型表示平面上的一个点的坐标(x,y)，并从键盘输入两个点z1,z2的坐标，坐标值为整型数据，输出这两点之间的距离。</p><h3 id="输入格式-19"><a href="#输入格式-19" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>从键盘输入两个点z1和z2的坐标，之间用空格分隔</p><h3 id="输出格式-18"><a href="#输出格式-18" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出数据保留两位小数。</p><h3 id="输入样例-18"><a href="#输入样例-18" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 4 5 6</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-17"><a href="#输出样例-17" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">distance = 2.83</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输入样例-19"><a href="#输入样例-19" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0 0 100 100</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-18"><a href="#输出样例-18" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">distance = 141.42</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-82"><a href="#代码：-82" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> y;</span><br><span class="line">&#125;POINT;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    POINT z1,z2;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>,&amp;z1.x,&amp;z1.y,&amp;z2.x,&amp;z2.y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;distance = %.2lf&quot;</span>,<span class="built_in">sqrt</span>((z2.x-z1.x)*(z2.x-z1.x)+(z2.y-z1.y)*(z2.y-z1.y)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-6输出学生成绩"><a href="#5-6输出学生成绩" class="headerlink" title="5-6输出学生成绩"></a>5-6输出学生成绩</h2><p>本题要求编写程序，根据输入学生的成绩，统计并输出学生的平均成绩、最高成绩和最低成绩。建议使用动态内存分配来实现。</p><h3 id="输入格式：-32"><a href="#输入格式：-32" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行首先给出一个正整数N，表示学生的个数。接下来一行给出N个学生的成绩，数字间以空格分隔。</p><h3 id="输出格式：-33"><a href="#输出格式：-33" class="headerlink" title="输出格式："></a>输出格式：</h3><p>按照以下格式输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">average = 平均成绩</span><br><span class="line">max = 最高成绩</span><br><span class="line">min = 最低成绩</span><br></pre></td></tr></table></figure><p>结果均保留两位小数。</p><h3 id="输入样例：-46"><a href="#输入样例：-46" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">85 90 95</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-50"><a href="#输出样例：-50" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">average = 90.00</span><br><span class="line">max = 95.00</span><br><span class="line">min = 85.00</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-83"><a href="#代码：-83" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;STU;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    STU date;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">head</span>=</span><span class="literal">NULL</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">end</span>=</span><span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> max=<span class="number">0</span>,min=<span class="number">100</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">Node</span>=</span>(<span class="keyword">struct</span> Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">        Node-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d &quot;</span>,&amp;Node-&gt;date.score);</span><br><span class="line">        sum+=Node-&gt;date.score;</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">NULL</span>==head)</span><br><span class="line">            head=Node;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            end-&gt;next=Node;</span><br><span class="line">        end=Node;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">temp</span>=</span>(<span class="keyword">struct</span> Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    temp=head;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">NULL</span>!=temp)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(max&lt;temp-&gt;date.score)</span><br><span class="line">            max=temp-&gt;date.score;</span><br><span class="line">        <span class="keyword">if</span>(min&gt;temp-&gt;date.score)</span><br><span class="line">            min=temp-&gt;date.score;</span><br><span class="line">        temp=temp-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;average = %.2lf\nmax = %.2lf\nmin = %.2lf&quot;</span>,sum/n,max,min);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-7自动售货机"><a href="#5-7自动售货机" class="headerlink" title="5-7自动售货机"></a>5-7自动售货机</h2><p>如图所示的简易自动售货机，物品架1、2上共有10样商品，按顺序进行编号分别为1－10，标有价格与名称，一个编号对应一个可操作按钮，供选择商品使用。如果物架上的商品被用户买走，储物柜中会自动取出商品送到物架上，保证物品架上一定会有商品。用户可以一次投入较多钱币，并可以选择多样商品，售货机可以一次性将商品输出并找零钱。</p><p><img src="https://images.ptausercontent.com/e2bba5b3-dd4a-44fe-8aaf-51a520f3c2cf.jpg" alt="1.jpg"></p><p>用户购买商品的操作方法是：</p><p>（1）从“钱币入口”放入钱币，依次放入多个硬币或纸币。钱币可支持1元（纸币、硬币）、2元（纸币）、5元（纸币）、10元（纸币），放入钱币时，控制器会先对钱币进行检验识别出币值，并统计币值总额，显示在控制器显示屏中，提示用户确认钱币放入完毕；</p><p>（2）用户确认钱币放入完毕，便可选择商品，只要用手指按对应商品外面的编号按钮即可。每选中一样商品，售货机控制器会判断钱币是否足够购买，如果钱币足够，自动根据编号将物品进行计数和计算所需钱币值，并提示余额。如果钱币不足，控制器则提示“Insufficient money”。用户可以取消购买，将会把所有放入钱币退回给用户。</p><h3 id="输入格式-20"><a href="#输入格式-20" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>先输入钱币值序列，以-1作为结束，再依次输入多个购买商品编号，以-1结束。</p><h3 id="输出格式-19"><a href="#输出格式-19" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出钱币总额与找回零钱，以及所购买商品名称及数量。</p><h3 id="输入样例-20"><a href="#输入样例-20" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 1 2 2 5 5 10 10 -1</span><br><span class="line">1 2 3 5 1 6 9 10 -1</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-19"><a href="#输出样例-19" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Total:36yuan,change:19yuan</span><br><span class="line">Table-water:2;Table-water:1;Table-water:1;Milk:1;Beer:1;Oolong-Tea:1;Green-Tea:1;</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-84"><a href="#代码：-84" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> label;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> price;</span><br><span class="line">    <span class="type">int</span> number;</span><br><span class="line">&#125;commodity[<span class="number">10</span>]=&#123;&#123;<span class="number">1</span>,<span class="string">&quot;Table-water&quot;</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">2</span>,<span class="string">&quot;Table-water&quot;</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">3</span>,<span class="string">&quot;Table-water&quot;</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">4</span>,<span class="string">&quot;Coca-Cola&quot;</span>,<span class="number">2</span>,<span class="number">0</span>&#125;,&#123;<span class="number">5</span>,<span class="string">&quot;Milk&quot;</span>,<span class="number">2</span>,<span class="number">0</span>&#125;,&#123;<span class="number">6</span>,<span class="string">&quot;Beer&quot;</span>,<span class="number">3</span>,<span class="number">0</span>&#125;,&#123;<span class="number">7</span>,<span class="string">&quot;Orange-Juice&quot;</span>,<span class="number">3</span>,<span class="number">0</span>&#125;,&#123;<span class="number">8</span>,<span class="string">&quot;Srite&quot;</span>,<span class="number">3</span>,<span class="number">0</span>&#125;,&#123;<span class="number">9</span>,<span class="string">&quot;Oolong-Tea&quot;</span>,<span class="number">4</span>,<span class="number">0</span>&#125;,&#123;<span class="number">10</span>,<span class="string">&quot;Green-Tea&quot;</span>,<span class="number">4</span>,<span class="number">0</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">commodity</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">&#125;COMM;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    COMM date;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">head</span>=</span><span class="literal">NULL</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">end</span>=</span><span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">Node</span>=</span>(<span class="keyword">struct</span> Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">        Node-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d &quot;</span>,&amp;Node-&gt;date.m);</span><br><span class="line">        <span class="keyword">if</span>(Node-&gt;date.m==<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">free</span>(Node);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">NULL</span>==head)</span><br><span class="line">                head=Node;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                end-&gt;next=Node;</span><br><span class="line">            end=Node;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">temp</span>=</span>(<span class="keyword">struct</span> Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    temp=head;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">NULL</span>!=temp)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d &quot;</span>,&amp;temp-&gt;date.num);</span><br><span class="line">        temp=temp-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    temp=head;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">NULL</span>!=temp)</span><br><span class="line">    &#123;</span><br><span class="line">        sum+=temp-&gt;date.m;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(temp-&gt;date.num==commodity[i].label)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(temp-&gt;date.m&gt;=commodity[i].price)</span><br><span class="line">                &#123;</span><br><span class="line">                    commodity[i].number++;</span><br><span class="line">                    s+=commodity[i].price;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Insufficient money&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        temp=temp-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Total:%dyuan,change:%dyuan\n&quot;</span>,sum,sum-s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(commodity[i].number&gt;<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s:%d;&quot;</span>,commodity[i].name,commodity[i].number);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-8找出总分最高的学生"><a href="#5-8找出总分最高的学生" class="headerlink" title="5-8找出总分最高的学生"></a>5-8找出总分最高的学生</h2><p>给定N个学生的基本信息，包括学号（由5个数字组成的字符串）、姓名（长度小于10的不包含空白字符的非空字符串）和3门课程的成绩（[0,100]区间内的整数），要求输出总分最高学生的姓名、学号和总分。</p><h3 id="输入格式：-33"><a href="#输入格式：-33" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出正整数N（≤10）。随后N行，每行给出一位学生的信息，格式为“学号 姓名 成绩1 成绩2 成绩3”，中间以空格分隔。</p><h3 id="输出格式：-34"><a href="#输出格式：-34" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出总分最高学生的姓名、学号和总分，间隔一个空格。题目保证这样的学生是唯一的。</p><h3 id="输入样例：-47"><a href="#输入样例：-47" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">00001 huanglan 78 83 75</span><br><span class="line">00002 wanghai 76 80 77</span><br><span class="line">00003 shenqiang 87 83 76</span><br><span class="line">10001 zhangfeng 92 88 78</span><br><span class="line">21987 zhangmeng 80 82 75</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例：-51"><a href="#输出样例：-51" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zhangfeng 10001 258</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-85"><a href="#代码：-85" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> stunum[<span class="number">6</span>];</span><br><span class="line">    <span class="type">char</span> name[<span class="number">11</span>];</span><br><span class="line">    <span class="type">int</span> score1;</span><br><span class="line">    <span class="type">int</span> score2;</span><br><span class="line">    <span class="type">int</span> score3;</span><br><span class="line">    <span class="type">int</span> sum;</span><br><span class="line">&#125;STU;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    STU date;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">head</span>=</span><span class="literal">NULL</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">end</span>=</span><span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> max=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">Node</span>=</span>(<span class="keyword">struct</span> Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">        Node-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s %s %d %d %d&quot;</span>,&amp;Node-&gt;date.stunum,&amp;Node-&gt;date.name,&amp;Node-&gt;date.score1,&amp;Node-&gt;date.score2,&amp;Node-&gt;date.score3);</span><br><span class="line">        Node-&gt;date.sum=Node-&gt;date.score1+Node-&gt;date.score2+Node-&gt;date.score3;</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">NULL</span>==head)</span><br><span class="line">            head=Node;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            end-&gt;next=Node;</span><br><span class="line">        end=Node;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">temp</span>=</span>(<span class="keyword">struct</span> Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">t</span>=</span>(<span class="keyword">struct</span> Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    temp=head;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">NULL</span>!=temp)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(max&lt;temp-&gt;date.sum)</span><br><span class="line">        &#123;</span><br><span class="line">            max=temp-&gt;date.sum;</span><br><span class="line">            t=temp;</span><br><span class="line">        &#125;</span><br><span class="line">        temp=temp-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s %s %d&quot;</span>,t-&gt;date.name,t-&gt;date.stunum,t-&gt;date.sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-9选夫婿"><a href="#5-9选夫婿" class="headerlink" title="5-9选夫婿^_^"></a>5-9选夫婿^_^</h2><p>倾国倾城的大家闺秀潘小姐要选夫婿啦！武林中各门各派，武林外各大户人家，闻讯纷纷前来，强势围观。前来参与竞选的男生藏龙卧虎，高手云集，才子遍布，帅哥纷纭，更不乏富二代，官二代，可谓声势空前。</p><p>每个人参与竞选的帅哥除了进行一段激情洋溢的求婚演讲以外，还要报上自己姓名、身高和体重，以及个人简历。最后再进行文武选拔，最后夺魁者方能得到潘小姐的芳心。</p><p>潘小姐不爱名利，只看人，第一关就是身高和体重要合格，即必须在其要求的范围内，否则直接排除在外，不允许参加下一轮的选拔。</p><p>作为一个程序员，你没有钱也没有权，擅长的也就是编程了。潘小姐也发现了这一点，所以把首轮根据身高体重进行选拔的任务交给了你，如果完成的好，你可以直接进入下一轮选拔，你笑了。</p><h3 id="输入格式-21"><a href="#输入格式-21" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>潘小姐给你了所有报名男生的信息。输入数据的第一行是一个正整数N(0 &lt; N &lt; 1000)。然后N行数据，每行包含三部分，用空格隔开。第一部分是报名者的姓名name(长度小于20的字符串)，然后是整数身高h（0 &lt; h &lt; 300），第三部分是整数体重w (0 &lt; w &lt; 200)。</p><p>最后一行是四个整数a,b,c,d.表示身高的合格范围是[a,b],体重的合格范围是[c,d]（0 &lt; a &lt; b &lt; 200, 0 &lt; c &lt; d &lt; 300）。</p><h3 id="输出格式-20"><a href="#输出格式-20" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>你需要把合格的男生信息按照身高从低到高输出，格式跟输入一样，也是每行三个信息，共N行，如果身高相同则按体重从轻到重输出，如果身高相同并且体重相同则按照输入顺序依次输出，若没有合格人选则输出NO，具体格式见样例。</p><h3 id="输入样例-21"><a href="#输入样例-21" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">武大郎 70 40</span><br><span class="line">西门庆 180 70</span><br><span class="line">李逵 160 150</span><br><span class="line">燕青 175 69</span><br><span class="line">鲁智深 180 100</span><br><span class="line">武松 180 75</span><br><span class="line">小泉纯一狼 30 20</span><br><span class="line">孙二娘 169 60</span><br><span class="line">165 190 60 90</span><br></pre></td></tr></table></figure><h3 id="输出样例-20"><a href="#输出样例-20" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">孙二娘 169 60</span><br><span class="line">燕青 175 69</span><br><span class="line">西门庆 180 70</span><br><span class="line">武松 180 75</span><br></pre></td></tr></table></figure><h3 id="代码：-86"><a href="#代码：-86" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">m</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">21</span>];</span><br><span class="line">    <span class="type">int</span> h,w;</span><br><span class="line">&#125;MAN[<span class="number">1000</span>],t;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n,i,j;</span><br><span class="line">    <span class="type">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> h1,h2,w1,w2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s %d %d&quot;</span>,&amp;MAN[i].name,&amp;MAN[i].h,&amp;MAN[i].w);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>,&amp;h1,&amp;h2,&amp;w1,&amp;w2);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n<span class="number">-1</span>-i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(MAN[j].h&gt;MAN[j+<span class="number">1</span>].h)</span><br><span class="line">            &#123;</span><br><span class="line">                t=MAN[j];</span><br><span class="line">                MAN[j]=MAN[j+<span class="number">1</span>];</span><br><span class="line">                MAN[j+<span class="number">1</span>]=t;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(MAN[j].h==MAN[j+<span class="number">1</span>].h)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(MAN[j].w&gt;MAN[j+<span class="number">1</span>].w)</span><br><span class="line">                &#123;</span><br><span class="line">                    t=MAN[j];</span><br><span class="line">                    MAN[j]=MAN[j+<span class="number">1</span>];</span><br><span class="line">                    MAN[j+<span class="number">1</span>]=t;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(MAN[i].h&gt;=h1 &amp;&amp; MAN[i].h&lt;=h2 &amp;&amp; MAN[i].w&gt;=w1 &amp;&amp; MAN[i].w&lt;=w2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %d %d\n&quot;</span>,MAN[i].name,MAN[i].h,MAN[i].w);</span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(num==<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-10小明的晚饭"><a href="#5-10小明的晚饭" class="headerlink" title="5-10小明的晚饭"></a>5-10小明的晚饭</h2><p>小明最近很用功学习，所以经常忘记吃饭。小明决定给自己放个假去大吃一顿，到了吃饭的地方后，小明陷入了沉思，因为他很纠结不知道吃什么,所以他全都要。小明的食量是无限的并且是个贪心的人，所以他想吃完自己支付范围内所有最贵的饭。他从最贵的饭店开始吃，若剩下的钱不足以吃当前最贵的饭店，则往下寻找较贵的饭店。直到钱财为空或者已经吃不起最便宜的饭了。当然小明是个有原则的人，他绝对不会重复吃已经吃过的餐厅。但是他学完习思考不出来该吃啥了，需要你的帮助 (Hint:小明不做其他选择，只要贵的，即使贵的饭吃的少而便宜的饭能吃的多，他也会选择最贵的)</p><h3 id="输入格式-22"><a href="#输入格式-22" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入一个p表示小明拥有的钱(1&lt;&#x3D;n&lt;&#x3D;10000)，在输入一个n表示小明有n(1&lt;&#x3D;n&lt;&#x3D;100)种选择，接下来的n行，每一行包含一个字符串表示饭店店名和在该饭店吃饭的价格。字符串长度不超过20。</p><h3 id="输出格式-21"><a href="#输出格式-21" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出小明能够吃到的饭，如果小明什么都吃不起，则输出“chitu”。</p><h3 id="输入样例-22"><a href="#输入样例-22" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">10 5</span><br><span class="line">McDonald&#x27;s 2</span><br><span class="line">KFC 6</span><br><span class="line">Yifan 1</span><br><span class="line">Erfan 3</span><br><span class="line">Sanfan 4</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="输出样例-21"><a href="#输出样例-21" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">KFC</span><br><span class="line">Sanfan</span><br><span class="line">结尾无空行</span><br></pre></td></tr></table></figure><h3 id="代码：-87"><a href="#代码：-87" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">food</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">&#125;M[<span class="number">100</span>],t;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> p,n;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;p,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s %d&quot;</span>,&amp;M[i].name,&amp;M[i].m);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(M[i].m&lt;M[j].m)</span><br><span class="line">            &#123;</span><br><span class="line">                t=M[i];</span><br><span class="line">                M[i]=M[j];</span><br><span class="line">                M[j]=t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p&lt;M[n<span class="number">-1</span>].m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;chitu\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p&gt;=M[i].m)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,M[i].name);</span><br><span class="line">                p=p-M[i].m;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C Language-Data structure and algorithm</title>
      <link href="/2022/04/19/C%20Language-Data%20structure%20and%20algorithm/"/>
      <url>/2022/04/19/C%20Language-Data%20structure%20and%20algorithm/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言程序设计-数据结构和算法"><a href="#C语言程序设计-数据结构和算法" class="headerlink" title="C语言程序设计-数据结构和算法"></a>C语言程序设计-数据结构和算法</h1><h2 id="1-1-合并两个有序数组"><a href="#1-1-合并两个有序数组" class="headerlink" title="1-1 合并两个有序数组"></a>1-1 合并两个有序数组</h2><p>要求实现一个函数merge，将元素个数为m的升序数组a和长度为n的升序数组b合并到数组a，合并后的数组仍然按升序排列。假设数组a的长度足够大。</p><h3 id="函数接口定义："><a href="#函数接口定义：" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">printArray</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> arr_size)</span>;  <span class="comment">/* 打印数组,细节不表 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> m, <span class="type">int</span>* b, <span class="type">int</span> n)</span>; <span class="comment">/* 合并a和b到a */</span></span><br></pre></td></tr></table></figure><p>其中a和b是按升序排列的数组，m为数组a中元素的个数，n为数组b的长度；合并后的升序数组仍然存放在a中。</p><h3 id="裁判测试程序样例："><a href="#裁判测试程序样例：" class="headerlink" title="裁判测试程序样例："></a>裁判测试程序样例：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">printArray</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> arr_size)</span>;  <span class="comment">/* 打印数组,细节不表 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> m, <span class="type">int</span>* b, <span class="type">int</span> n)</span>; <span class="comment">/* 合并a和b到a */</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> m, n, i;</span><br><span class="line">    <span class="type">int</span> *a, *b;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">    a = (<span class="type">int</span>*)<span class="built_in">malloc</span>((m + n) * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    b = (<span class="type">int</span>*)<span class="built_in">malloc</span>(n * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    merge(a, m, b, n);</span><br><span class="line">    printArray(a, m + n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">free</span>(a); <span class="built_in">free</span>(b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 请在这里填写答案 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><p>输入包含三行。 第一行为两个整数m和n，分别为数组a和数组b中元素的个数。 第二行为包含m个整数的有序数组a。 第三行为包含n个整数的有序数组b。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">7 11</span><br><span class="line">1 2 14 25 33 73 84</span><br><span class="line">5 6 17 27 68 68 74 79 80 85 87</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><p>输出为合并后按升序排列的数组。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2 5 6 14 17 25 27 33 68 68 73 74 79 80 84 85 87</span><br></pre></td></tr></table></figure><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> m, <span class="type">int</span>* b, <span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="type">int</span> *c;</span><br><span class="line">    <span class="type">int</span> a_index = <span class="number">0</span>, b_index = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> c_index = <span class="number">0</span>;</span><br><span class="line">     c = (<span class="type">int</span>*)<span class="built_in">malloc</span>((m + n) * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">while</span>(a_index &lt; m &amp;&amp; b_index &lt; n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(*(a + a_index) &lt; *(b + b_index))&#123;</span><br><span class="line">            *(c + c_index) = *(a + a_index);</span><br><span class="line">            c_index++, a_index++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            *(c + c_index) = *(b + b_index);</span><br><span class="line">            c_index++, b_index++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(a_index &lt; m)&#123;</span><br><span class="line">        *(c + c_index) = *(a + a_index);</span><br><span class="line">        c_index++, a_index++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(b_index &lt; n)&#123;</span><br><span class="line">        *(c + c_index) = *(b + b_index);</span><br><span class="line">        c_index++, b_index++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n+m;i++)</span><br><span class="line">        a[i]=c[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-2-顺序表的删除操作"><a href="#1-2-顺序表的删除操作" class="headerlink" title="1-2 顺序表的删除操作"></a>1-2 顺序表的删除操作</h2><p>本题要求实现一个函数，要求将顺序表的第i个元素删掉，成功删除返回1，否则返回0；</p><h3 id="函数接口定义：-1"><a href="#函数接口定义：-1" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">ListDelete</span><span class="params">(SqList &amp;L,<span class="type">int</span> i)</span>;</span><br></pre></td></tr></table></figure><p>其中SqList结构定义如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    ElemType *elem;</span><br><span class="line">    <span class="type">int</span> length;</span><br><span class="line"> &#125;SqList;</span><br></pre></td></tr></table></figure><h3 id="裁判测试程序样例：-1"><a href="#裁判测试程序样例：-1" class="headerlink" title="裁判测试程序样例："></a>裁判测试程序样例：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 5</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    ElemType *elem;</span><br><span class="line">    <span class="type">int</span> length;</span><br><span class="line"> &#125;SqList;</span><br><span class="line"><span class="type">void</span> <span class="title function_">InitList</span><span class="params">(SqList &amp;L)</span>;<span class="comment">/*细节在此不表*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ListDelete</span><span class="params">(SqList &amp;L,<span class="type">int</span> i)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    SqList L;</span><br><span class="line">    InitList(L);</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;i);</span><br><span class="line">    <span class="type">int</span> result=ListDelete(L,i);</span><br><span class="line">    <span class="keyword">if</span>(result==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Delete Error.The value of i is illegal!&quot;</span>);    </span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(result==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Delete Success.The elements of the SequenceList L are:&quot;</span>);    </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;L.length;j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>,L.elem[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 请在这里填写答案 */</span></span><br></pre></td></tr></table></figure><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入数据有1行，首先给出以-1结束的顺序表元素值（不超过100个，-1不属于顺序表元素），然后是删除位置。所有数据之间用空格分隔。</p><h3 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 6 4 -1 1</span><br></pre></td></tr></table></figure><h3 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Delete Success.The elements of the SequenceList L are: 6 4</span><br></pre></td></tr></table></figure><h3 id="代码：-1"><a href="#代码：-1" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">ListDelete</span><span class="params">(SqList &amp;L,<span class="type">int</span> i)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L.length &lt; i || i&lt;=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i<span class="number">-1</span>;j&lt;L.length;j++)&#123;</span><br><span class="line">            L.elem[j]=L.elem[j+<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        L.length-=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-3-查找元素"><a href="#1-3-查找元素" class="headerlink" title="1-3 查找元素"></a>1-3 查找元素</h2><p>已知顺序表的结构定义如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> size, length;</span><br><span class="line">    <span class="type">int</span> *element;</span><br><span class="line">&#125; ALIST;</span><br></pre></td></tr></table></figure><p>说明：<code>element</code> 为存储数据元素的动态数组的起始地址，<code>size</code> 为动态数组的尺寸，<code>length</code> 为顺序表的长度。</p><p>请编写函数，在顺序表中查找数据元素。</p><h4 id="函数原型"><a href="#函数原型" class="headerlink" title="函数原型"></a>函数原型</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">AListFind</span><span class="params">(<span class="type">const</span> ALIST *<span class="built_in">list</span>, <span class="type">int</span> element)</span>;</span><br></pre></td></tr></table></figure><p>说明：参数 <code>list</code> 为指示线性表(顺序表)的指针，<code>element</code> 为待查找的数据元素。函数在 <code>list</code> 所指线性表中查找首个与 <code>element</code> 所指数据元素相同的数据元素，若查找成功，则函数值为线性表中找到的首个匹配的数据元素的位序，否则为0。</p><h4 id="裁判程序"><a href="#裁判程序" class="headerlink" title="裁判程序"></a>裁判程序</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    ALIST a;</span><br><span class="line">    AListCreate(&amp;a);</span><br><span class="line">    AListInput(&amp;a);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    i = AListFind(&amp;a, &amp;x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">    AListDestroy(&amp;a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说明：AListCreate 函数创建顺序表，AListInput 函数输入顺序表，AListDestroy 函数销毁顺序表。</p><h4 id="输入样例1"><a href="#输入样例1" class="headerlink" title="输入样例1"></a>输入样例1</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">( 25, 36, 49, 64, 12, 58, 49, 81 )</span><br><span class="line">49</span><br></pre></td></tr></table></figure><h4 id="输出样例1"><a href="#输出样例1" class="headerlink" title="输出样例1"></a>输出样例1</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="输入样例2"><a href="#输入样例2" class="headerlink" title="输入样例2"></a>输入样例2</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">( 25, 36, 49, 64, 12, 58, 49, 81 )</span><br><span class="line">54</span><br></pre></td></tr></table></figure><h4 id="输出样例2"><a href="#输出样例2" class="headerlink" title="输出样例2"></a>输出样例2</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="代码：-2"><a href="#代码：-2" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">AListFind</span><span class="params">(<span class="type">const</span> ALIST *<span class="built_in">list</span>, <span class="type">int</span> element)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="built_in">list</span>-&gt;length;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">list</span>-&gt;element[i]==element)</span><br><span class="line">            <span class="keyword">return</span> i+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i == <span class="built_in">list</span>-&gt;length)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-4-单链表逆转"><a href="#1-4-单链表逆转" class="headerlink" title="1-4 单链表逆转"></a>1-4 单链表逆转</h2><p>本题要求实现一个函数，将给定的单链表逆转。</p><h3 id="函数接口定义：-2"><a href="#函数接口定义：-2" class="headerlink" title="函数接口定义："></a>函数接口定义：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List <span class="title function_">Reverse</span><span class="params">( List L )</span>;</span><br></pre></td></tr></table></figure><p>其中<code>List</code>结构定义如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">PtrToNode</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    ElementType Data; <span class="comment">/* 存储结点数据 */</span></span><br><span class="line">    PtrToNode   Next; <span class="comment">/* 指向下一个结点的指针 */</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> PtrToNode List; <span class="comment">/* 定义单链表类型 */</span></span><br></pre></td></tr></table></figure><p><code>L</code>是给定单链表，函数<code>Reverse</code>要返回被逆转后的链表。</p><h3 id="裁判测试程序样例：-2"><a href="#裁判测试程序样例：-2" class="headerlink" title="裁判测试程序样例："></a>裁判测试程序样例：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElementType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">PtrToNode</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    ElementType Data;</span><br><span class="line">    PtrToNode   Next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> PtrToNode List;</span><br><span class="line"></span><br><span class="line">List <span class="title function_">Read</span><span class="params">()</span>; <span class="comment">/* 细节在此不表 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Print</span><span class="params">( List L )</span>; <span class="comment">/* 细节在此不表 */</span></span><br><span class="line"></span><br><span class="line">List <span class="title function_">Reverse</span><span class="params">( List L )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    List L1, L2;</span><br><span class="line">    L1 = Read();</span><br><span class="line">    L2 = Reverse(L1);</span><br><span class="line">    Print(L1);</span><br><span class="line">    Print(L2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br></pre></td></tr></table></figure><h3 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 3 4 5 2</span><br></pre></td></tr></table></figure><h3 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2 5 4 3 1</span><br></pre></td></tr></table></figure><h3 id="代码：-3"><a href="#代码：-3" class="headerlink" title="代码："></a>代码：</h3><p><img src="/img/Data-structure/Data-structure-1.jpg" alt="Data-structure-1"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">List <span class="title function_">Reverse</span><span class="params">( List L )</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!L)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    List M = L;</span><br><span class="line">    List prev = <span class="literal">NULL</span>;</span><br><span class="line">    List temp = M-&gt;Next;</span><br><span class="line">    <span class="keyword">while</span>(temp)&#123;</span><br><span class="line">        M-&gt;Next = prev;</span><br><span class="line">        prev = M;</span><br><span class="line">        M = temp;</span><br><span class="line">        temp = M-&gt;Next;</span><br><span class="line">    &#125;</span><br><span class="line">    M-&gt;Next = prev;</span><br><span class="line">    <span class="keyword">return</span> M;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/04/19/hello-world/"/>
      <url>/2022/04/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
